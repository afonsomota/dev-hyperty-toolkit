{
  "HelloWorldObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10001,
    "version": "0.1",
    "description": "Description of HelloWorldObserver",
    "objectName": "HelloWorldObserver",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy",
    "hypertyType": [
      "hello"
    ]
  },
  "HelloWorldReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10002,
    "version": "0.1",
    "description": "Description of HelloWorldReporter",
    "objectName": "HelloWorldReporter",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy",
    "hypertyType": [
      "hello"
    ]
  },
  "GroupChat": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "GroupChat",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10003,
    "version": "0.1",
    "description": "Description of GroupChat",
    "objectName": "GroupChat",
    "configuration": {},
    "hypertyType": [
      "chat"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Communication"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "Location": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "Location",
      "encoding": "base64",
      "signature": ""
    },
    "hypertyType": [],
    "cguid": 10004,
    "version": "0.1",
    "description": "Description of Location",
    "objectName": "Location",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomUIObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomUIObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10005,
    "version": "0.1",
    "description": "Description of RoomUIObserver",
    "objectName": "RoomUIObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomUIReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomUIReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10006,
    "version": "0.1",
    "description": "Description of RoomUIReporter",
    "objectName": "RoomUIReporter",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "UserStatus": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "UserStatus",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10007,
    "version": "0.1",
    "description": "Description of UserStatus",
    "objectName": "UserStatus",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "GroupChatManager": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "GroupChatManager",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10008,
    "version": "0.1",
    "description": "Description of GroupChatManager",
    "objectName": "GroupChatManager",
    "configuration": {},
    "hypertyType": [
      "chat"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Communication"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "Connector": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "Connector",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10009,
    "version": "0.1",
    "description": "Description of Connector",
    "objectName": "Connector",
    "configuration": {
      "webrtc": {
        "iceServers": [
          {
            "url": "stun:stun.l.google.com:19302"
          },
          {
            "url": "turn:194.65.138.95:3478",
            "credential": "luis123",
            "username": "luis"
          }
        ]
      }
    },
    "hypertyType": [
      "audio",
      "video"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Connection"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "BraceletSensorObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "BraceletSensorObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10010,
    "version": "0.1",
    "description": "Description of BraceletSensorObserver",
    "objectName": "BraceletSensorObserver",
    "configuration": {},
    "hypertyType": [
      "heart_rate",
      "sleep",
      "steps",
      "battery"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Context"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "BraceletSensorReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "BraceletSensorReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10011,
    "version": "0.1",
    "description": "Description of BraceletSensorReporter",
    "objectName": "BraceletSensorReporter",
    "configuration": {},
    "hypertyType": [
      "heart_rate",
      "sleep",
      "steps",
      "battery"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Context"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "NotificationsObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "NotificationsObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10012,
    "version": "0.1",
    "description": "Description of NotificationsObserver",
    "objectName": "NotificationsObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "NotificationsReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "NotificationsReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10013,
    "version": "0.1",
    "description": "Description of NotificationsReporter",
    "objectName": "NotificationsReporter",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "SurveyObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "SurveyObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10014,
    "version": "0.1",
    "description": "Description of SurveyObserver",
    "objectName": "SurveyObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "SurveyReporter": {
    "sourcePackage": {
      "sourceCode": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuYWN0aXZhdGUgPSBmKCl9fSkoZnVuY3Rpb24oKXt2YXIgZGVmaW5lLG1vZHVsZSxleHBvcnRzO3JldHVybiAoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitvKyInIik7dGhyb3cgZi5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKKGZ1bmN0aW9uIChnbG9iYWwpewovKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi8NCg0KLy8gRGlzdHJpYnV0aW9uIGZpbGUgZm9yIEh5cGVydHlEaXNjb3ZlcnkuanMgDQovLyB2ZXJzaW9uOiAwLjMuMA0KLy8gTGFzdCBidWlsZDogVGh1IEp1bCAyMSAyMDE2IDE1OjMxOjIzIEdNVCswMTAwIChXRVNUKQ0KDQohZnVuY3Rpb24oZSl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxlKTtlbHNle3ZhciB0O3Q9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLHQuSHlwZXJ0eURpc2NvdmVyeT1lKCl9fShmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbiBlKHQscixuKXtmdW5jdGlvbiBvKGMscyl7aWYoIXJbY10pe2lmKCF0W2NdKXt2YXIgdT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighcyYmdSlyZXR1cm4gdShjLCEwKTtpZihpKXJldHVybiBpKGMsITApO3ZhciBhPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2MrIiciKTt0aHJvdyBhLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGF9dmFyIGY9cltjXT17ZXhwb3J0czp7fX07dFtjXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgcj10W2NdWzFdW2VdO3JldHVybiBvKHI/cjplKX0sZixmLmV4cG9ydHMsZSx0LHIsbil9cmV0dXJuIHJbY10uZXhwb3J0c31mb3IodmFyIGk9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsYz0wO2M8bi5sZW5ndGg7YysrKW8obltjXSk7cmV0dXJuIG99KHsxOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5Ijo3fV0sMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjh9XSwzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIjo5fV0sNDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiOjEwfV0sNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtyLl9fZXNNb2R1bGU9ITAsclsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9fSx7fV0sNjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxpPW4obyk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbj10W3JdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBuJiYobi53cml0YWJsZT0hMCksKDAsaVsiZGVmYXVsdCJdKShlLG4ua2V5LG4pfX1yZXR1cm4gZnVuY3Rpb24odCxyLG4pe3JldHVybiByJiZlKHQucHJvdG90eXBlLHIpLG4mJmUodCxuKSx0fX0oKX0seyIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjJ9XSw3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLG89bi5KU09OfHwobi5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uc3RyaW5naWZ5LmFwcGx5KG8sYXJndW1lbnRzKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTh9XSw4OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSIpO3ZhciBuPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5kZWZpbmVQcm9wZXJ0eShlLHQscil9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjE4LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Ijo3NH1dLDk6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LmtleXN9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTgsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjo3NX1dLDEwOltmdW5jdGlvbihlLHQscil7ZSgiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciIpLGUoIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSIpLGUoIi4uL21vZHVsZXMvZXM2LnByb21pc2UiKSx0LmV4cG9ydHM9ZSgiLi4vbW9kdWxlcy9fY29yZSIpLlByb21pc2V9LHsiLi4vbW9kdWxlcy9fY29yZSI6MTgsIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjc2LCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIjo3NywiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIjo3OCwiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjo3OX1dLDExOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSx7fV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMTM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW4mJm4gaW4gZSl0aHJvdyBUeXBlRXJyb3IocisiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiKTtyZXR1cm4gZX19LHt9XSwxNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbihlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGV9fSx7Ii4vX2lzLW9iamVjdCI6MzV9XSwxNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWlvYmplY3QiKSxvPWUoIi4vX3RvLWxlbmd0aCIpLGk9ZSgiLi9fdG8taW5kZXgiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscixjKXt2YXIgcyx1PW4odCksYT1vKHUubGVuZ3RoKSxmPWkoYyxhKTtpZihlJiZyIT1yKXtmb3IoO2E+ZjspaWYocz11W2YrK10scyE9cylyZXR1cm4hMH1lbHNlIGZvcig7YT5mO2YrKylpZigoZXx8ZiBpbiB1KSYmdVtmXT09PXIpcmV0dXJuIGV8fGZ8fDA7cmV0dXJuIWUmJi0xfX19LHsiLi9fdG8taW5kZXgiOjY0LCIuL190by1pb2JqZWN0Ijo2NiwiLi9fdG8tbGVuZ3RoIjo2N31dLDE2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fY29mIiksbz1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1uKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSksYz1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChyKXt9fTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixzO3JldHVybiB2b2lkIDA9PT1lPyJVbmRlZmluZWQiOm51bGw9PT1lPyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9Yyh0PU9iamVjdChlKSxvKSk/cjppP24odCk6Ik9iamVjdCI9PShzPW4odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6c319LHsiLi9fY29mIjoxNywiLi9fd2tzIjo3MX1dLDE3OltmdW5jdGlvbihlLHQscil7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj10LmV4cG9ydHM9e3ZlcnNpb246IjIuNC4wIn07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9bil9LHt9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2EtZnVuY3Rpb24iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LHsiLi9fYS1mdW5jdGlvbiI6MTF9XSwyMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZih2b2lkIDA9PWUpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIitlKTtyZXR1cm4gZX19LHt9XSwyMTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZmFpbHMiOjI1fV0sMjI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKSxvPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50LGk9bihvKSYmbihvLmNyZWF0ZUVsZW1lbnQpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSx7Ii4vX2dsb2JhbCI6MjcsIi4vX2lzLW9iamVjdCI6MzV9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSx7fV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2N0eCIpLGM9ZSgiLi9faGlkZSIpLHM9InByb3RvdHlwZSIsdT1mdW5jdGlvbihlLHQscil7dmFyIGEsZixfLGw9ZSZ1LkYsZD1lJnUuRyxwPWUmdS5TLHY9ZSZ1LlAseT1lJnUuQixoPWUmdS5XLGI9ZD9vOm9bdF18fChvW3RdPXt9KSxtPWJbc10sZz1kP246cD9uW3RdOihuW3RdfHx7fSlbc107ZCYmKHI9dCk7Zm9yKGEgaW4gcilmPSFsJiZnJiZ2b2lkIDAhPT1nW2FdLGYmJmEgaW4gYnx8KF89Zj9nW2FdOnJbYV0sYlthXT1kJiYiZnVuY3Rpb24iIT10eXBlb2YgZ1thXT9yW2FdOnkmJmY/aShfLG4pOmgmJmdbYV09PV8/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLG4pe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLG4pfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHRbc109ZVtzXSx0fShfKTp2JiYiZnVuY3Rpb24iPT10eXBlb2YgXz9pKEZ1bmN0aW9uLmNhbGwsXyk6Xyx2JiYoKGIudmlydHVhbHx8KGIudmlydHVhbD17fSkpW2FdPV8sZSZ1LlImJm0mJiFtW2FdJiZjKG0sYSxfKSkpfTt1LkY9MSx1Lkc9Mix1LlM9NCx1LlA9OCx1LkI9MTYsdS5XPTMyLHUuVT02NCx1LlI9MTI4LHQuZXhwb3J0cz11fSx7Ii4vX2NvcmUiOjE4LCIuL19jdHgiOjE5LCIuL19nbG9iYWwiOjI3LCIuL19oaWRlIjoyOX1dLDI1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaCh0KXtyZXR1cm4hMH19fSx7fV0sMjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jdHgiKSxvPWUoIi4vX2l0ZXItY2FsbCIpLGk9ZSgiLi9faXMtYXJyYXktaXRlciIpLGM9ZSgiLi9fYW4tb2JqZWN0Iikscz1lKCIuL190by1sZW5ndGgiKSx1PWUoIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIiksYT17fSxmPXt9LHI9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLF8sbCl7dmFyIGQscCx2LHksaD1sP2Z1bmN0aW9uKCl7cmV0dXJuIGV9OnUoZSksYj1uKHIsXyx0PzI6MSksbT0wO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBoKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGl0ZXJhYmxlISIpO2lmKGkoaCkpe2ZvcihkPXMoZS5sZW5ndGgpO2Q+bTttKyspaWYoeT10P2IoYyhwPWVbbV0pWzBdLHBbMV0pOmIoZVttXSkseT09PWF8fHk9PT1mKXJldHVybiB5fWVsc2UgZm9yKHY9aC5jYWxsKGUpOyEocD12Lm5leHQoKSkuZG9uZTspaWYoeT1vKHYsYixwLnZhbHVlLHQpLHk9PT1hfHx5PT09ZilyZXR1cm4geX07ci5CUkVBSz1hLHIuUkVUVVJOPWZ9LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fY3R4IjoxOSwiLi9faXMtYXJyYXktaXRlciI6MzQsIi4vX2l0ZXItY2FsbCI6MzYsIi4vX3RvLWxlbmd0aCI6NjcsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjo3Mn1dLDI3OltmdW5jdGlvbihlLHQscil7dmFyIG49dC5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPW4pfSx7fV0sMjg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCl9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3QtZHAiKSxvPWUoIi4vX3Byb3BlcnR5LWRlc2MiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZihlLHQsbygxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19vYmplY3QtZHAiOjQ1LCIuL19wcm9wZXJ0eS1kZXNjIjo1M31dLDMwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR9LHsiLi9fZ2xvYmFsIjoyN31dLDMxOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSFlKCIuL19kZXNjcmlwdG9ycyIpJiYhZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZSgiLi9fZG9tLWNyZWF0ZSIpKCJkaXYiKSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2RvbS1jcmVhdGUiOjIyLCIuL19mYWlscyI6MjV9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7dmFyIG49dm9pZCAwPT09cjtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbj9lKCk6ZS5jYWxsKHIpO2Nhc2UgMTpyZXR1cm4gbj9lKHRbMF0pOmUuY2FsbChyLHRbMF0pO2Nhc2UgMjpyZXR1cm4gbj9lKHRbMF0sdFsxXSk6ZS5jYWxsKHIsdFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0pO2Nhc2UgNDpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdLHRbM10pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdLHRbM10pfXJldHVybiBlLmFwcGx5KHIsdCl9fSx7fV0sMzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jb2YiKTt0LmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1uKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LHsiLi9fY29mIjoxN31dLDM0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXRlcmF0b3JzIiksbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0seyIuL19pdGVyYXRvcnMiOjQxLCIuL193a3MiOjcxfV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0se31dLDM2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fYW4tb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe3RyeXtyZXR1cm4gbz90KG4ocilbMF0sclsxXSk6dChyKX1jYXRjaChpKXt2YXIgYz1lWyJyZXR1cm4iXTt0aHJvdyB2b2lkIDAhPT1jJiZuKGMuY2FsbChlKSksaX19fSx7Ii4vX2FuLW9iamVjdCI6MTR9XSwzNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19vYmplY3QtY3JlYXRlIiksbz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksaT1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLGM9e307ZSgiLi9faGlkZSIpKGMsZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9bihjLHtuZXh0Om8oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LHsiLi9faGlkZSI6MjksIi4vX29iamVjdC1jcmVhdGUiOjQ0LCIuL19wcm9wZXJ0eS1kZXNjIjo1MywiLi9fc2V0LXRvLXN0cmluZy10YWciOjU4LCIuL193a3MiOjcxfV0sMzg6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fbGlicmFyeSIpLG89ZSgiLi9fZXhwb3J0IiksaT1lKCIuL19yZWRlZmluZSIpLGM9ZSgiLi9faGlkZSIpLHM9ZSgiLi9faGFzIiksdT1lKCIuL19pdGVyYXRvcnMiKSxhPWUoIi4vX2l0ZXItY3JlYXRlIiksZj1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLF89ZSgiLi9fb2JqZWN0LWdwbyIpLGw9ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZD0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxwPSJAQGl0ZXJhdG9yIix2PSJrZXlzIix5PSJ2YWx1ZXMiLGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLGIsbSxnLGope2Eocix0LGIpO3ZhciB4LHcsayxPPWZ1bmN0aW9uKGUpe2lmKCFkJiZlIGluIEUpcmV0dXJuIEVbZV07c3dpdGNoKGUpe2Nhc2UgdjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX07Y2FzZSB5OnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LE09dCsiIEl0ZXJhdG9yIixQPW09PXksUz0hMSxFPWUucHJvdG90eXBlLFU9RVtsXXx8RVtwXXx8bSYmRVttXSxUPVV8fE8obSksUj1tP1A/TygiZW50cmllcyIpOlQ6dm9pZCAwLEw9IkFycmF5Ij09dD9FLmVudHJpZXN8fFU6VTtpZihMJiYoaz1fKEwuY2FsbChuZXcgZSkpLGshPT1PYmplY3QucHJvdG90eXBlJiYoZihrLE0sITApLG58fHMoayxsKXx8YyhrLGwsaCkpKSxQJiZVJiZVLm5hbWUhPT15JiYoUz0hMCxUPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY2FsbCh0aGlzKX0pLG4mJiFqfHwhZCYmIVMmJkVbbF18fGMoRSxsLFQpLHVbdF09VCx1W01dPWgsbSlpZih4PXt2YWx1ZXM6UD9UOk8oeSksa2V5czpnP1Q6Tyh2KSxlbnRyaWVzOlJ9LGopZm9yKHcgaW4geCl3IGluIEV8fGkoRSx3LHhbd10pO2Vsc2UgbyhvLlArby5GKihkfHxTKSx0LHgpO3JldHVybiB4fX0seyIuL19leHBvcnQiOjI0LCIuL19oYXMiOjI4LCIuL19oaWRlIjoyOSwiLi9faXRlci1jcmVhdGUiOjM3LCIuL19pdGVyYXRvcnMiOjQxLCIuL19saWJyYXJ5Ijo0MiwiLi9fb2JqZWN0LWdwbyI6NDgsIi4vX3JlZGVmaW5lIjo1NSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjU4LCIuL193a3MiOjcxfV0sMzk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxvPSExO3RyeXt2YXIgaT1bN11bbl0oKTtpWyJyZXR1cm4iXT1mdW5jdGlvbigpe289ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChjKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFvKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10sYz1pW25dKCk7Yy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbbl09ZnVuY3Rpb24oKXtyZXR1cm4gY30sZShpKX1jYXRjaChzKXt9cmV0dXJuIHJ9fSx7Ii4vX3drcyI6NzF9XSw0MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LHt9XSw0MTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17fX0se31dLDQyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSEwfSx7fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX3Rhc2siKS5zZXQsaT1uLk11dGF0aW9uT2JzZXJ2ZXJ8fG4uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixjPW4ucHJvY2VzcyxzPW4uUHJvbWlzZSx1PSJwcm9jZXNzIj09ZSgiLi9fY29mIikoYyk7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLGE9ZnVuY3Rpb24oKXt2YXIgbixvO2Zvcih1JiYobj1jLmRvbWFpbikmJm4uZXhpdCgpO2U7KXtvPWUuZm4sZT1lLm5leHQ7dHJ5e28oKX1jYXRjaChpKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxpfX10PXZvaWQgMCxuJiZuLmVudGVyKCl9O2lmKHUpcj1mdW5jdGlvbigpe2MubmV4dFRpY2soYSl9O2Vsc2UgaWYoaSl7dmFyIGY9ITAsXz1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkoYSkub2JzZXJ2ZShfLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe18uZGF0YT1mPSFmfX1lbHNlIGlmKHMmJnMucmVzb2x2ZSl7dmFyIGw9cy5yZXNvbHZlKCk7cj1mdW5jdGlvbigpe2wudGhlbihhKX19ZWxzZSByPWZ1bmN0aW9uKCl7by5jYWxsKG4sYSl9O3JldHVybiBmdW5jdGlvbihuKXt2YXIgbz17Zm46bixuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1vKSxlfHwoZT1vLHIoKSksdD1vfX19LHsiLi9fY29mIjoxNywiLi9fZ2xvYmFsIjoyNywiLi9fdGFzayI6NjN9XSw0NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpLG89ZSgiLi9fb2JqZWN0LWRwcyIpLGk9ZSgiLi9fZW51bS1idWcta2V5cyIpLGM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLHM9ZnVuY3Rpb24oKXt9LHU9InByb3RvdHlwZSIsYT1mdW5jdGlvbigpe3ZhciB0LHI9ZSgiLi9fZG9tLWNyZWF0ZSIpKCJpZnJhbWUiKSxuPWkubGVuZ3RoLG89Ij4iO2ZvcihyLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGUoIi4vX2h0bWwiKS5hcHBlbmRDaGlsZChyKSxyLnNyYz0iamF2YXNjcmlwdDoiLHQ9ci5jb250ZW50V2luZG93LmRvY3VtZW50LHQub3BlbigpLHQud3JpdGUoIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8L3NjcmlwdCIrbyksdC5jbG9zZSgpLGE9dC5GO24tLTspZGVsZXRlIGFbdV1baVtuXV07cmV0dXJuIGEoKX07dC5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhzW3VdPW4oZSkscj1uZXcgcyxzW3VdPW51bGwscltjXT1lKTpyPWEoKSx2b2lkIDA9PT10P3I6byhyLHQpfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19kb20tY3JlYXRlIjoyMiwiLi9fZW51bS1idWcta2V5cyI6MjMsIi4vX2h0bWwiOjMwLCIuL19vYmplY3QtZHBzIjo0NiwiLi9fc2hhcmVkLWtleSI6NTl9XSw0NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpLG89ZSgiLi9faWU4LWRvbS1kZWZpbmUiKSxpPWUoIi4vX3RvLXByaW1pdGl2ZSIpLGM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobihlKSx0PWkodCwhMCksbihyKSxvKXRyeXtyZXR1cm4gYyhlLHQscil9Y2F0Y2gocyl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9faWU4LWRvbS1kZWZpbmUiOjMxLCIuL190by1wcmltaXRpdmUiOjY5fV0sNDY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3QtZHAiKSxvPWUoIi4vX2FuLW9iamVjdCIpLGk9ZSgiLi9fb2JqZWN0LWtleXMiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe28oZSk7Zm9yKHZhciByLGM9aSh0KSxzPWMubGVuZ3RoLHU9MDtzPnU7KW4uZihlLHI9Y1t1KytdLHRbcl0pO3JldHVybiBlfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX29iamVjdC1kcCI6NDUsIi4vX29iamVjdC1rZXlzIjo1MH1dLDQ3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LXBpZSIpLG89ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fdG8taW9iamVjdCIpLGM9ZSgiLi9fdG8tcHJpbWl0aXZlIikscz1lKCIuL19oYXMiKSx1PWUoIi4vX2llOC1kb20tZGVmaW5lIiksYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP2E6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1jKHQsITApLHUpdHJ5e3JldHVybiBhKGUsdCl9Y2F0Y2gocil7fWlmKHMoZSx0KSlyZXR1cm4gbyghbi5mLmNhbGwoZSx0KSxlW3RdKX19LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19oYXMiOjI4LCIuL19pZTgtZG9tLWRlZmluZSI6MzEsIi4vX29iamVjdC1waWUiOjUxLCIuL19wcm9wZXJ0eS1kZXNjIjo1MywiLi9fdG8taW9iamVjdCI6NjYsIi4vX3RvLXByaW1pdGl2ZSI6Njl9XSw0ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hhcyIpLG89ZSgiLi9fdG8tb2JqZWN0IiksaT1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIiksYz1PYmplY3QucHJvdG90eXBlO3QuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlPW8oZSksbihlLGkpP2VbaV06ImZ1bmN0aW9uIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/YzpudWxsfX0seyIuL19oYXMiOjI4LCIuL19zaGFyZWQta2V5Ijo1OSwiLi9fdG8tb2JqZWN0Ijo2OH1dLDQ5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faGFzIiksbz1lKCIuL190by1pb2JqZWN0IiksaT1lKCIuL19hcnJheS1pbmNsdWRlcyIpKCExKSxjPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW8oZSksdT0wLGE9W107Zm9yKHIgaW4gcylyIT1jJiZuKHMscikmJmEucHVzaChyKTtmb3IoO3QubGVuZ3RoPnU7KW4ocyxyPXRbdSsrXSkmJih+aShhLHIpfHxhLnB1c2gocikpO3JldHVybiBhfX0seyIuL19hcnJheS1pbmNsdWRlcyI6MTUsIi4vX2hhcyI6MjgsIi4vX3NoYXJlZC1rZXkiOjU5LCIuL190by1pb2JqZWN0Ijo2Nn1dLDUwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiKSxvPWUoIi4vX2VudW0tYnVnLWtleXMiKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSx7Ii4vX2VudW0tYnVnLWtleXMiOjIzLCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6NDl9XSw1MTpbZnVuY3Rpb24oZSx0LHIpe3IuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0se31dLDUyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZXhwb3J0Iiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19mYWlscyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPShvLk9iamVjdHx8e30pW2VdfHxPYmplY3RbZV0sYz17fTtjW2VdPXQociksbihuLlMrbi5GKmkoZnVuY3Rpb24oKXtyKDEpfSksIk9iamVjdCIsYyl9fSx7Ii4vX2NvcmUiOjE4LCIuL19leHBvcnQiOjI0LCIuL19mYWlscyI6MjV9XSw1MzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LHt9XSw1NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hpZGUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbyBpbiB0KXImJmVbb10/ZVtvXT10W29dOm4oZSxvLHRbb10pO3JldHVybiBlfX0seyIuL19oaWRlIjoyOX1dLDU1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2hpZGUiKX0seyIuL19oaWRlIjoyOX1dLDU2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iiksbz1lKCIuL19hbi1vYmplY3QiKSxpPWZ1bmN0aW9uKGUsdCl7aWYobyhlKSwhbih0KSYmbnVsbCE9PXQpdGhyb3cgVHlwZUVycm9yKHQrIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSEiKX07dC5leHBvcnRzPXtzZXQ6T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoIl9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKHQscixuKXt0cnl7bj1lKCIuL19jdHgiKShGdW5jdGlvbi5jYWxsLGUoIi4vX29iamVjdC1nb3BkIikuZihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQsMiksbih0LFtdKSxyPSEodCBpbnN0YW5jZW9mIEFycmF5KX1jYXRjaChvKXtyPSEwfXJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBpKGUsdCkscj9lLl9fcHJvdG9fXz10Om4oZSx0KSxlfX0oe30sITEpOnZvaWQgMCksY2hlY2s6aX19LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fY3R4IjoxOSwiLi9faXMtb2JqZWN0IjozNSwiLi9fb2JqZWN0LWdvcGQiOjQ3fV0sNTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19vYmplY3QtZHAiKSxjPWUoIi4vX2Rlc2NyaXB0b3JzIikscz1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD0iZnVuY3Rpb24iPT10eXBlb2Ygb1tlXT9vW2VdOm5bZV07YyYmdCYmIXRbc10mJmkuZih0LHMse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LHsiLi9fY29yZSI6MTgsIi4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fZ2xvYmFsIjoyNywiLi9fb2JqZWN0LWRwIjo0NSwiLi9fd2tzIjo3MX1dLDU4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWRwIikuZixvPWUoIi4vX2hhcyIpLGk9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbyhlPXI/ZTplLnByb3RvdHlwZSxpKSYmbihlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSx7Ii4vX2hhcyI6MjgsIi4vX29iamVjdC1kcCI6NDUsIi4vX3drcyI6NzF9XSw1OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3NoYXJlZCIpKCJrZXlzIiksbz1lKCIuL191aWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPW8oZSkpfX0seyIuL19zaGFyZWQiOjYwLCIuL191aWQiOjcwfV0sNjA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPSJfX2NvcmUtanNfc2hhcmVkX18iLGk9bltvXXx8KG5bb109e30pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaVtlXXx8KGlbZV09e30pfX0seyIuL19nbG9iYWwiOjI3fV0sNjE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX2EtZnVuY3Rpb24iKSxpPWUoIi4vX3drcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYz1uKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1jfHx2b2lkIDA9PShyPW4oYylbaV0pP3Q6byhyKX19LHsiLi9fYS1mdW5jdGlvbiI6MTEsIi4vX2FuLW9iamVjdCI6MTQsIi4vX3drcyI6NzF9XSw2MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWludGVnZXIiKSxvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGksYyxzPVN0cmluZyhvKHQpKSx1PW4ociksYT1zLmxlbmd0aDtyZXR1cm4gdTwwfHx1Pj1hP2U/IiI6dm9pZCAwOihpPXMuY2hhckNvZGVBdCh1KSxpPDU1Mjk2fHxpPjU2MzE5fHx1KzE9PT1hfHwoYz1zLmNoYXJDb2RlQXQodSsxKSk8NTYzMjB8fGM+NTczNDM/ZT9zLmNoYXJBdCh1KTppOmU/cy5zbGljZSh1LHUrMik6KGktNTUyOTY8PDEwKSsoYy01NjMyMCkrNjU1MzYpfX19LHsiLi9fZGVmaW5lZCI6MjAsIi4vX3RvLWludGVnZXIiOjY1fV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGksYz1lKCIuL19jdHgiKSxzPWUoIi4vX2ludm9rZSIpLHU9ZSgiLi9faHRtbCIpLGE9ZSgiLi9fZG9tLWNyZWF0ZSIpLGY9ZSgiLi9fZ2xvYmFsIiksXz1mLnByb2Nlc3MsbD1mLnNldEltbWVkaWF0ZSxkPWYuY2xlYXJJbW1lZGlhdGUscD1mLk1lc3NhZ2VDaGFubmVsLHY9MCx5PXt9LGg9Im9ucmVhZHlzdGF0ZWNoYW5nZSIsYj1mdW5jdGlvbigpe3ZhciBlPSt0aGlzO2lmKHkuaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PXlbZV07ZGVsZXRlIHlbZV0sdCgpfX0sbT1mdW5jdGlvbihlKXtiLmNhbGwoZS5kYXRhKX07bCYmZHx8KGw9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MTthcmd1bWVudHMubGVuZ3RoPnI7KXQucHVzaChhcmd1bWVudHNbcisrXSk7cmV0dXJuIHlbKyt2XT1mdW5jdGlvbigpe3MoImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbih2KSx2fSxkPWZ1bmN0aW9uKGUpe2RlbGV0ZSB5W2VdfSwicHJvY2VzcyI9PWUoIi4vX2NvZiIpKF8pP249ZnVuY3Rpb24oZSl7Xy5uZXh0VGljayhjKGIsZSwxKSl9OnA/KG89bmV3IHAsaT1vLnBvcnQyLG8ucG9ydDEub25tZXNzYWdlPW0sbj1jKGkucG9zdE1lc3NhZ2UsaSwxKSk6Zi5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFmLmltcG9ydFNjcmlwdHM/KG49ZnVuY3Rpb24oZSl7Zi5wb3N0TWVzc2FnZShlKyIiLCIqIil9LGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbSwhMSkpOm49aCBpbiBhKCJzY3JpcHQiKT9mdW5jdGlvbihlKXt1LmFwcGVuZENoaWxkKGEoInNjcmlwdCIpKVtoXT1mdW5jdGlvbigpe3UucmVtb3ZlQ2hpbGQodGhpcyksYi5jYWxsKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChjKGIsZSwxKSwwKX0pLHQuZXhwb3J0cz17c2V0OmwsY2xlYXI6ZH19LHsiLi9fY29mIjoxNywiLi9fY3R4IjoxOSwiLi9fZG9tLWNyZWF0ZSI6MjIsIi4vX2dsb2JhbCI6MjcsIi4vX2h0bWwiOjMwLCIuL19pbnZva2UiOjMyfV0sNjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pbnRlZ2VyIiksbz1NYXRoLm1heCxpPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBlPW4oZSksZTwwP28oZSt0LDApOmkoZSx0KX19LHsiLi9fdG8taW50ZWdlciI6NjV9XSw2NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPU1hdGguY2VpbCxvPU1hdGguZmxvb3I7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bzpuKShlKX19LHt9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lvYmplY3QiKSxvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSx7Ii4vX2RlZmluZWQiOjIwLCIuL19pb2JqZWN0IjozM31dLDY3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8taW50ZWdlciIpLG89TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/byhuKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSx7Ii4vX3RvLWludGVnZXIiOjY1fV0sNjg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobihlKSl9fSx7Ii4vX2RlZmluZWQiOjIwfV0sNjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gZTt2YXIgcixvO2lmKHQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCF0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSx7Ii4vX2lzLW9iamVjdCI6MzV9XSw3MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPTAsbz1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK24rbykudG9TdHJpbmcoMzYpKX19LHt9XSw3MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3NoYXJlZCIpKCJ3a3MiKSxvPWUoIi4vX3VpZCIpLGk9ZSgiLi9fZ2xvYmFsIikuU3ltYm9sLGM9ImZ1bmN0aW9uIj09dHlwZW9mIGkscz10LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPWMmJmlbZV18fChjP2k6bykoIlN5bWJvbC4iK2UpKX07cy5zdG9yZT1ufSx7Ii4vX2dsb2JhbCI6MjcsIi4vX3NoYXJlZCI6NjAsIi4vX3VpZCI6NzB9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2NsYXNzb2YiKSxvPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9ZSgiLi9faXRlcmF0b3JzIik7dC5leHBvcnRzPWUoIi4vX2NvcmUiKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbb118fGVbIkBAaXRlcmF0b3IiXXx8aVtuKGUpXX19LHsiLi9fY2xhc3NvZiI6MTYsIi4vX2NvcmUiOjE4LCIuL19pdGVyYXRvcnMiOjQxLCIuL193a3MiOjcxfV0sNzM6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fYWRkLXRvLXVuc2NvcGFibGVzIiksbz1lKCIuL19pdGVyLXN0ZXAiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLGM9ZSgiLi9fdG8taW9iamVjdCIpO3QuZXhwb3J0cz1lKCIuL19pdGVyLWRlZmluZSIpKEFycmF5LCJBcnJheSIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PWMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG8oMSkpOiJrZXlzIj09dD9vKDAscik6InZhbHVlcyI9PXQ/bygwLGVbcl0pOm8oMCxbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG4oImtleXMiKSxuKCJ2YWx1ZXMiKSxuKCJlbnRyaWVzIil9LHsiLi9fYWRkLXRvLXVuc2NvcGFibGVzIjoxMiwiLi9faXRlci1kZWZpbmUiOjM4LCIuL19pdGVyLXN0ZXAiOjQwLCIuL19pdGVyYXRvcnMiOjQxLCIuL190by1pb2JqZWN0Ijo2Nn1dLDc0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZXhwb3J0Iik7bihuLlMrbi5GKiFlKCIuL19kZXNjcmlwdG9ycyIpLCJPYmplY3QiLHtkZWZpbmVQcm9wZXJ0eTplKCIuL19vYmplY3QtZHAiKS5mfSl9LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19leHBvcnQiOjI0LCIuL19vYmplY3QtZHAiOjQ1fV0sNzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1vYmplY3QiKSxvPWUoIi4vX29iamVjdC1rZXlzIik7ZSgiLi9fb2JqZWN0LXNhcCIpKCJrZXlzIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19KX0seyIuL19vYmplY3Qta2V5cyI6NTAsIi4vX29iamVjdC1zYXAiOjUyLCIuL190by1vYmplY3QiOjY4fV0sNzY6W2Z1bmN0aW9uKGUsdCxyKXt9LHt9XSw3NzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbixvLGksYz1lKCIuL19saWJyYXJ5Iikscz1lKCIuL19nbG9iYWwiKSx1PWUoIi4vX2N0eCIpLGE9ZSgiLi9fY2xhc3NvZiIpLGY9ZSgiLi9fZXhwb3J0IiksXz1lKCIuL19pcy1vYmplY3QiKSxsPShlKCIuL19hbi1vYmplY3QiKSxlKCIuL19hLWZ1bmN0aW9uIikpLGQ9ZSgiLi9fYW4taW5zdGFuY2UiKSxwPWUoIi4vX2Zvci1vZiIpLHY9KGUoIi4vX3NldC1wcm90byIpLnNldCxlKCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIikpLHk9ZSgiLi9fdGFzayIpLnNldCxoPWUoIi4vX21pY3JvdGFzayIpKCksYj0iUHJvbWlzZSIsbT1zLlR5cGVFcnJvcixnPXMucHJvY2VzcyxqPXNbYl0sZz1zLnByb2Nlc3MseD0icHJvY2VzcyI9PWEoZyksdz1mdW5jdGlvbigpe30saz0hIWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PWoucmVzb2x2ZSgxKSxyPSh0LmNvbnN0cnVjdG9yPXt9KVtlKCIuL193a3MiKSgic3BlY2llcyIpXT1mdW5jdGlvbihlKXtlKHcsdyl9O3JldHVybih4fHwiZnVuY3Rpb24iPT10eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50KSYmdC50aGVuKHcpaW5zdGFuY2VvZiByfWNhdGNoKG4pe319KCksTz1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8ZT09PWomJnQ9PT1pfSxNPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiEoIV8oZSl8fCJmdW5jdGlvbiIhPXR5cGVvZih0PWUudGhlbikpJiZ0fSxQPWZ1bmN0aW9uKGUpe3JldHVybiBPKGosZSk/bmV3IFMoZSk6bmV3IG8oZSl9LFM9bz1mdW5jdGlvbihlKXt2YXIgdCxyO3RoaXMucHJvbWlzZT1uZXcgZShmdW5jdGlvbihlLG4pe2lmKHZvaWQgMCE9PXR8fHZvaWQgMCE9PXIpdGhyb3cgbSgiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1ufSksdGhpcy5yZXNvbHZlPWwodCksdGhpcy5yZWplY3Q9bChyKX0sRT1mdW5jdGlvbihlKXt0cnl7ZSgpfWNhdGNoKHQpe3JldHVybntlcnJvcjp0fX19LFU9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO2goZnVuY3Rpb24oKXtmb3IodmFyIG49ZS5fdixvPTE9PWUuX3MsaT0wLGM9ZnVuY3Rpb24odCl7dmFyIHIsaSxjPW8/dC5vazp0LmZhaWwscz10LnJlc29sdmUsdT10LnJlamVjdCxhPXQuZG9tYWluO3RyeXtjPyhvfHwoMj09ZS5faCYmTChlKSxlLl9oPTEpLGM9PT0hMD9yPW46KGEmJmEuZW50ZXIoKSxyPWMobiksYSYmYS5leGl0KCkpLHI9PT10LnByb21pc2U/dShtKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihpPU0ocikpP2kuY2FsbChyLHMsdSk6cyhyKSk6dShuKX1jYXRjaChmKXt1KGYpfX07ci5sZW5ndGg+aTspYyhyW2krK10pO2UuX2M9W10sZS5fbj0hMSx0JiYhZS5faCYmVChlKX0pfX0sVD1mdW5jdGlvbihlKXt5LmNhbGwocyxmdW5jdGlvbigpe3ZhciB0LHIsbixvPWUuX3Y7aWYoUihlKSYmKHQ9RShmdW5jdGlvbigpe3g/Zy5lbWl0KCJ1bmhhbmRsZWRSZWplY3Rpb24iLG8sZSk6KHI9cy5vbnVuaGFuZGxlZHJlamVjdGlvbik/cih7cHJvbWlzZTplLHJlYXNvbjpvfSk6KG49cy5jb25zb2xlKSYmbi5lcnJvciYmbi5lcnJvcigiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIixvKX0pLGUuX2g9eHx8UihlKT8yOjEpLGUuX2E9dm9pZCAwLHQpdGhyb3cgdC5lcnJvcn0pfSxSPWZ1bmN0aW9uKGUpe2lmKDE9PWUuX2gpcmV0dXJuITE7Zm9yKHZhciB0LHI9ZS5fYXx8ZS5fYyxuPTA7ci5sZW5ndGg+bjspaWYodD1yW24rK10sdC5mYWlsfHwhUih0LnByb21pc2UpKXJldHVybiExO3JldHVybiEwfSxMPWZ1bmN0aW9uKGUpe3kuY2FsbChzLGZ1bmN0aW9uKCl7dmFyIHQ7eD9nLmVtaXQoInJlamVjdGlvbkhhbmRsZWQiLGUpOih0PXMub25yZWplY3Rpb25oYW5kbGVkKSYmdCh7cHJvbWlzZTplLHJlYXNvbjplLl92fSl9KX0sQT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2R8fCh0Ll9kPSEwLHQ9dC5fd3x8dCx0Ll92PWUsdC5fcz0yLHQuX2F8fCh0Ll9hPXQuX2Muc2xpY2UoKSksVSh0LCEwKSl9LEM9ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzO2lmKCFyLl9kKXtyLl9kPSEwLHI9ci5fd3x8cjt0cnl7aWYocj09PWUpdGhyb3cgbSgiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGYiKTsodD1NKGUpKT9oKGZ1bmN0aW9uKCl7dmFyIG49e193OnIsX2Q6ITF9O3RyeXt0LmNhbGwoZSx1KEMsbiwxKSx1KEEsbiwxKSl9Y2F0Y2gobyl7QS5jYWxsKG4sbyl9fSk6KHIuX3Y9ZSxyLl9zPTEsVShyLCExKSl9Y2F0Y2gobil7QS5jYWxsKHtfdzpyLF9kOiExfSxuKX19fTtrfHwoaj1mdW5jdGlvbihlKXtkKHRoaXMsaixiLCJfaCIpLGwoZSksbi5jYWxsKHRoaXMpO3RyeXtlKHUoQyx0aGlzLDEpLHUoQSx0aGlzLDEpKX1jYXRjaCh0KXtBLmNhbGwodGhpcyx0KX19LG49ZnVuY3Rpb24oZSl7dGhpcy5fYz1bXSx0aGlzLl9hPXZvaWQgMCx0aGlzLl9zPTAsdGhpcy5fZD0hMSx0aGlzLl92PXZvaWQgMCx0aGlzLl9oPTAsdGhpcy5fbj0hMX0sbi5wcm90b3R5cGU9ZSgiLi9fcmVkZWZpbmUtYWxsIikoai5wcm90b3R5cGUse3RoZW46ZnVuY3Rpb24oZSx0KXt2YXIgcj1QKHYodGhpcyxqKSk7cmV0dXJuIHIub2s9ImZ1bmN0aW9uIiE9dHlwZW9mIGV8fGUsci5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPXg/Zy5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmVSh0aGlzLCExKSxyLnByb21pc2V9LCJjYXRjaCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksUz1mdW5jdGlvbigpe3ZhciBlPW5ldyBuO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT11KEMsZSwxKSx0aGlzLnJlamVjdD11KEEsZSwxKX0pLGYoZi5HK2YuVytmLkYqIWsse1Byb21pc2U6an0pLGUoIi4vX3NldC10by1zdHJpbmctdGFnIikoaixiKSxlKCIuL19zZXQtc3BlY2llcyIpKGIpLGk9ZSgiLi9fY29yZSIpW2JdLGYoZi5TK2YuRiohayxiLHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9UCh0aGlzKSxyPXQucmVqZWN0O3JldHVybiByKGUpLHQucHJvbWlzZX19KSxmKGYuUytmLkYqKGN8fCFrKSxiLHtyZXNvbHZlOmZ1bmN0aW9uKGUpe2lmKGUgaW5zdGFuY2VvZiBqJiZPKGUuY29uc3RydWN0b3IsdGhpcykpcmV0dXJuIGU7dmFyIHQ9UCh0aGlzKSxyPXQucmVzb2x2ZTtyZXR1cm4gcihlKSx0LnByb21pc2V9fSksZihmLlMrZi5GKiEoayYmZSgiLi9faXRlci1kZXRlY3QiKShmdW5jdGlvbihlKXtqLmFsbChlKVsiY2F0Y2giXSh3KX0pKSxiLHthbGw6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPVAodCksbj1yLnJlc29sdmUsbz1yLnJlamVjdCxpPUUoZnVuY3Rpb24oKXt2YXIgcj1bXSxpPTAsYz0xO3AoZSwhMSxmdW5jdGlvbihlKXt2YXIgcz1pKyssdT0hMTtyLnB1c2godm9pZCAwKSxjKyssdC5yZXNvbHZlKGUpLnRoZW4oZnVuY3Rpb24oZSl7dXx8KHU9ITAscltzXT1lLC0tY3x8bihyKSl9LG8pfSksLS1jfHxuKHIpfSk7cmV0dXJuIGkmJm8oaS5lcnJvciksci5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1QKHQpLG49ci5yZWplY3Qsbz1FKGZ1bmN0aW9uKCl7cChlLCExLGZ1bmN0aW9uKGUpe3QucmVzb2x2ZShlKS50aGVuKHIucmVzb2x2ZSxuKX0pfSk7cmV0dXJuIG8mJm4oby5lcnJvciksci5wcm9taXNlfX0pfSx7Ii4vX2EtZnVuY3Rpb24iOjExLCIuL19hbi1pbnN0YW5jZSI6MTMsIi4vX2FuLW9iamVjdCI6MTQsIi4vX2NsYXNzb2YiOjE2LCIuL19jb3JlIjoxOCwiLi9fY3R4IjoxOSwiLi9fZXhwb3J0IjoyNCwiLi9fZm9yLW9mIjoyNiwiLi9fZ2xvYmFsIjoyNywiLi9faXMtb2JqZWN0IjozNSwiLi9faXRlci1kZXRlY3QiOjM5LCIuL19saWJyYXJ5Ijo0MiwiLi9fbWljcm90YXNrIjo0MywiLi9fcmVkZWZpbmUtYWxsIjo1NCwiLi9fc2V0LXByb3RvIjo1NiwiLi9fc2V0LXNwZWNpZXMiOjU3LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6NTgsIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiOjYxLCIuL190YXNrIjo2MywiLi9fd2tzIjo3MX1dLDc4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX3N0cmluZy1hdCIpKCEwKTtlKCIuL19pdGVyLWRlZmluZSIpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1uKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHsiLi9faXRlci1kZWZpbmUiOjM4LCIuL19zdHJpbmctYXQiOjYyfV0sNzk6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL2VzNi5hcnJheS5pdGVyYXRvciIpO2Zvcih2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2hpZGUiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLGM9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIikscz1bIk5vZGVMaXN0IiwiRE9NVG9rZW5MaXN0IiwiTWVkaWFMaXN0IiwiU3R5bGVTaGVldExpc3QiLCJDU1NSdWxlTGlzdCJdLHU9MDt1PDU7dSsrKXt2YXIgYT1zW3VdLGY9blthXSxfPWYmJmYucHJvdG90eXBlO18mJiFfW2NdJiZvKF8sYyxhKSxpW2FdPWkuQXJyYXl9fSx7Ii4vX2dsb2JhbCI6MjcsIi4vX2hpZGUiOjI5LCIuL19pdGVyYXRvcnMiOjQxLCIuL193a3MiOjcxLCIuL2VzNi5hcnJheS5pdGVyYXRvciI6NzN9XSw4MDpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCIuL2h5cGVydHktZGlzY292ZXJ5L0h5cGVydHlEaXNjb3ZlcnkiKSxpPW4obyk7clsiZGVmYXVsdCJdPWlbImRlZmF1bHQiXSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vaHlwZXJ0eS1kaXNjb3ZlcnkvSHlwZXJ0eURpc2NvdmVyeSI6ODF9XSw4MTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9bihvKSxjPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHM9bihjKSx1PWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGE9bih1KSxmPWUoIi4uL3V0aWxzL3V0aWxzIiksXz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyKXsoMCxzWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIG49dGhpcztuLm1lc3NhZ2VCdXM9cixuLmRvbWFpbj0oMCxmLmRpdmlkZVVSTCkodCkuZG9tYWluLG4uZGlzY292ZXJ5VVJMPXR9cmV0dXJuKDAsYVsiZGVmYXVsdCJdKShlLFt7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RQZXJOYW1lIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj12b2lkIDA7bj10P3Q6ci5kb21haW47dmFyIG89e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7cmVzb3VyY2U6ImRhdGFPYmplY3Q6Ly8iK2V9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLHQpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKHIpe3ZhciBuPXIuYm9keS52YWx1ZS51cmw7bj9lKG4pOnQoIkRhdGFPYmplY3QgbmFtZSBkb2VzIG5vdCBleGlzdCIpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0eVBlclVzZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXZvaWQgMDtuPXQ/dDpyLmRvbWFpbjt2YXIgbz0idXNlcjovLyIrZS5zdWJzdHJpbmcoZS5pbmRleE9mKCJAIikrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCJAIikpLGM9e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7cmVzb3VyY2U6b319O3JldHVybiBjb25zb2xlLmxvZygiTWVzc2FnZTogIixjLG4sbyksbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbih0LG4pe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKHIpe2NvbnNvbGUubG9nKCJtZXNzYWdlIHJlcGx5IixyKTt2YXIgbz12b2lkIDAsaT12b2lkIDAsYz12b2lkIDAscz1yLmJvZHkudmFsdWU7Zm9yKG8gaW4gcylpZih2b2lkIDAhPT1zW29dLmxhc3RNb2RpZmllZClpZih2b2lkIDA9PT1pKWk9bmV3IERhdGUoc1tvXS5sYXN0TW9kaWZpZWQpLGM9bztlbHNle3ZhciB1PW5ldyBEYXRlKHNbb10ubGFzdE1vZGlmaWVkKTtpLmdldFRpbWUoKTx1LmdldFRpbWUoKSYmKGk9dSxjPW8pfWNvbnNvbGUubG9nKCJMYXN0IEh5cGVydHk6ICIsYyxpKTt2YXIgYT1jO2lmKHZvaWQgMD09PWEpcmV0dXJuIG4oIlVzZXIgSHlwZXJ0eSBub3QgZm91bmQiKTt2YXIgZj17aWQ6ZSxkZXNjcmlwdG9yOnNbYV0uZGVzY3JpcHRvcixoeXBlcnR5VVJMOmF9O2NvbnNvbGUubG9nKCI9PT0+IGh5cGVydHlEaXNjb3ZlcnkgbWVzc2FnZUJ1bmRsZTogIixmKSx0KGYpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlciIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dm9pZCAwO249dD90OnIuZG9tYWluO3ZhciBvPSJ1c2VyOi8vIitlLnN1YnN0cmluZyhlLmluZGV4T2YoIkAiKSsxLGUubGVuZ3RoKSsiLyIrZS5zdWJzdHJpbmcoMCxlLmluZGV4T2YoIkAiKSksYz17dHlwZToicmVhZCIsZnJvbTpyLmRpc2NvdmVyeVVSTCx0bzoiZG9tYWluOi8vcmVnaXN0cnkuIituKyIvIixib2R5OntyZXNvdXJjZTpvfX07cmV0dXJuIGNvbnNvbGUubG9nKCJNZXNzYWdlIGRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlcjogIixjLG4sbyksbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLHQpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKHIpe2NvbnNvbGUubG9nKCJkaXNjb3Zlckh5cGVydGllc1BlclVzZXIgcmVwbHkiLHIpO3ZhciBuPXIuYm9keS52YWx1ZTtyZXR1cm4gbj92b2lkIGUobik6dCgiVXNlciBIeXBlcnR5IG5vdCBmb3VuZCIpfSl9KX19XSksZX0oKTtyWyJkZWZhdWx0Il09Xyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzIjo4MiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6NSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjo2fV0sODI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1mdW5jdGlvbiBvKGUpe2lmKCFlKXRocm93IEVycm9yKCJVUkwgaXMgbmVlZGVkIHRvIHNwbGl0Iik7dmFyIHQ9LyhbYS16QS1aLV0qKTpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2kscj0iJDEsJDIsJDMiLG49ZS5yZXBsYWNlKHQscikuc3BsaXQoIiwiKTtuWzBdPT09ZSYmKG5bMF09Imh0dHBzIixuWzFdPWUpO3ZhciBvPXt0eXBlOm5bMF0sZG9tYWluOm5bMV0saWRlbnRpdHk6blsyXX07cmV0dXJuIG99ZnVuY3Rpb24gaShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKSxyPXt1c2VybmFtZTplLnN1YnN0cmluZygwLHQpLGRvbWFpbjplLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpfTtyZXR1cm4gcn1mdW5jdGlvbiBjKGUpe3JldHVybiEoKDAscFsiZGVmYXVsdCJdKShlKS5sZW5ndGg+MCl9ZnVuY3Rpb24gcyhlKXtpZihlKXJldHVybiBKU09OLnBhcnNlKCgwLGxbImRlZmF1bHQiXSkoZSkpfWZ1bmN0aW9uIHUoZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJuInVzZXI6Ly8iK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsdCl9ZnVuY3Rpb24gYShlKXt2YXIgdD1vKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoIi8iLCIiKSsiQCIrdC5kb21haW59ZnVuY3Rpb24gZihlKXtpZigidXNlcjovLyI9PT1lLnN1YnN0cmluZygwLDcpKXt2YXIgdD1vKGUpO2lmKHQuZG9tYWluJiZ0LmlkZW50aXR5KXJldHVybiBlO3Rocm93InVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQifXJldHVybiB1KGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgXz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiKSxsPW4oXyksZD1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxwPW4oZCk7ci5kaXZpZGVVUkw9byxyLmRpdmlkZUVtYWlsPWksci5lbXB0eU9iamVjdD1jLHIuZGVlcENsb25lPXMsci5nZXRVc2VyVVJMRnJvbUVtYWlsPXUsci5nZXRVc2VyRW1haWxGcm9tVVJMPWEsci5jb252ZXJ0VG9Vc2VyVVJMPWZ9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoxLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjN9XX0se30sWzgwXSkoODApfSk7DQoNCgp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkKfSx7fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7CihmdW5jdGlvbiAoZ2xvYmFsKXsKLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovDQoNCi8vIERpc3RyaWJ1dGlvbiBmaWxlIGZvciBTeW5jaGVyLmpzIA0KLy8gdmVyc2lvbjogMC4zLjANCi8vIExhc3QgYnVpbGQ6IFRodSBKdWwgMjEgMjAxNiAxNTozMTozMiBHTVQrMDEwMCAoV0VTVCkNCg0KIWZ1bmN0aW9uKGUpe2lmKCJvYmplY3QiPT10eXBlb2YgZXhwb3J0cyYmInVuZGVmaW5lZCIhPXR5cGVvZiBtb2R1bGUpbW9kdWxlLmV4cG9ydHM9ZSgpO2Vsc2UgaWYoImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sZSk7ZWxzZXt2YXIgdDt0PSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93P3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcyx0LlN5bmNoZXI9ZSgpfX0oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24gZSh0LHIsbyl7ZnVuY3Rpb24gbihzLGMpe2lmKCFyW3NdKXtpZighdFtzXSl7dmFyIGE9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWMmJmEpcmV0dXJuIGEocywhMCk7aWYoaSlyZXR1cm4gaShzLCEwKTt2YXIgdT1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitzKyInIik7dGhyb3cgdS5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIix1fXZhciBsPXJbc109e2V4cG9ydHM6e319O3Rbc11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIHI9dFtzXVsxXVtlXTtyZXR1cm4gbihyP3I6ZSl9LGwsbC5leHBvcnRzLGUsdCxyLG8pfXJldHVybiByW3NdLmV4cG9ydHN9Zm9yKHZhciBpPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLHM9MDtzPG8ubGVuZ3RoO3MrKyluKG9bc10pO3JldHVybiBufSh7MTpbZnVuY3Rpb24oZSx0LHIpe09iamVjdC5vYnNlcnZlJiYhQXJyYXkub2JzZXJ2ZSYmZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIHI9ZS5nZXROb3RpZmllcixvPSJwZXJmb3JtQ2hhbmdlIixuPSJfb3JpZ2luYWwiLGk9InNwbGljZSIscz17cHVzaDpmdW5jdGlvbiBhKGUpe3ZhciB0PWFyZ3VtZW50cyxzPWFbbl0uYXBwbHkodGhpcyx0KTtyZXR1cm4gcih0aGlzKVtvXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OnMtdC5sZW5ndGgsYWRkZWRDb3VudDp0Lmxlbmd0aCxyZW1vdmVkOltdfX0pLHN9LHVuc2hpZnQ6ZnVuY3Rpb24gdShlKXt2YXIgdD1hcmd1bWVudHMscz11W25dLmFwcGx5KHRoaXMsdCk7cmV0dXJuIHIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDowLGFkZGVkQ291bnQ6dC5sZW5ndGgscmVtb3ZlZDpbXX19KSxzfSxwb3A6ZnVuY3Rpb24gbCgpe3ZhciBlPXRoaXMubGVuZ3RoLHQ9bFtuXS5jYWxsKHRoaXMpO3JldHVybiB0aGlzLmxlbmd0aCE9PWUmJnIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDp0aGlzLmxlbmd0aCxhZGRlZENvdW50OjAscmVtb3ZlZDpbdF19fSx0aGlzKSx0fSxzaGlmdDpmdW5jdGlvbiBmKCl7dmFyIGU9dGhpcy5sZW5ndGgsdD1mW25dLmNhbGwodGhpcyk7cmV0dXJuIHRoaXMubGVuZ3RoIT09ZSYmcih0aGlzKVtvXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OjAsYWRkZWRDb3VudDowLHJlbW92ZWQ6W3RdfX0sdGhpcyksdH0sc3BsaWNlOmZ1bmN0aW9uIGQoZSx0KXt2YXIgcz1hcmd1bWVudHMsYz1kW25dLmFwcGx5KHRoaXMscyk7cmV0dXJuKGMubGVuZ3RofHxzLmxlbmd0aD4yKSYmcih0aGlzKVtvXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OmUsYWRkZWRDb3VudDpzLmxlbmd0aC0yLHJlbW92ZWQ6Y319LHRoaXMpLGN9fTtmb3IodmFyIGMgaW4gcylzW2NdW25dPXQucHJvdG90eXBlW2NdLHQucHJvdG90eXBlW2NdPXNbY107dC5vYnNlcnZlPWZ1bmN0aW9uKHQscil7cmV0dXJuIGUub2JzZXJ2ZSh0LHIsWyJhZGQiLCJ1cGRhdGUiLCJkZWxldGUiLGldKX0sdC51bm9ic2VydmU9ZS51bm9ic2VydmV9KE9iamVjdCxBcnJheSl9LHt9XSwyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5IjoxOH1dLDM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlIjoxOX1dLDQ6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5IjoyMH1dLDU6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjoyMX1dLDY6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjIyfV0sNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cyIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cyI6MjN9XSw4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIjoyNH1dLDk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIjoyNX1dLDEwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbCIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wiOjI2fV0sMTE6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvciI6Mjd9XSwxMjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtyLl9fZXNNb2R1bGU9ITAsclsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9fSx7fV0sMTM6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG49ZSgiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksaT1vKG4pO3JbImRlZmF1bHQiXT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG89dFtyXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLCgwLGlbImRlZmF1bHQiXSkoZSxvLmtleSxvKX19cmV0dXJuIGZ1bmN0aW9uKHQscixvKXtyZXR1cm4gciYmZSh0LnByb3RvdHlwZSxyKSxvJiZlKHQsbyksdH19KCl9LHsiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5Ijo0fV0sMTQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG49ZSgiLi4vY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiIpLGk9byhuKSxzPWUoIi4uL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciIpLGM9byhzKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24gYShlLHQscil7bnVsbD09PWUmJihlPUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIG89KDAsY1siZGVmYXVsdCJdKShlLHQpO2lmKHZvaWQgMD09PW8pe3ZhciBuPSgwLGlbImRlZmF1bHQiXSkoZSk7cmV0dXJuIG51bGw9PT1uP3ZvaWQgMDphKG4sdCxyKX1pZigidmFsdWUiaW4gbylyZXR1cm4gby52YWx1ZTt2YXIgcz1vLmdldDtpZih2b2lkIDAhPT1zKXJldHVybiBzLmNhbGwocil9fSx7Ii4uL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6NSwiLi4vY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6Nn1dLDE1OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiKSxpPW8obikscz1lKCIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGUiKSxjPW8ocyksYT1lKCIuLi9oZWxwZXJzL3R5cGVvZiIpLHU9byhhKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAiKygidW5kZWZpbmVkIj09dHlwZW9mIHQ/InVuZGVmaW5lZCI6KDAsdVsiZGVmYXVsdCJdKSh0KSkpO2UucHJvdG90eXBlPSgwLGNbImRlZmF1bHQiXSkodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihpWyJkZWZhdWx0Il0/KDAsaVsiZGVmYXVsdCJdKShlLHQpOmUuX19wcm90b19fPXQpfX0seyIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGUiOjMsIi4uL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiOjgsIi4uL2hlbHBlcnMvdHlwZW9mIjoxN31dLDE2OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2hlbHBlcnMvdHlwZW9mIiksaT1vKG4pO3JbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7cmV0dXJuIXR8fCJvYmplY3QiIT09KCJ1bmRlZmluZWQiPT10eXBlb2YgdD8idW5kZWZpbmVkIjooMCxpWyJkZWZhdWx0Il0pKHQpKSYmImZ1bmN0aW9uIiE9dHlwZW9mIHQ/ZTp0fX0seyIuLi9oZWxwZXJzL3R5cGVvZiI6MTd9XSwxNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9jb3JlLWpzL3N5bWJvbC9pdGVyYXRvciIpLGk9byhuKSxzPWUoIi4uL2NvcmUtanMvc3ltYm9sIiksYz1vKHMpLGE9ImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmInN5bWJvbCI9PXR5cGVvZiBpWyJkZWZhdWx0Il0/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmZS5jb25zdHJ1Y3Rvcj09PWNbImRlZmF1bHQiXT8ic3ltYm9sIjp0eXBlb2YgZX07clsiZGVmYXVsdCJdPSJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJiJzeW1ib2wiPT09YShpWyJkZWZhdWx0Il0pP2Z1bmN0aW9uKGUpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgZT8idW5kZWZpbmVkIjphKGUpfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmZS5jb25zdHJ1Y3Rvcj09PWNbImRlZmF1bHQiXT8ic3ltYm9sIjoidW5kZWZpbmVkIj09dHlwZW9mIGU/InVuZGVmaW5lZCI6YShlKX19LHsiLi4vY29yZS1qcy9zeW1ib2wiOjEwLCIuLi9jb3JlLWpzL3N5bWJvbC9pdGVyYXRvciI6MTF9XSwxODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKSxuPW8uSlNPTnx8KG8uSlNPTj17c3RyaW5naWZ5OkpTT04uc3RyaW5naWZ5fSk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLnN0cmluZ2lmeS5hcHBseShuLGFyZ3VtZW50cyl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1fV0sMTk6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlIik7dmFyIG89ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5jcmVhdGUoZSx0KX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUiOjEwMH1dLDIwOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSIpO3ZhciBvPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gby5kZWZpbmVQcm9wZXJ0eShlLHQscil9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5IjoxMDF9XSwyMTpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKTt2YXIgbz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBvLmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6MTAyfV0sMjI6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZiIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LmdldFByb3RvdHlwZU9mfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZiI6MTAzfV0sMjM6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LmtleXN9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjoxMDR9XSwyNDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Quc2V0UHJvdG90eXBlT2Z9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mIjoxMDV9XSwyNTpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciKSxlKCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiKSxlKCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiKSxlKCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIiksdC5leHBvcnRzPWUoIi4uL21vZHVsZXMvX2NvcmUiKS5Qcm9taXNlfSx7Ii4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjoxMDYsIi4uL21vZHVsZXMvZXM2LnByb21pc2UiOjEwNywiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIjoxMDgsIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI6MTEyfV0sMjY6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5zeW1ib2wiKSxlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksZSgiLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yIiksZSgiLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLlN5bWJvbH0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyI6MTA2LCIuLi8uLi9tb2R1bGVzL2VzNi5zeW1ib2wiOjEwOSwiLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yIjoxMTAsIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlIjoxMTF9XSwyNzpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciIpLGUoIi4uLy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL193a3MtZXh0IikuZigiaXRlcmF0b3IiKX0seyIuLi8uLi9tb2R1bGVzL193a3MtZXh0Ijo5NiwiLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIjoxMDgsIi4uLy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI6MTEyfV0sMjg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYSBmdW5jdGlvbiEiKTtyZXR1cm4gZX19LHt9XSwyOTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbigpe319LHt9XSwzMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixvKXtpZighKGUgaW5zdGFuY2VvZiB0KXx8dm9pZCAwIT09byYmbyBpbiBlKXRocm93IFR5cGVFcnJvcihyKyI6IGluY29ycmVjdCBpbnZvY2F0aW9uISIpO3JldHVybiBlfX0se31dLDMxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faXMtb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFvKGUpKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gZX19LHsiLi9faXMtb2JqZWN0Ijo1NH1dLDMyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW9iamVjdCIpLG49ZSgiLi9fdG8tbGVuZ3RoIiksaT1lKCIuL190by1pbmRleCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyLHMpe3ZhciBjLGE9byh0KSx1PW4oYS5sZW5ndGgpLGw9aShzLHUpO2lmKGUmJnIhPXIpe2Zvcig7dT5sOylpZihjPWFbbCsrXSxjIT1jKXJldHVybiEwfWVsc2UgZm9yKDt1Pmw7bCsrKWlmKChlfHxsIGluIGEpJiZhW2xdPT09cilyZXR1cm4gZXx8bHx8MDtyZXR1cm4hZSYmLTF9fX0seyIuL190by1pbmRleCI6ODgsIi4vX3RvLWlvYmplY3QiOjkwLCIuL190by1sZW5ndGgiOjkxfV0sMzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19jb2YiKSxuPWUoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpLGk9IkFyZ3VtZW50cyI9PW8oZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKSxzPWZ1bmN0aW9uKGUsdCl7dHJ5e3JldHVybiBlW3RdfWNhdGNoKHIpe319O3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdCxyLGM7cmV0dXJuIHZvaWQgMD09PWU/IlVuZGVmaW5lZCI6bnVsbD09PWU/Ik51bGwiOiJzdHJpbmciPT10eXBlb2Yocj1zKHQ9T2JqZWN0KGUpLG4pKT9yOmk/byh0KToiT2JqZWN0Ij09KGM9byh0KSkmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LmNhbGxlZT8iQXJndW1lbnRzIjpjfX0seyIuL19jb2YiOjM0LCIuL193a3MiOjk3fV0sMzQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz17fS50b1N0cmluZzt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uY2FsbChlKS5zbGljZSg4LC0xKX19LHt9XSwzNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXQuZXhwb3J0cz17dmVyc2lvbjoiMi40LjAifTsibnVtYmVyIj09dHlwZW9mIF9fZSYmKF9fZT1vKX0se31dLDM2OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fYS1mdW5jdGlvbiIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7aWYobyhlKSx2b2lkIDA9PT10KXJldHVybiBlO3N3aXRjaChyKXtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBlLmNhbGwodCxyKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihyLG8pe3JldHVybiBlLmNhbGwodCxyLG8pfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHIsbyxuKXtyZXR1cm4gZS5jYWxsKHQscixvLG4pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseSh0LGFyZ3VtZW50cyl9fX0seyIuL19hLWZ1bmN0aW9uIjoyOH1dLDM3OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09ZSl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiK2UpO3JldHVybiBlfX0se31dLDM4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSFlKCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19mYWlscyI6NDN9XSwzOTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lzLW9iamVjdCIpLG49ZSgiLi9fZ2xvYmFsIikuZG9jdW1lbnQsaT1vKG4pJiZvKG4uY3JlYXRlRWxlbWVudCk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpP24uY3JlYXRlRWxlbWVudChlKTp7fX19LHsiLi9fZ2xvYmFsIjo0NSwiLi9faXMtb2JqZWN0Ijo1NH1dLDQwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSJjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YiLnNwbGl0KCIsIil9LHt9XSw0MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1rZXlzIiksbj1lKCIuL19vYmplY3QtZ29wcyIpLGk9ZSgiLi9fb2JqZWN0LXBpZSIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1vKGUpLHI9bi5mO2lmKHIpZm9yKHZhciBzLGM9cihlKSxhPWkuZix1PTA7Yy5sZW5ndGg+dTspYS5jYWxsKGUscz1jW3UrK10pJiZ0LnB1c2gocyk7cmV0dXJuIHR9fSx7Ii4vX29iamVjdC1nb3BzIjo3MSwiLi9fb2JqZWN0LWtleXMiOjc0LCIuL19vYmplY3QtcGllIjo3NX1dLDQyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj1lKCIuL19jb3JlIiksaT1lKCIuL19jdHgiKSxzPWUoIi4vX2hpZGUiKSxjPSJwcm90b3R5cGUiLGE9ZnVuY3Rpb24oZSx0LHIpe3ZhciB1LGwsZixkPWUmYS5GLF89ZSZhLkcscD1lJmEuUyxiPWUmYS5QLGg9ZSZhLkIseT1lJmEuVyx2PV8/bjpuW3RdfHwoblt0XT17fSksaj12W2NdLG09Xz9vOnA/b1t0XToob1t0XXx8e30pW2NdO18mJihyPXQpO2Zvcih1IGluIHIpbD0hZCYmbSYmdm9pZCAwIT09bVt1XSxsJiZ1IGluIHZ8fChmPWw/bVt1XTpyW3VdLHZbdV09XyYmImZ1bmN0aW9uIiE9dHlwZW9mIG1bdV0/clt1XTpoJiZsP2koZixvKTp5JiZtW3VdPT1mP2Z1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKHQscixvKXtpZih0aGlzIGluc3RhbmNlb2YgZSl7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IGU7Y2FzZSAxOnJldHVybiBuZXcgZSh0KTtjYXNlIDI6cmV0dXJuIG5ldyBlKHQscil9cmV0dXJuIG5ldyBlKHQscixvKX1yZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiB0W2NdPWVbY10sdH0oZik6YiYmImZ1bmN0aW9uIj09dHlwZW9mIGY/aShGdW5jdGlvbi5jYWxsLGYpOmYsYiYmKCh2LnZpcnR1YWx8fCh2LnZpcnR1YWw9e30pKVt1XT1mLGUmYS5SJiZqJiYhalt1XSYmcyhqLHUsZikpKX07YS5GPTEsYS5HPTIsYS5TPTQsYS5QPTgsYS5CPTE2LGEuVz0zMixhLlU9NjQsYS5SPTEyOCx0LmV4cG9ydHM9YX0seyIuL19jb3JlIjozNSwiLi9fY3R4IjozNiwiLi9fZ2xvYmFsIjo0NSwiLi9faGlkZSI6NDd9XSw0MzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuISFlKCl9Y2F0Y2godCl7cmV0dXJuITB9fX0se31dLDQ0OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fY3R4Iiksbj1lKCIuL19pdGVyLWNhbGwiKSxpPWUoIi4vX2lzLWFycmF5LWl0ZXIiKSxzPWUoIi4vX2FuLW9iamVjdCIpLGM9ZSgiLi9fdG8tbGVuZ3RoIiksYT1lKCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCIpLHU9e30sbD17fSxyPXQuZXhwb3J0cz1mdW5jdGlvbihlLHQscixmLGQpe3ZhciBfLHAsYixoLHk9ZD9mdW5jdGlvbigpe3JldHVybiBlfTphKGUpLHY9byhyLGYsdD8yOjEpLGo9MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgeSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBpdGVyYWJsZSEiKTtpZihpKHkpKXtmb3IoXz1jKGUubGVuZ3RoKTtfPmo7aisrKWlmKGg9dD92KHMocD1lW2pdKVswXSxwWzFdKTp2KGVbal0pLGg9PT11fHxoPT09bClyZXR1cm4gaH1lbHNlIGZvcihiPXkuY2FsbChlKTshKHA9Yi5uZXh0KCkpLmRvbmU7KWlmKGg9bihiLHYscC52YWx1ZSx0KSxoPT09dXx8aD09PWwpcmV0dXJuIGh9O3IuQlJFQUs9dSxyLlJFVFVSTj1sfSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2N0eCI6MzYsIi4vX2lzLWFycmF5LWl0ZXIiOjUyLCIuL19pdGVyLWNhbGwiOjU1LCIuL190by1sZW5ndGgiOjkxLCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCI6OTh9XSw0NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXQuZXhwb3J0cz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93Lk1hdGg9PU1hdGg/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZi5NYXRoPT1NYXRoP3NlbGY6RnVuY3Rpb24oInJldHVybiB0aGlzIikoKTsibnVtYmVyIj09dHlwZW9mIF9fZyYmKF9fZz1vKX0se31dLDQ2OltmdW5jdGlvbihlLHQscil7dmFyIG89e30uaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uY2FsbChlLHQpfX0se31dLDQ3OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWRwIiksbj1lKCIuL19wcm9wZXJ0eS1kZXNjIik7dC5leHBvcnRzPWUoIi4vX2Rlc2NyaXB0b3JzIik/ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBvLmYoZSx0LG4oMSxyKSl9OmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZVt0XT1yLGV9fSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fcHJvcGVydHktZGVzYyI6Nzd9XSw0ODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKCIuL19nbG9iYWwiKS5kb2N1bWVudCYmZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fSx7Ii4vX2dsb2JhbCI6NDV9XSw0OTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZGVzY3JpcHRvcnMiKSYmIWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KGUoIi4vX2RvbS1jcmVhdGUiKSgiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19kb20tY3JlYXRlIjozOSwiLi9fZmFpbHMiOjQzfV0sNTA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXZvaWQgMD09PXI7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG8/ZSgpOmUuY2FsbChyKTtjYXNlIDE6cmV0dXJuIG8/ZSh0WzBdKTplLmNhbGwocix0WzBdKTtjYXNlIDI6cmV0dXJuIG8/ZSh0WzBdLHRbMV0pOmUuY2FsbChyLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBvP2UodFswXSx0WzFdLHRbMl0pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG8/ZSh0WzBdLHRbMV0sdFsyXSx0WzNdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSx0WzNdKX1yZXR1cm4gZS5hcHBseShyLHQpfX0se31dLDUxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fY29mIik7dC5leHBvcnRzPU9iamVjdCgieiIpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApP09iamVjdDpmdW5jdGlvbihlKXtyZXR1cm4iU3RyaW5nIj09byhlKT9lLnNwbGl0KCIiKTpPYmplY3QoZSl9fSx7Ii4vX2NvZiI6MzR9XSw1MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2l0ZXJhdG9ycyIpLG49ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksaT1BcnJheS5wcm90b3R5cGU7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT1lJiYoby5BcnJheT09PWV8fGlbbl09PT1lKX19LHsiLi9faXRlcmF0b3JzIjo2MCwiLi9fd2tzIjo5N31dLDUzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fY29mIik7dC5leHBvcnRzPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiJBcnJheSI9PW8oZSl9fSx7Ii4vX2NvZiI6MzR9XSw1NDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGU/bnVsbCE9PWU6ImZ1bmN0aW9uIj09dHlwZW9mIGV9fSx7fV0sNTU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19hbi1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbil7dHJ5e3JldHVybiBuP3QobyhyKVswXSxyWzFdKTp0KHIpfWNhdGNoKGkpe3ZhciBzPWVbInJldHVybiJdO3Rocm93IHZvaWQgMCE9PXMmJm8ocy5jYWxsKGUpKSxpfX19LHsiLi9fYW4tb2JqZWN0IjozMX1dLDU2OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX29iamVjdC1jcmVhdGUiKSxuPWUoIi4vX3Byb3BlcnR5LWRlc2MiKSxpPWUoIi4vX3NldC10by1zdHJpbmctdGFnIikscz17fTtlKCIuL19oaWRlIikocyxlKCIuL193a3MiKSgiaXRlcmF0b3IiKSxmdW5jdGlvbigpe3JldHVybiB0aGlzfSksdC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlLnByb3RvdHlwZT1vKHMse25leHQ6bigxLHIpfSksaShlLHQrIiBJdGVyYXRvciIpfX0seyIuL19oaWRlIjo0NywiLi9fb2JqZWN0LWNyZWF0ZSI6NjUsIi4vX3Byb3BlcnR5LWRlc2MiOjc3LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6ODIsIi4vX3drcyI6OTd9XSw1NzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCIuL19saWJyYXJ5Iiksbj1lKCIuL19leHBvcnQiKSxpPWUoIi4vX3JlZGVmaW5lIikscz1lKCIuL19oaWRlIiksYz1lKCIuL19oYXMiKSxhPWUoIi4vX2l0ZXJhdG9ycyIpLHU9ZSgiLi9faXRlci1jcmVhdGUiKSxsPWUoIi4vX3NldC10by1zdHJpbmctdGFnIiksZj1lKCIuL19vYmplY3QtZ3BvIiksZD1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxfPSEoW10ua2V5cyYmIm5leHQiaW5bXS5rZXlzKCkpLHA9IkBAaXRlcmF0b3IiLGI9ImtleXMiLGg9InZhbHVlcyIseT1mdW5jdGlvbigpe3JldHVybiB0aGlzfTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsdixqLG0sZyl7dShyLHQsdik7dmFyIHcsTyxrLHg9ZnVuY3Rpb24oZSl7aWYoIV8mJmUgaW4gUilyZXR1cm4gUltlXTtzd2l0Y2goZSl7Y2FzZSBiOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfTtjYXNlIGg6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX0sQz10KyIgSXRlcmF0b3IiLEU9aj09aCxTPSExLFI9ZS5wcm90b3R5cGUsVD1SW2RdfHxSW3BdfHxqJiZSW2pdLE09VHx8eChqKSxQPWo/RT94KCJlbnRyaWVzIik6TTp2b2lkIDAsQT0iQXJyYXkiPT10P1IuZW50cmllc3x8VDpUO2lmKEEmJihrPWYoQS5jYWxsKG5ldyBlKSksayE9PU9iamVjdC5wcm90b3R5cGUmJihsKGssQywhMCksb3x8YyhrLGQpfHxzKGssZCx5KSkpLEUmJlQmJlQubmFtZSE9PWgmJihTPSEwLE09ZnVuY3Rpb24oKXtyZXR1cm4gVC5jYWxsKHRoaXMpfSksbyYmIWd8fCFfJiYhUyYmUltkXXx8cyhSLGQsTSksYVt0XT1NLGFbQ109eSxqKWlmKHc9e3ZhbHVlczpFP006eChoKSxrZXlzOm0/TTp4KGIpLGVudHJpZXM6UH0sZylmb3IoTyBpbiB3KU8gaW4gUnx8aShSLE8sd1tPXSk7ZWxzZSBuKG4uUCtuLkYqKF98fFMpLHQsdyk7cmV0dXJuIHd9fSx7Ii4vX2V4cG9ydCI6NDIsIi4vX2hhcyI6NDYsIi4vX2hpZGUiOjQ3LCIuL19pdGVyLWNyZWF0ZSI6NTYsIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX2xpYnJhcnkiOjYyLCIuL19vYmplY3QtZ3BvIjo3MiwiLi9fcmVkZWZpbmUiOjc5LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6ODIsIi4vX3drcyI6OTd9XSw1ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLG49ITE7dHJ5e3ZhciBpPVs3XVtvXSgpO2lbInJldHVybiJdPWZ1bmN0aW9uKCl7bj0hMH0sQXJyYXkuZnJvbShpLGZ1bmN0aW9uKCl7dGhyb3cgMn0pfWNhdGNoKHMpe310LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighdCYmIW4pcmV0dXJuITE7dmFyIHI9ITE7dHJ5e3ZhciBpPVs3XSxzPWlbb10oKTtzLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTpyPSEwfX0saVtvXT1mdW5jdGlvbigpe3JldHVybiBzfSxlKGkpfWNhdGNoKGMpe31yZXR1cm4gcn19LHsiLi9fd2tzIjo5N31dLDU5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3ZhbHVlOnQsZG9uZTohIWV9fX0se31dLDYwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXt9fSx7fV0sNjE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cyIpLG49ZSgiLi9fdG8taW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcixpPW4oZSkscz1vKGkpLGM9cy5sZW5ndGgsYT0wO2M+YTspaWYoaVtyPXNbYSsrXV09PT10KXJldHVybiByfX0seyIuL19vYmplY3Qta2V5cyI6NzQsIi4vX3RvLWlvYmplY3QiOjkwfV0sNjI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ITB9LHt9XSw2MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3VpZCIpKCJtZXRhIiksbj1lKCIuL19pcy1vYmplY3QiKSxpPWUoIi4vX2hhcyIpLHM9ZSgiLi9fb2JqZWN0LWRwIikuZixjPTAsYT1PYmplY3QuaXNFeHRlbnNpYmxlfHxmdW5jdGlvbigpe3JldHVybiEwfSx1PSFlKCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIGEoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSl9KSxsPWZ1bmN0aW9uKGUpe3MoZSxvLHt2YWx1ZTp7aToiTyIrICsrYyx3Ont9fX0pfSxmPWZ1bmN0aW9uKGUsdCl7aWYoIW4oZSkpcmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlP2U6KCJzdHJpbmciPT10eXBlb2YgZT8iUyI6IlAiKStlO2lmKCFpKGUsbykpe2lmKCFhKGUpKXJldHVybiJGIjtpZighdClyZXR1cm4iRSI7bChlKX1yZXR1cm4gZVtvXS5pfSxkPWZ1bmN0aW9uKGUsdCl7aWYoIWkoZSxvKSl7aWYoIWEoZSkpcmV0dXJuITA7aWYoIXQpcmV0dXJuITE7bChlKX1yZXR1cm4gZVtvXS53fSxfPWZ1bmN0aW9uKGUpe3JldHVybiB1JiZwLk5FRUQmJmEoZSkmJiFpKGUsbykmJmwoZSksZX0scD10LmV4cG9ydHM9e0tFWTpvLE5FRUQ6ITEsZmFzdEtleTpmLGdldFdlYWs6ZCxvbkZyZWV6ZTpffX0seyIuL19mYWlscyI6NDMsIi4vX2hhcyI6NDYsIi4vX2lzLW9iamVjdCI6NTQsIi4vX29iamVjdC1kcCI6NjYsIi4vX3VpZCI6OTR9XSw2NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9fdGFzayIpLnNldCxpPW8uTXV0YXRpb25PYnNlcnZlcnx8by5XZWJLaXRNdXRhdGlvbk9ic2VydmVyLHM9by5wcm9jZXNzLGM9by5Qcm9taXNlLGE9InByb2Nlc3MiPT1lKCIuL19jb2YiKShzKTt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsdT1mdW5jdGlvbigpe3ZhciBvLG47Zm9yKGEmJihvPXMuZG9tYWluKSYmby5leGl0KCk7ZTspe249ZS5mbixlPWUubmV4dDt0cnl7bigpfWNhdGNoKGkpe3Rocm93IGU/cigpOnQ9dm9pZCAwLGl9fXQ9dm9pZCAwLG8mJm8uZW50ZXIoKX07aWYoYSlyPWZ1bmN0aW9uKCl7cy5uZXh0VGljayh1KX07ZWxzZSBpZihpKXt2YXIgbD0hMCxmPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtuZXcgaSh1KS5vYnNlcnZlKGYse2NoYXJhY3RlckRhdGE6ITB9KSxyPWZ1bmN0aW9uKCl7Zi5kYXRhPWw9IWx9fWVsc2UgaWYoYyYmYy5yZXNvbHZlKXt2YXIgZD1jLnJlc29sdmUoKTtyPWZ1bmN0aW9uKCl7ZC50aGVuKHUpfX1lbHNlIHI9ZnVuY3Rpb24oKXtuLmNhbGwobyx1KX07cmV0dXJuIGZ1bmN0aW9uKG8pe3ZhciBuPXtmbjpvLG5leHQ6dm9pZCAwfTt0JiYodC5uZXh0PW4pLGV8fChlPW4scigpKSx0PW59fX0seyIuL19jb2YiOjM0LCIuL19nbG9iYWwiOjQ1LCIuL190YXNrIjo4N31dLDY1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fYW4tb2JqZWN0Iiksbj1lKCIuL19vYmplY3QtZHBzIiksaT1lKCIuL19lbnVtLWJ1Zy1rZXlzIikscz1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIiksYz1mdW5jdGlvbigpe30sYT0icHJvdG90eXBlIix1PWZ1bmN0aW9uKCl7dmFyIHQscj1lKCIuL19kb20tY3JlYXRlIikoImlmcmFtZSIpLG89aS5sZW5ndGgsbj0iPiI7Zm9yKHIuc3R5bGUuZGlzcGxheT0ibm9uZSIsZSgiLi9faHRtbCIpLmFwcGVuZENoaWxkKHIpLHIuc3JjPSJqYXZhc2NyaXB0OiIsdD1yLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQsdC5vcGVuKCksdC53cml0ZSgiPHNjcmlwdD5kb2N1bWVudC5GPU9iamVjdDwvc2NyaXB0IituKSx0LmNsb3NlKCksdT10LkY7by0tOylkZWxldGUgdVthXVtpW29dXTtyZXR1cm4gdSgpfTt0LmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gbnVsbCE9PWU/KGNbYV09byhlKSxyPW5ldyBjLGNbYV09bnVsbCxyW3NdPWUpOnI9dSgpLHZvaWQgMD09PXQ/cjpuKHIsdCl9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2RvbS1jcmVhdGUiOjM5LCIuL19lbnVtLWJ1Zy1rZXlzIjo0MCwiLi9faHRtbCI6NDgsIi4vX29iamVjdC1kcHMiOjY3LCIuL19zaGFyZWQta2V5Ijo4M31dLDY2OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fYW4tb2JqZWN0Iiksbj1lKCIuL19pZTgtZG9tLWRlZmluZSIpLGk9ZSgiLi9fdG8tcHJpbWl0aXZlIikscz1PYmplY3QuZGVmaW5lUHJvcGVydHk7ci5mPWUoIi4vX2Rlc2NyaXB0b3JzIik/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKGUsdCxyKXtpZihvKGUpLHQ9aSh0LCEwKSxvKHIpLG4pdHJ5e3JldHVybiBzKGUsdCxyKX1jYXRjaChjKXt9aWYoImdldCJpbiByfHwic2V0ImluIHIpdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEiKTtyZXR1cm4idmFsdWUiaW4gciYmKGVbdF09ci52YWx1ZSksZX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19pZTgtZG9tLWRlZmluZSI6NDksIi4vX3RvLXByaW1pdGl2ZSI6OTN9XSw2NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1kcCIpLG49ZSgiLi9fYW4tb2JqZWN0IiksaT1lKCIuL19vYmplY3Qta2V5cyIpO3QuZXhwb3J0cz1lKCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzOmZ1bmN0aW9uKGUsdCl7bihlKTtmb3IodmFyIHIscz1pKHQpLGM9cy5sZW5ndGgsYT0wO2M+YTspby5mKGUscj1zW2ErK10sdFtyXSk7cmV0dXJuIGV9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fb2JqZWN0LWtleXMiOjc0fV0sNjg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3QtcGllIiksbj1lKCIuL19wcm9wZXJ0eS1kZXNjIiksaT1lKCIuL190by1pb2JqZWN0Iikscz1lKCIuL190by1wcmltaXRpdmUiKSxjPWUoIi4vX2hhcyIpLGE9ZSgiLi9faWU4LWRvbS1kZWZpbmUiKSx1PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7ci5mPWUoIi4vX2Rlc2NyaXB0b3JzIik/dTpmdW5jdGlvbihlLHQpe2lmKGU9aShlKSx0PXModCwhMCksYSl0cnl7cmV0dXJuIHUoZSx0KX1jYXRjaChyKXt9aWYoYyhlLHQpKXJldHVybiBuKCFvLmYuY2FsbChlLHQpLGVbdF0pfX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2hhcyI6NDYsIi4vX2llOC1kb20tZGVmaW5lIjo0OSwiLi9fb2JqZWN0LXBpZSI6NzUsIi4vX3Byb3BlcnR5LWRlc2MiOjc3LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tcHJpbWl0aXZlIjo5M31dLDY5OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWdvcG4iKS5mLGk9e30udG9TdHJpbmcscz0ib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93JiZPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcz9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpOltdLGM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3JldHVybiBzLnNsaWNlKCl9fTt0LmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gcyYmIltvYmplY3QgV2luZG93XSI9PWkuY2FsbChlKT9jKGUpOm4obyhlKSl9fSx7Ii4vX29iamVjdC1nb3BuIjo3MCwiLi9fdG8taW9iamVjdCI6OTB9XSw3MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1rZXlzLWludGVybmFsIiksbj1lKCIuL19lbnVtLWJ1Zy1rZXlzIikuY29uY2F0KCJsZW5ndGgiLCJwcm90b3R5cGUiKTtyLmY9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fGZ1bmN0aW9uKGUpe3JldHVybiBvKGUsbil9fSx7Ii4vX2VudW0tYnVnLWtleXMiOjQwLCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6NzN9XSw3MTpbZnVuY3Rpb24oZSx0LHIpe3IuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSx7fV0sNzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19oYXMiKSxuPWUoIi4vX3RvLW9iamVjdCIpLGk9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLHM9T2JqZWN0LnByb3RvdHlwZTt0LmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1uKGUpLG8oZSxpKT9lW2ldOiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P3M6bnVsbH19LHsiLi9faGFzIjo0NiwiLi9fc2hhcmVkLWtleSI6ODMsIi4vX3RvLW9iamVjdCI6OTJ9XSw3MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2hhcyIpLG49ZSgiLi9fdG8taW9iamVjdCIpLGk9ZSgiLi9fYXJyYXktaW5jbHVkZXMiKSghMSkscz1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYz1uKGUpLGE9MCx1PVtdO2ZvcihyIGluIGMpciE9cyYmbyhjLHIpJiZ1LnB1c2gocik7Zm9yKDt0Lmxlbmd0aD5hOylvKGMscj10W2ErK10pJiYofmkodSxyKXx8dS5wdXNoKHIpKTtyZXR1cm4gdX19LHsiLi9fYXJyYXktaW5jbHVkZXMiOjMyLCIuL19oYXMiOjQ2LCIuL19zaGFyZWQta2V5Ijo4MywiLi9fdG8taW9iamVjdCI6OTB9XSw3NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1rZXlzLWludGVybmFsIiksbj1lKCIuL19lbnVtLWJ1Zy1rZXlzIik7dC5leHBvcnRzPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXtyZXR1cm4gbyhlLG4pfX0seyIuL19lbnVtLWJ1Zy1rZXlzIjo0MCwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjczfV0sNzU6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9e30ucHJvcGVydHlJc0VudW1lcmFibGV9LHt9XSw3NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2V4cG9ydCIpLG49ZSgiLi9fY29yZSIpLGk9ZSgiLi9fZmFpbHMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0obi5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLHM9e307c1tlXT10KHIpLG8oby5TK28uRippKGZ1bmN0aW9uKCl7cigxKX0pLCJPYmplY3QiLHMpfX0seyIuL19jb3JlIjozNSwiLi9fZXhwb3J0Ijo0MiwiLi9fZmFpbHMiOjQzfV0sNzc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSx7fV0sNzg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19oaWRlIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG4gaW4gdClyJiZlW25dP2Vbbl09dFtuXTpvKGUsbix0W25dKTtyZXR1cm4gZX19LHsiLi9faGlkZSI6NDd9XSw3OTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKCIuL19oaWRlIil9LHsiLi9faGlkZSI6NDd9XSw4MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lzLW9iamVjdCIpLG49ZSgiLi9fYW4tb2JqZWN0IiksaT1mdW5jdGlvbihlLHQpe2lmKG4oZSksIW8odCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcih0KyI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhIil9O3QuZXhwb3J0cz17c2V0Ok9iamVjdC5zZXRQcm90b3R5cGVPZnx8KCJfX3Byb3RvX18iaW57fT9mdW5jdGlvbih0LHIsbyl7dHJ5e289ZSgiLi9fY3R4IikoRnVuY3Rpb24uY2FsbCxlKCIuL19vYmplY3QtZ29wZCIpLmYoT2JqZWN0LnByb3RvdHlwZSwiX19wcm90b19fIikuc2V0LDIpLG8odCxbXSkscj0hKHQgaW5zdGFuY2VvZiBBcnJheSl9Y2F0Y2gobil7cj0hMH1yZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gaShlLHQpLHI/ZS5fX3Byb3RvX189dDpvKGUsdCksZX19KHt9LCExKTp2b2lkIDApLGNoZWNrOml9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2N0eCI6MzYsIi4vX2lzLW9iamVjdCI6NTQsIi4vX29iamVjdC1nb3BkIjo2OH1dLDgxOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9fY29yZSIpLGk9ZSgiLi9fb2JqZWN0LWRwIikscz1lKCIuL19kZXNjcmlwdG9ycyIpLGM9ZSgiLi9fd2tzIikoInNwZWNpZXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIG5bZV0/bltlXTpvW2VdO3MmJnQmJiF0W2NdJiZpLmYodCxjLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSl9fSx7Ii4vX2NvcmUiOjM1LCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2dsb2JhbCI6NDUsIi4vX29iamVjdC1kcCI6NjYsIi4vX3drcyI6OTd9XSw4MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1kcCIpLmYsbj1lKCIuL19oYXMiKSxpPWUoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZSYmIW4oZT1yP2U6ZS5wcm90b3R5cGUsaSkmJm8oZSxpLHtjb25maWd1cmFibGU6ITAsdmFsdWU6dH0pfX0seyIuL19oYXMiOjQ2LCIuL19vYmplY3QtZHAiOjY2LCIuL193a3MiOjk3fV0sODM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19zaGFyZWQiKSgia2V5cyIpLG49ZSgiLi9fdWlkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvW2VdfHwob1tlXT1uKGUpKX19LHsiLi9fc2hhcmVkIjo4NCwiLi9fdWlkIjo5NH1dLDg0OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj0iX19jb3JlLWpzX3NoYXJlZF9fIixpPW9bbl18fChvW25dPXt9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlbZV18fChpW2VdPXt9KX19LHsiLi9fZ2xvYmFsIjo0NX1dLDg1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fYW4tb2JqZWN0Iiksbj1lKCIuL19hLWZ1bmN0aW9uIiksaT1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLHM9byhlKS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09c3x8dm9pZCAwPT0ocj1vKHMpW2ldKT90Om4ocil9fSx7Ii4vX2EtZnVuY3Rpb24iOjI4LCIuL19hbi1vYmplY3QiOjMxLCIuL193a3MiOjk3fV0sODY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pbnRlZ2VyIiksbj1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIpe3ZhciBpLHMsYz1TdHJpbmcobih0KSksYT1vKHIpLHU9Yy5sZW5ndGg7cmV0dXJuIGE8MHx8YT49dT9lPyIiOnZvaWQgMDooaT1jLmNoYXJDb2RlQXQoYSksaTw1NTI5Nnx8aT41NjMxOXx8YSsxPT09dXx8KHM9Yy5jaGFyQ29kZUF0KGErMSkpPDU2MzIwfHxzPjU3MzQzP2U/Yy5jaGFyQXQoYSk6aTplP2Muc2xpY2UoYSxhKzIpOihpLTU1Mjk2PDwxMCkrKHMtNTYzMjApKzY1NTM2KX19fSx7Ii4vX2RlZmluZWQiOjM3LCIuL190by1pbnRlZ2VyIjo4OX1dLDg3OltmdW5jdGlvbihlLHQscil7dmFyIG8sbixpLHM9ZSgiLi9fY3R4IiksYz1lKCIuL19pbnZva2UiKSxhPWUoIi4vX2h0bWwiKSx1PWUoIi4vX2RvbS1jcmVhdGUiKSxsPWUoIi4vX2dsb2JhbCIpLGY9bC5wcm9jZXNzLGQ9bC5zZXRJbW1lZGlhdGUsXz1sLmNsZWFySW1tZWRpYXRlLHA9bC5NZXNzYWdlQ2hhbm5lbCxiPTAsaD17fSx5PSJvbnJlYWR5c3RhdGVjaGFuZ2UiLHY9ZnVuY3Rpb24oKXt2YXIgZT0rdGhpcztpZihoLmhhc093blByb3BlcnR5KGUpKXt2YXIgdD1oW2VdO2RlbGV0ZSBoW2VdLHQoKX19LGo9ZnVuY3Rpb24oZSl7di5jYWxsKGUuZGF0YSl9O2QmJl98fChkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTE7YXJndW1lbnRzLmxlbmd0aD5yOyl0LnB1c2goYXJndW1lbnRzW3IrK10pO3JldHVybiBoWysrYl09ZnVuY3Rpb24oKXtjKCJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6RnVuY3Rpb24oZSksdCl9LG8oYiksYn0sXz1mdW5jdGlvbihlKXtkZWxldGUgaFtlXX0sInByb2Nlc3MiPT1lKCIuL19jb2YiKShmKT9vPWZ1bmN0aW9uKGUpe2YubmV4dFRpY2socyh2LGUsMSkpfTpwPyhuPW5ldyBwLGk9bi5wb3J0MixuLnBvcnQxLm9ubWVzc2FnZT1qLG89cyhpLnBvc3RNZXNzYWdlLGksMSkpOmwuYWRkRXZlbnRMaXN0ZW5lciYmImZ1bmN0aW9uIj09dHlwZW9mIHBvc3RNZXNzYWdlJiYhbC5pbXBvcnRTY3JpcHRzPyhvPWZ1bmN0aW9uKGUpe2wucG9zdE1lc3NhZ2UoZSsiIiwiKiIpfSxsLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGosITEpKTpvPXkgaW4gdSgic2NyaXB0Iik/ZnVuY3Rpb24oZSl7YS5hcHBlbmRDaGlsZCh1KCJzY3JpcHQiKSlbeV09ZnVuY3Rpb24oKXthLnJlbW92ZUNoaWxkKHRoaXMpLHYuY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQocyh2LGUsMSksMCl9KSx0LmV4cG9ydHM9e3NldDpkLGNsZWFyOl99fSx7Ii4vX2NvZiI6MzQsIi4vX2N0eCI6MzYsIi4vX2RvbS1jcmVhdGUiOjM5LCIuL19nbG9iYWwiOjQ1LCIuL19odG1sIjo0OCwiLi9faW52b2tlIjo1MH1dLDg4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW50ZWdlciIpLG49TWF0aC5tYXgsaT1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1vKGUpLGU8MD9uKGUrdCwwKTppKGUsdCl9fSx7Ii4vX3RvLWludGVnZXIiOjg5fV0sODk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1NYXRoLmNlaWwsbj1NYXRoLmZsb29yO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooZT4wP246bykoZSl9fSx7fV0sOTA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pb2JqZWN0Iiksbj1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvKG4oZSkpfX0seyIuL19kZWZpbmVkIjozNywiLi9faW9iamVjdCI6NTF9XSw5MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWludGVnZXIiKSxuPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP24obyhlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0seyIuL190by1pbnRlZ2VyIjo4OX1dLDkyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KG8oZSkpfX0seyIuL19kZWZpbmVkIjozN31dLDkzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faXMtb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIW8oZSkpcmV0dXJuIGU7dmFyIHIsbjtpZih0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW8obj1yLmNhbGwoZSkpKXJldHVybiBuO2lmKCJmdW5jdGlvbiI9PXR5cGVvZihyPWUudmFsdWVPZikmJiFvKG49ci5jYWxsKGUpKSlyZXR1cm4gbjtpZighdCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFvKG49ci5jYWxsKGUpKSlyZXR1cm4gbjt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfX0seyIuL19pcy1vYmplY3QiOjU0fV0sOTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz0wLG49TWF0aC5yYW5kb20oKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIlN5bWJvbCgiLmNvbmNhdCh2b2lkIDA9PT1lPyIiOmUsIilfIiwoKytvK24pLnRvU3RyaW5nKDM2KSl9fSx7fV0sOTU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2xpYnJhcnkiKSxzPWUoIi4vX3drcy1leHQiKSxjPWUoIi4vX29iamVjdC1kcCIpLmY7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW4uU3ltYm9sfHwobi5TeW1ib2w9aT97fTpvLlN5bWJvbHx8e30pOyJfIj09ZS5jaGFyQXQoMCl8fGUgaW4gdHx8Yyh0LGUse3ZhbHVlOnMuZihlKX0pfX0seyIuL19jb3JlIjozNSwiLi9fZ2xvYmFsIjo0NSwiLi9fbGlicmFyeSI6NjIsIi4vX29iamVjdC1kcCI6NjYsIi4vX3drcy1leHQiOjk2fV0sOTY6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9ZSgiLi9fd2tzIil9LHsiLi9fd2tzIjo5N31dLDk3OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fc2hhcmVkIikoIndrcyIpLG49ZSgiLi9fdWlkIiksaT1lKCIuL19nbG9iYWwiKS5TeW1ib2wscz0iZnVuY3Rpb24iPT10eXBlb2YgaSxjPXQuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gb1tlXXx8KG9bZV09cyYmaVtlXXx8KHM/aTpuKSgiU3ltYm9sLiIrZSkpfTtjLnN0b3JlPW99LHsiLi9fZ2xvYmFsIjo0NSwiLi9fc2hhcmVkIjo4NCwiLi9fdWlkIjo5NH1dLDk4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fY2xhc3NvZiIpLG49ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksaT1lKCIuL19pdGVyYXRvcnMiKTt0LmV4cG9ydHM9ZSgiLi9fY29yZSIpLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMCE9ZSlyZXR1cm4gZVtuXXx8ZVsiQEBpdGVyYXRvciJdfHxpW28oZSldfX0seyIuL19jbGFzc29mIjozMywiLi9fY29yZSI6MzUsIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTd9XSw5OTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCIuL19hZGQtdG8tdW5zY29wYWJsZXMiKSxuPWUoIi4vX2l0ZXItc3RlcCIpLGk9ZSgiLi9faXRlcmF0b3JzIikscz1lKCIuL190by1pb2JqZWN0Iik7dC5leHBvcnRzPWUoIi4vX2l0ZXItZGVmaW5lIikoQXJyYXksIkFycmF5IixmdW5jdGlvbihlLHQpe3RoaXMuX3Q9cyhlKSx0aGlzLl9pPTAsdGhpcy5faz10fSxmdW5jdGlvbigpe3ZhciBlPXRoaXMuX3QsdD10aGlzLl9rLHI9dGhpcy5faSsrO3JldHVybiFlfHxyPj1lLmxlbmd0aD8odGhpcy5fdD12b2lkIDAsbigxKSk6ImtleXMiPT10P24oMCxyKToidmFsdWVzIj09dD9uKDAsZVtyXSk6bigwLFtyLGVbcl1dKX0sInZhbHVlcyIpLGkuQXJndW1lbnRzPWkuQXJyYXksbygia2V5cyIpLG8oInZhbHVlcyIpLG8oImVudHJpZXMiKX0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjI5LCIuL19pdGVyLWRlZmluZSI6NTcsIi4vX2l0ZXItc3RlcCI6NTksIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX3RvLWlvYmplY3QiOjkwfV0sMTAwOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZXhwb3J0Iik7byhvLlMsIk9iamVjdCIse2NyZWF0ZTplKCIuL19vYmplY3QtY3JlYXRlIil9KX0seyIuL19leHBvcnQiOjQyLCIuL19vYmplY3QtY3JlYXRlIjo2NX1dLDEwMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2V4cG9ydCIpO28oby5TK28uRiohZSgiLi9fZGVzY3JpcHRvcnMiKSwiT2JqZWN0Iix7ZGVmaW5lUHJvcGVydHk6ZSgiLi9fb2JqZWN0LWRwIikuZn0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZXhwb3J0Ijo0MiwiLi9fb2JqZWN0LWRwIjo2Nn1dLDEwMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWlvYmplY3QiKSxuPWUoIi4vX29iamVjdC1nb3BkIikuZjtlKCIuL19vYmplY3Qtc2FwIikoImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gbihvKGUpLHQpfX0pfSx7Ii4vX29iamVjdC1nb3BkIjo2OCwiLi9fb2JqZWN0LXNhcCI6NzYsIi4vX3RvLWlvYmplY3QiOjkwfV0sMTAzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8tb2JqZWN0Iiksbj1lKCIuL19vYmplY3QtZ3BvIik7ZSgiLi9fb2JqZWN0LXNhcCIpKCJnZXRQcm90b3R5cGVPZiIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSl9LHsiLi9fb2JqZWN0LWdwbyI6NzIsIi4vX29iamVjdC1zYXAiOjc2LCIuL190by1vYmplY3QiOjkyfV0sMTA0OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8tb2JqZWN0Iiksbj1lKCIuL19vYmplY3Qta2V5cyIpO2UoIi4vX29iamVjdC1zYXAiKSgia2V5cyIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSl9LHsiLi9fb2JqZWN0LWtleXMiOjc0LCIuL19vYmplY3Qtc2FwIjo3NiwiLi9fdG8tb2JqZWN0Ijo5Mn1dLDEwNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2V4cG9ydCIpO28oby5TLCJPYmplY3QiLHtzZXRQcm90b3R5cGVPZjplKCIuL19zZXQtcHJvdG8iKS5zZXR9KX0seyIuL19leHBvcnQiOjQyLCIuL19zZXQtcHJvdG8iOjgwfV0sMTA2OltmdW5jdGlvbihlLHQscil7fSx7fV0sMTA3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvLG4saSxzPWUoIi4vX2xpYnJhcnkiKSxjPWUoIi4vX2dsb2JhbCIpLGE9ZSgiLi9fY3R4IiksdT1lKCIuL19jbGFzc29mIiksbD1lKCIuL19leHBvcnQiKSxmPWUoIi4vX2lzLW9iamVjdCIpLGQ9KGUoIi4vX2FuLW9iamVjdCIpLGUoIi4vX2EtZnVuY3Rpb24iKSksXz1lKCIuL19hbi1pbnN0YW5jZSIpLHA9ZSgiLi9fZm9yLW9mIiksYj0oZSgiLi9fc2V0LXByb3RvIikuc2V0LGUoIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiKSksaD1lKCIuL190YXNrIikuc2V0LHk9ZSgiLi9fbWljcm90YXNrIikoKSx2PSJQcm9taXNlIixqPWMuVHlwZUVycm9yLG09Yy5wcm9jZXNzLGc9Y1t2XSxtPWMucHJvY2Vzcyx3PSJwcm9jZXNzIj09dShtKSxPPWZ1bmN0aW9uKCl7fSxrPSEhZnVuY3Rpb24oKXt0cnl7dmFyIHQ9Zy5yZXNvbHZlKDEpLHI9KHQuY29uc3RydWN0b3I9e30pW2UoIi4vX3drcyIpKCJzcGVjaWVzIildPWZ1bmN0aW9uKGUpe2UoTyxPKX07cmV0dXJuKHd8fCJmdW5jdGlvbiI9PXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpJiZ0LnRoZW4oTylpbnN0YW5jZW9mIHJ9Y2F0Y2gobyl7fX0oKSx4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9PT10fHxlPT09ZyYmdD09PWl9LEM9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuISghZihlKXx8ImZ1bmN0aW9uIiE9dHlwZW9mKHQ9ZS50aGVuKSkmJnR9LEU9ZnVuY3Rpb24oZSl7cmV0dXJuIHgoZyxlKT9uZXcgUyhlKTpuZXcgbihlKX0sUz1uPWZ1bmN0aW9uKGUpe3ZhciB0LHI7dGhpcy5wcm9taXNlPW5ldyBlKGZ1bmN0aW9uKGUsbyl7aWYodm9pZCAwIT09dHx8dm9pZCAwIT09cil0aHJvdyBqKCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvciIpO3Q9ZSxyPW99KSx0aGlzLnJlc29sdmU9ZCh0KSx0aGlzLnJlamVjdD1kKHIpfSxSPWZ1bmN0aW9uKGUpe3RyeXtlKCl9Y2F0Y2godCl7cmV0dXJue2Vycm9yOnR9fX0sVD1mdW5jdGlvbihlLHQpe2lmKCFlLl9uKXtlLl9uPSEwO3ZhciByPWUuX2M7eShmdW5jdGlvbigpe2Zvcih2YXIgbz1lLl92LG49MT09ZS5fcyxpPTAscz1mdW5jdGlvbih0KXt2YXIgcixpLHM9bj90Lm9rOnQuZmFpbCxjPXQucmVzb2x2ZSxhPXQucmVqZWN0LHU9dC5kb21haW47dHJ5e3M/KG58fCgyPT1lLl9oJiZBKGUpLGUuX2g9MSkscz09PSEwP3I9bzoodSYmdS5lbnRlcigpLHI9cyhvKSx1JiZ1LmV4aXQoKSkscj09PXQucHJvbWlzZT9hKGooIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KGk9QyhyKSk/aS5jYWxsKHIsYyxhKTpjKHIpKTphKG8pfWNhdGNoKGwpe2EobCl9fTtyLmxlbmd0aD5pOylzKHJbaSsrXSk7ZS5fYz1bXSxlLl9uPSExLHQmJiFlLl9oJiZNKGUpfSl9fSxNPWZ1bmN0aW9uKGUpe2guY2FsbChjLGZ1bmN0aW9uKCl7dmFyIHQscixvLG49ZS5fdjtpZihQKGUpJiYodD1SKGZ1bmN0aW9uKCl7dz9tLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbixlKToocj1jLm9udW5oYW5kbGVkcmVqZWN0aW9uKT9yKHtwcm9taXNlOmUscmVhc29uOm59KToobz1jLmNvbnNvbGUpJiZvLmVycm9yJiZvLmVycm9yKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLG4pfSksZS5faD13fHxQKGUpPzI6MSksZS5fYT12b2lkIDAsdCl0aHJvdyB0LmVycm9yfSl9LFA9ZnVuY3Rpb24oZSl7aWYoMT09ZS5faClyZXR1cm4hMTtmb3IodmFyIHQscj1lLl9hfHxlLl9jLG89MDtyLmxlbmd0aD5vOylpZih0PXJbbysrXSx0LmZhaWx8fCFQKHQucHJvbWlzZSkpcmV0dXJuITE7cmV0dXJuITB9LEE9ZnVuY3Rpb24oZSl7aC5jYWxsKGMsZnVuY3Rpb24oKXt2YXIgdDt3P20uZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsZSk6KHQ9Yy5vbnJlamVjdGlvbmhhbmRsZWQpJiZ0KHtwcm9taXNlOmUscmVhc29uOmUuX3Z9KX0pfSxEPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fZHx8KHQuX2Q9ITAsdD10Ll93fHx0LHQuX3Y9ZSx0Ll9zPTIsdC5fYXx8KHQuX2E9dC5fYy5zbGljZSgpKSxUKHQsITApKX0sTj1mdW5jdGlvbihlKXt2YXIgdCxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09ZSl0aHJvdyBqKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyh0PUMoZSkpP3koZnVuY3Rpb24oKXt2YXIgbz17X3c6cixfZDohMX07dHJ5e3QuY2FsbChlLGEoTixvLDEpLGEoRCxvLDEpKX1jYXRjaChuKXtELmNhbGwobyxuKX19KTooci5fdj1lLHIuX3M9MSxUKHIsITEpKX1jYXRjaChvKXtELmNhbGwoe193OnIsX2Q6ITF9LG8pfX19O2t8fChnPWZ1bmN0aW9uKGUpe18odGhpcyxnLHYsIl9oIiksZChlKSxvLmNhbGwodGhpcyk7dHJ5e2UoYShOLHRoaXMsMSksYShELHRoaXMsMSkpfWNhdGNoKHQpe0QuY2FsbCh0aGlzLHQpfX0sbz1mdW5jdGlvbihlKXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSxvLnByb3RvdHlwZT1lKCIuL19yZWRlZmluZS1hbGwiKShnLnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbihlLHQpe3ZhciByPUUoYih0aGlzLGcpKTtyZXR1cm4gci5vaz0iZnVuY3Rpb24iIT10eXBlb2YgZXx8ZSxyLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIHQmJnQsci5kb21haW49dz9tLmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKHIpLHRoaXMuX2EmJnRoaXMuX2EucHVzaChyKSx0aGlzLl9zJiZUKHRoaXMsITEpLHIucHJvbWlzZX0sImNhdGNoIjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCxlKX19KSxTPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IG87dGhpcy5wcm9taXNlPWUsdGhpcy5yZXNvbHZlPWEoTixlLDEpLHRoaXMucmVqZWN0PWEoRCxlLDEpfSksbChsLkcrbC5XK2wuRiohayx7UHJvbWlzZTpnfSksZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKShnLHYpLGUoIi4vX3NldC1zcGVjaWVzIikodiksaT1lKCIuL19jb3JlIilbdl0sbChsLlMrbC5GKiFrLHYse3JlamVjdDpmdW5jdGlvbihlKXt2YXIgdD1FKHRoaXMpLHI9dC5yZWplY3Q7cmV0dXJuIHIoZSksDQp0LnByb21pc2V9fSksbChsLlMrbC5GKihzfHwhayksdix7cmVzb2x2ZTpmdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgZyYmeChlLmNvbnN0cnVjdG9yLHRoaXMpKXJldHVybiBlO3ZhciB0PUUodGhpcykscj10LnJlc29sdmU7cmV0dXJuIHIoZSksdC5wcm9taXNlfX0pLGwobC5TK2wuRiohKGsmJmUoIi4vX2l0ZXItZGV0ZWN0IikoZnVuY3Rpb24oZSl7Zy5hbGwoZSlbImNhdGNoIl0oTyl9KSksdix7YWxsOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1FKHQpLG89ci5yZXNvbHZlLG49ci5yZWplY3QsaT1SKGZ1bmN0aW9uKCl7dmFyIHI9W10saT0wLHM9MTtwKGUsITEsZnVuY3Rpb24oZSl7dmFyIGM9aSsrLGE9ITE7ci5wdXNoKHZvaWQgMCkscysrLHQucmVzb2x2ZShlKS50aGVuKGZ1bmN0aW9uKGUpe2F8fChhPSEwLHJbY109ZSwtLXN8fG8ocikpfSxuKX0pLC0tc3x8byhyKX0pO3JldHVybiBpJiZuKGkuZXJyb3IpLHIucHJvbWlzZX0scmFjZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9RSh0KSxvPXIucmVqZWN0LG49UihmdW5jdGlvbigpe3AoZSwhMSxmdW5jdGlvbihlKXt0LnJlc29sdmUoZSkudGhlbihyLnJlc29sdmUsbyl9KX0pO3JldHVybiBuJiZvKG4uZXJyb3IpLHIucHJvbWlzZX19KX0seyIuL19hLWZ1bmN0aW9uIjoyOCwiLi9fYW4taW5zdGFuY2UiOjMwLCIuL19hbi1vYmplY3QiOjMxLCIuL19jbGFzc29mIjozMywiLi9fY29yZSI6MzUsIi4vX2N0eCI6MzYsIi4vX2V4cG9ydCI6NDIsIi4vX2Zvci1vZiI6NDQsIi4vX2dsb2JhbCI6NDUsIi4vX2lzLW9iamVjdCI6NTQsIi4vX2l0ZXItZGV0ZWN0Ijo1OCwiLi9fbGlicmFyeSI6NjIsIi4vX21pY3JvdGFzayI6NjQsIi4vX3JlZGVmaW5lLWFsbCI6NzgsIi4vX3NldC1wcm90byI6ODAsIi4vX3NldC1zcGVjaWVzIjo4MSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIjo4NSwiLi9fdGFzayI6ODcsIi4vX3drcyI6OTd9XSwxMDg6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fc3RyaW5nLWF0IikoITApO2UoIi4vX2l0ZXItZGVmaW5lIikoU3RyaW5nLCJTdHJpbmciLGZ1bmN0aW9uKGUpe3RoaXMuX3Q9U3RyaW5nKGUpLHRoaXMuX2k9MH0sZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMuX3Qscj10aGlzLl9pO3JldHVybiByPj10Lmxlbmd0aD97dmFsdWU6dm9pZCAwLGRvbmU6ITB9OihlPW8odCxyKSx0aGlzLl9pKz1lLmxlbmd0aCx7dmFsdWU6ZSxkb25lOiExfSl9KX0seyIuL19pdGVyLWRlZmluZSI6NTcsIi4vX3N0cmluZy1hdCI6ODZ9XSwxMDk6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj1lKCIuL19oYXMiKSxpPWUoIi4vX2Rlc2NyaXB0b3JzIikscz1lKCIuL19leHBvcnQiKSxjPWUoIi4vX3JlZGVmaW5lIiksYT1lKCIuL19tZXRhIikuS0VZLHU9ZSgiLi9fZmFpbHMiKSxsPWUoIi4vX3NoYXJlZCIpLGY9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxkPWUoIi4vX3VpZCIpLF89ZSgiLi9fd2tzIikscD1lKCIuL193a3MtZXh0IiksYj1lKCIuL193a3MtZGVmaW5lIiksaD1lKCIuL19rZXlvZiIpLHk9ZSgiLi9fZW51bS1rZXlzIiksdj1lKCIuL19pcy1hcnJheSIpLGo9ZSgiLi9fYW4tb2JqZWN0IiksbT1lKCIuL190by1pb2JqZWN0IiksZz1lKCIuL190by1wcmltaXRpdmUiKSx3PWUoIi4vX3Byb3BlcnR5LWRlc2MiKSxPPWUoIi4vX29iamVjdC1jcmVhdGUiKSxrPWUoIi4vX29iamVjdC1nb3BuLWV4dCIpLHg9ZSgiLi9fb2JqZWN0LWdvcGQiKSxDPWUoIi4vX29iamVjdC1kcCIpLEU9ZSgiLi9fb2JqZWN0LWtleXMiKSxTPXguZixSPUMuZixUPWsuZixNPW8uU3ltYm9sLFA9by5KU09OLEE9UCYmUC5zdHJpbmdpZnksRD0icHJvdG90eXBlIixOPV8oIl9oaWRkZW4iKSxMPV8oInRvUHJpbWl0aXZlIiksRj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxJPWwoInN5bWJvbC1yZWdpc3RyeSIpLFU9bCgic3ltYm9scyIpLHo9bCgib3Atc3ltYm9scyIpLEg9T2JqZWN0W0RdLFY9ImZ1bmN0aW9uIj09dHlwZW9mIE0sQj1vLlFPYmplY3QsSj0hQnx8IUJbRF18fCFCW0RdLmZpbmRDaGlsZCxXPWkmJnUoZnVuY3Rpb24oKXtyZXR1cm4gNyE9TyhSKHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIodGhpcywiYSIse3ZhbHVlOjd9KS5hfX0pKS5hfSk/ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPVMoSCx0KTtvJiZkZWxldGUgSFt0XSxSKGUsdCxyKSxvJiZlIT09SCYmUihILHQsbyl9OlIsWT1mdW5jdGlvbihlKXt2YXIgdD1VW2VdPU8oTVtEXSk7cmV0dXJuIHQuX2s9ZSx0fSxxPVYmJiJzeW1ib2wiPT10eXBlb2YgTS5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4ic3ltYm9sIj09dHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgTX0sSz1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9PT1IJiZLKHosdCxyKSxqKGUpLHQ9Zyh0LCEwKSxqKHIpLG4oVSx0KT8oci5lbnVtZXJhYmxlPyhuKGUsTikmJmVbTl1bdF0mJihlW05dW3RdPSExKSxyPU8ocix7ZW51bWVyYWJsZTp3KDAsITEpfSkpOihuKGUsTil8fFIoZSxOLHcoMSx7fSkpLGVbTl1bdF09ITApLFcoZSx0LHIpKTpSKGUsdCxyKX0sRz1mdW5jdGlvbihlLHQpe2ooZSk7Zm9yKHZhciByLG89eSh0PW0odCkpLG49MCxpPW8ubGVuZ3RoO2k+bjspSyhlLHI9b1tuKytdLHRbcl0pO3JldHVybiBlfSxaPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQ/TyhlKTpHKE8oZSksdCl9LFg9ZnVuY3Rpb24oZSl7dmFyIHQ9Ri5jYWxsKHRoaXMsZT1nKGUsITApKTtyZXR1cm4hKHRoaXM9PT1IJiZuKFUsZSkmJiFuKHosZSkpJiYoISh0fHwhbih0aGlzLGUpfHwhbihVLGUpfHxuKHRoaXMsTikmJnRoaXNbTl1bZV0pfHx0KX0sJD1mdW5jdGlvbihlLHQpe2lmKGU9bShlKSx0PWcodCwhMCksZSE9PUh8fCFuKFUsdCl8fG4oeix0KSl7dmFyIHI9UyhlLHQpO3JldHVybiFyfHwhbihVLHQpfHxuKGUsTikmJmVbTl1bdF18fChyLmVudW1lcmFibGU9ITApLHJ9fSxRPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPVQobShlKSksbz1bXSxpPTA7ci5sZW5ndGg+aTspbihVLHQ9cltpKytdKXx8dD09Tnx8dD09YXx8by5wdXNoKHQpO3JldHVybiBvfSxlZT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1lPT09SCxvPVQocj96Om0oZSkpLGk9W10scz0wO28ubGVuZ3RoPnM7KSFuKFUsdD1vW3MrK10pfHxyJiYhbihILHQpfHxpLnB1c2goVVt0XSk7cmV0dXJuIGl9O1Z8fChNPWZ1bmN0aW9uKCl7aWYodGhpcyBpbnN0YW5jZW9mIE0pdGhyb3cgVHlwZUVycm9yKCJTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhIik7dmFyIGU9ZChhcmd1bWVudHMubGVuZ3RoPjA/YXJndW1lbnRzWzBdOnZvaWQgMCksdD1mdW5jdGlvbihyKXt0aGlzPT09SCYmdC5jYWxsKHosciksbih0aGlzLE4pJiZuKHRoaXNbTl0sZSkmJih0aGlzW05dW2VdPSExKSxXKHRoaXMsZSx3KDEscikpfTtyZXR1cm4gaSYmSiYmVyhILGUse2NvbmZpZ3VyYWJsZTohMCxzZXQ6dH0pLFkoZSl9LGMoTVtEXSwidG9TdHJpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2t9KSx4LmY9JCxDLmY9SyxlKCIuL19vYmplY3QtZ29wbiIpLmY9ay5mPVEsZSgiLi9fb2JqZWN0LXBpZSIpLmY9WCxlKCIuL19vYmplY3QtZ29wcyIpLmY9ZWUsaSYmIWUoIi4vX2xpYnJhcnkiKSYmYyhILCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsWCwhMCkscC5mPWZ1bmN0aW9uKGUpe3JldHVybiBZKF8oZSkpfSkscyhzLkcrcy5XK3MuRiohVix7U3ltYm9sOk19KTtmb3IodmFyIHRlPSJoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcyIuc3BsaXQoIiwiKSxyZT0wO3RlLmxlbmd0aD5yZTspXyh0ZVtyZSsrXSk7Zm9yKHZhciB0ZT1FKF8uc3RvcmUpLHJlPTA7dGUubGVuZ3RoPnJlOyliKHRlW3JlKytdKTtzKHMuUytzLkYqIVYsIlN5bWJvbCIseyJmb3IiOmZ1bmN0aW9uKGUpe3JldHVybiBuKEksZSs9IiIpP0lbZV06SVtlXT1NKGUpfSxrZXlGb3I6ZnVuY3Rpb24oZSl7aWYocShlKSlyZXR1cm4gaChJLGUpO3Rocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgc3ltYm9sISIpfSx1c2VTZXR0ZXI6ZnVuY3Rpb24oKXtKPSEwfSx1c2VTaW1wbGU6ZnVuY3Rpb24oKXtKPSExfX0pLHMocy5TK3MuRiohViwiT2JqZWN0Iix7Y3JlYXRlOlosZGVmaW5lUHJvcGVydHk6SyxkZWZpbmVQcm9wZXJ0aWVzOkcsZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiQsZ2V0T3duUHJvcGVydHlOYW1lczpRLGdldE93blByb3BlcnR5U3ltYm9sczplZX0pLFAmJnMocy5TK3MuRiooIVZ8fHUoZnVuY3Rpb24oKXt2YXIgZT1NKCk7cmV0dXJuIltudWxsXSIhPUEoW2VdKXx8Int9IiE9QSh7YTplfSl8fCJ7fSIhPUEoT2JqZWN0KGUpKX0pKSwiSlNPTiIse3N0cmluZ2lmeTpmdW5jdGlvbihlKXtpZih2b2lkIDAhPT1lJiYhcShlKSl7Zm9yKHZhciB0LHIsbz1bZV0sbj0xO2FyZ3VtZW50cy5sZW5ndGg+bjspby5wdXNoKGFyZ3VtZW50c1tuKytdKTtyZXR1cm4gdD1vWzFdLCJmdW5jdGlvbiI9PXR5cGVvZiB0JiYocj10KSwhciYmdih0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtpZihyJiYodD1yLmNhbGwodGhpcyxlLHQpKSwhcSh0KSlyZXR1cm4gdH0pLG9bMV09dCxBLmFwcGx5KFAsbyl9fX0pLE1bRF1bTF18fGUoIi4vX2hpZGUiKShNW0RdLEwsTVtEXS52YWx1ZU9mKSxmKE0sIlN5bWJvbCIpLGYoTWF0aCwiTWF0aCIsITApLGYoby5KU09OLCJKU09OIiwhMCl9LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19lbnVtLWtleXMiOjQxLCIuL19leHBvcnQiOjQyLCIuL19mYWlscyI6NDMsIi4vX2dsb2JhbCI6NDUsIi4vX2hhcyI6NDYsIi4vX2hpZGUiOjQ3LCIuL19pcy1hcnJheSI6NTMsIi4vX2tleW9mIjo2MSwiLi9fbGlicmFyeSI6NjIsIi4vX21ldGEiOjYzLCIuL19vYmplY3QtY3JlYXRlIjo2NSwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fb2JqZWN0LWdvcGQiOjY4LCIuL19vYmplY3QtZ29wbiI6NzAsIi4vX29iamVjdC1nb3BuLWV4dCI6NjksIi4vX29iamVjdC1nb3BzIjo3MSwiLi9fb2JqZWN0LWtleXMiOjc0LCIuL19vYmplY3QtcGllIjo3NSwiLi9fcHJvcGVydHktZGVzYyI6NzcsIi4vX3JlZGVmaW5lIjo3OSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL19zaGFyZWQiOjg0LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tcHJpbWl0aXZlIjo5MywiLi9fdWlkIjo5NCwiLi9fd2tzIjo5NywiLi9fd2tzLWRlZmluZSI6OTUsIi4vX3drcy1leHQiOjk2fV0sMTEwOltmdW5jdGlvbihlLHQscil7ZSgiLi9fd2tzLWRlZmluZSIpKCJhc3luY0l0ZXJhdG9yIil9LHsiLi9fd2tzLWRlZmluZSI6OTV9XSwxMTE6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL193a3MtZGVmaW5lIikoIm9ic2VydmFibGUiKX0seyIuL193a3MtZGVmaW5lIjo5NX1dLDExMjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4vZXM2LmFycmF5Lml0ZXJhdG9yIik7Zm9yKHZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9faGlkZSIpLGk9ZSgiLi9faXRlcmF0b3JzIikscz1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxjPVsiTm9kZUxpc3QiLCJET01Ub2tlbkxpc3QiLCJNZWRpYUxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIkNTU1J1bGVMaXN0Il0sYT0wO2E8NTthKyspe3ZhciB1PWNbYV0sbD1vW3VdLGY9bCYmbC5wcm90b3R5cGU7ZiYmIWZbc10mJm4oZixzLHUpLGlbdV09aS5BcnJheX19LHsiLi9fZ2xvYmFsIjo0NSwiLi9faGlkZSI6NDcsIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTcsIi4vZXM2LmFycmF5Lml0ZXJhdG9yIjo5OX1dLDExMzpbZnVuY3Rpb24oZSx0LHIpe09iamVjdC5vYnNlcnZlfHxmdW5jdGlvbihlLHQscixvKXsidXNlIHN0cmljdCI7dmFyIG4saSxzPVsiYWRkIiwidXBkYXRlIiwiZGVsZXRlIiwicmVjb25maWd1cmUiLCJzZXRQcm90b3R5cGUiLCJwcmV2ZW50RXh0ZW5zaW9ucyJdLGM9dC5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PWUuY2FsbCh0KX19KGUucHJvdG90eXBlLnRvU3RyaW5nKSxhPXQucHJvdG90eXBlLmluZGV4T2Y/dC5pbmRleE9mfHxmdW5jdGlvbihlLHIsbyl7cmV0dXJuIHQucHJvdG90eXBlLmluZGV4T2YuY2FsbChlLHIsbyl9OmZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG89cnx8MDtvPGUubGVuZ3RoO28rKylpZihlW29dPT09dClyZXR1cm4gbztyZXR1cm4tMX0sdT1yLk1hcCE9PW8mJk1hcC5wcm90b3R5cGUuZm9yRWFjaD9mdW5jdGlvbigpe3JldHVybiBuZXcgTWFwfTpmdW5jdGlvbigpe3ZhciBlPVtdLHQ9W107cmV0dXJue3NpemU6MCxoYXM6ZnVuY3Rpb24odCl7cmV0dXJuIGEoZSx0KT4tMX0sZ2V0OmZ1bmN0aW9uKHIpe3JldHVybiB0W2EoZSxyKV19LHNldDpmdW5jdGlvbihyLG8pe3ZhciBuPWEoZSxyKTtuPT09LTE/KGUucHVzaChyKSx0LnB1c2gobyksdGhpcy5zaXplKyspOnRbbl09b30sImRlbGV0ZSI6ZnVuY3Rpb24ocil7dmFyIG89YShlLHIpO28+LTEmJihlLnNwbGljZShvLDEpLHQuc3BsaWNlKG8sMSksdGhpcy5zaXplLS0pfSxmb3JFYWNoOmZ1bmN0aW9uKHIpe2Zvcih2YXIgbz0wO288ZS5sZW5ndGg7bysrKXIuY2FsbChhcmd1bWVudHNbMV0sdFtvXSxlW29dLHRoaXMpfX19LGw9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzP2Z1bmN0aW9uKCl7dmFyIHQ9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzO3RyeXthcmd1bWVudHMuY2FsbGVlfWNhdGNoKHIpe3ZhciBvPSh0KGEpLmpvaW4oIiAiKSsiICIpLnJlcGxhY2UoL3Byb3RvdHlwZSB8bGVuZ3RoIHxuYW1lIC9nLCIiKS5zbGljZSgwLC0xKS5zcGxpdCgiICIpO28ubGVuZ3RoJiYodD1mdW5jdGlvbih0KXt2YXIgcj1lLmdldE93blByb3BlcnR5TmFtZXModCk7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQpZm9yKHZhciBuLGk9MDtpPG8ubGVuZ3RoOykobj1hKHIsb1tpKytdKSk+LTEmJnIuc3BsaWNlKG4sMSk7cmV0dXJuIHJ9KX1yZXR1cm4gdH0oKTpmdW5jdGlvbih0KXt2YXIgcixvLG49W107aWYoImhhc093blByb3BlcnR5ImluIHQpZm9yKHIgaW4gdCl0Lmhhc093blByb3BlcnR5KHIpJiZuLnB1c2gocik7ZWxzZXtvPWUuaGFzT3duUHJvcGVydHk7Zm9yKHIgaW4gdClvLmNhbGwodCxyKSYmbi5wdXNoKHIpfXJldHVybiBjKHQpJiZuLnB1c2goImxlbmd0aCIpLG59LGY9ZS5nZXRQcm90b3R5cGVPZixkPWUuZGVmaW5lUHJvcGVydGllcyYmZS5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXz1yLnJlcXVlc3RBbmltYXRpb25GcmFtZXx8ci53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKCl7dmFyIGU9K25ldyBEYXRlLHQ9ZTtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyKCh0PStuZXcgRGF0ZSktZSl9LDE3KX19KCkscD1mdW5jdGlvbihlLHQscil7dmFyIG89bi5nZXQoZSk7bz8oaChvLGUpLG0oZSxvLHQscikpOihvPWIoZSksbShlLG8sdCxyKSwxPT09bi5zaXplJiZfKHkpKX0sYj1mdW5jdGlvbih0LHIpe3ZhciBvLGk9bCh0KSxzPVtdLGM9MCxyPXtoYW5kbGVyczp1KCksZnJvemVuOiEhZS5pc0Zyb3plbiYmZS5pc0Zyb3plbih0KSxleHRlbnNpYmxlOiFlLmlzRXh0ZW5zaWJsZXx8ZS5pc0V4dGVuc2libGUodCkscHJvdG86ZiYmZih0KSxwcm9wZXJ0aWVzOmksdmFsdWVzOnMsbm90aWZpZXI6aih0LHIpfTtpZihkKWZvcihvPXIuZGVzY3JpcHRvcnM9W107YzxpLmxlbmd0aDspb1tjXT1kKHQsaVtjXSksc1tjXT10W2lbYysrXV07ZWxzZSBmb3IoO2M8aS5sZW5ndGg7KXNbY109dFtpW2MrK11dO3JldHVybiBuLnNldCh0LHIpLHJ9LGg9ZnVuY3Rpb24oKXt2YXIgdD1kP2Z1bmN0aW9uKGUsdCxyLG8sbil7dmFyIGk9dC5wcm9wZXJ0aWVzW3JdLHM9ZVtpXSxjPXQudmFsdWVzW3JdLGE9dC5kZXNjcmlwdG9yc1tyXTsidmFsdWUiaW4gbiYmKGM9PT1zPzA9PT1jJiYxL2MhPT0xL3M6Yz09PWN8fHM9PT1zKSYmKGcoZSx0LHtuYW1lOmksdHlwZToidXBkYXRlIixvYmplY3Q6ZSxvbGRWYWx1ZTpjfSxvKSx0LnZhbHVlc1tyXT1zKSwhYS5jb25maWd1cmFibGV8fG4uY29uZmlndXJhYmxlJiZuLndyaXRhYmxlPT09YS53cml0YWJsZSYmbi5lbnVtZXJhYmxlPT09YS5lbnVtZXJhYmxlJiZuLmdldD09PWEuZ2V0JiZuLnNldD09PWEuc2V0fHwoZyhlLHQse25hbWU6aSx0eXBlOiJyZWNvbmZpZ3VyZSIsb2JqZWN0OmUsb2xkVmFsdWU6Y30sbyksdC5kZXNjcmlwdG9yc1tyXT1uKX06ZnVuY3Rpb24oZSx0LHIsbyl7dmFyIG49dC5wcm9wZXJ0aWVzW3JdLGk9ZVtuXSxzPXQudmFsdWVzW3JdOyhzPT09aT8wPT09cyYmMS9zIT09MS9pOnM9PT1zfHxpPT09aSkmJihnKGUsdCx7bmFtZTpuLHR5cGU6InVwZGF0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6c30sbyksdC52YWx1ZXNbcl09aSl9LHI9ZD9mdW5jdGlvbihlLHIsbyxuLGkpe2Zvcih2YXIgcyxjPXIubGVuZ3RoO28mJmMtLTspbnVsbCE9PXJbY10mJihzPWQoZSxyW2NdKSxvLS0scz90KGUsbixjLGkscyk6KGcoZSxuLHtuYW1lOnJbY10sdHlwZToiZGVsZXRlIixvYmplY3Q6ZSxvbGRWYWx1ZTpuLnZhbHVlc1tjXX0saSksbi5wcm9wZXJ0aWVzLnNwbGljZShjLDEpLG4udmFsdWVzLnNwbGljZShjLDEpLG4uZGVzY3JpcHRvcnMuc3BsaWNlKGMsMSkpKX06ZnVuY3Rpb24oZSx0LHIsbyxuKXtmb3IodmFyIGk9dC5sZW5ndGg7ciYmaS0tOyludWxsIT09dFtpXSYmKGcoZSxvLHtuYW1lOnRbaV0sdHlwZToiZGVsZXRlIixvYmplY3Q6ZSxvbGRWYWx1ZTpvLnZhbHVlc1tpXX0sbiksby5wcm9wZXJ0aWVzLnNwbGljZShpLDEpLG8udmFsdWVzLnNwbGljZShpLDEpLHItLSl9O3JldHVybiBmdW5jdGlvbihvLG4saSl7aWYoby5oYW5kbGVycy5zaXplJiYhby5mcm96ZW4pe3ZhciBzLGMsdSxfLHAsYixoLHksdj1vLnZhbHVlcyxqPW8uZGVzY3JpcHRvcnMsbT0wO2lmKG8uZXh0ZW5zaWJsZSlpZihzPW8ucHJvcGVydGllcy5zbGljZSgpLGM9cy5sZW5ndGgsdT1sKG4pLGope2Zvcig7bTx1Lmxlbmd0aDspcD11W20rK10sXz1hKHMscCkseT1kKG4scCksXz09PS0xPyhnKG4sbyx7bmFtZTpwLHR5cGU6ImFkZCIsb2JqZWN0Om59LGkpLG8ucHJvcGVydGllcy5wdXNoKHApLHYucHVzaChuW3BdKSxqLnB1c2goeSkpOihzW19dPW51bGwsYy0tLHQobixvLF8saSx5KSk7cihuLHMsYyxvLGkpLGUuaXNFeHRlbnNpYmxlKG4pfHwoby5leHRlbnNpYmxlPSExLGcobixvLHt0eXBlOiJwcmV2ZW50RXh0ZW5zaW9ucyIsb2JqZWN0Om59LGkpLG8uZnJvemVuPWUuaXNGcm96ZW4obikpfWVsc2V7Zm9yKDttPHUubGVuZ3RoOylwPXVbbSsrXSxfPWEocyxwKSxiPW5bcF0sXz09PS0xPyhnKG4sbyx7bmFtZTpwLHR5cGU6ImFkZCIsb2JqZWN0Om59LGkpLG8ucHJvcGVydGllcy5wdXNoKHApLHYucHVzaChiKSk6KHNbX109bnVsbCxjLS0sdChuLG8sXyxpKSk7cihuLHMsYyxvLGkpfWVsc2UgaWYoIW8uZnJvemVuKXtmb3IoO208cy5sZW5ndGg7bSsrKXA9c1ttXSx0KG4sbyxtLGksZChuLHApKTtlLmlzRnJvemVuKG4pJiYoby5mcm96ZW49ITApfWYmJihoPWYobiksaCE9PW8ucHJvdG8mJihnKG4sbyx7dHlwZToic2V0UHJvdG90eXBlIixuYW1lOiJfX3Byb3RvX18iLG9iamVjdDpuLG9sZFZhbHVlOm8ucHJvdG99KSxvLnByb3RvPWgpKX19fSgpLHk9ZnVuY3Rpb24oKXtuLnNpemUmJihuLmZvckVhY2goaCksaS5mb3JFYWNoKHYpLF8oeSkpfSx2PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5jaGFuZ2VSZWNvcmRzO3IubGVuZ3RoJiYoZS5jaGFuZ2VSZWNvcmRzPVtdLHQocikpfSxqPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8MiYmKHQ9bi5nZXQoZSkpLHQmJnQubm90aWZpZXJ8fHtub3RpZnk6ZnVuY3Rpb24odCl7dC50eXBlO3ZhciByPW4uZ2V0KGUpO2lmKHIpe3ZhciBvLGk9e29iamVjdDplfTtmb3IobyBpbiB0KSJvYmplY3QiIT09byYmKGlbb109dFtvXSk7ZyhlLHIsaSl9fSxwZXJmb3JtQ2hhbmdlOmZ1bmN0aW9uKHQscil7aWYoInN0cmluZyIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgbm9uLXN0cmluZyBjaGFuZ2VUeXBlIik7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHIpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IHBlcmZvcm0gbm9uLWZ1bmN0aW9uIik7dmFyIGkscyxjPW4uZ2V0KGUpLGE9YXJndW1lbnRzWzJdLHU9YT09PW8/cigpOnIuY2FsbChhKTtpZihjJiZoKGMsZSx0KSxjJiZ1JiYib2JqZWN0Ij09dHlwZW9mIHUpe3M9e29iamVjdDplLHR5cGU6dH07Zm9yKGkgaW4gdSkib2JqZWN0IiE9PWkmJiJ0eXBlIiE9PWkmJihzW2ldPXVbaV0pO2coZSxjLHMpfX19fSxtPWZ1bmN0aW9uKGUsdCxyLG8pe3ZhciBuPWkuZ2V0KHIpO258fGkuc2V0KHIsbj17b2JzZXJ2ZWQ6dSgpLGNoYW5nZVJlY29yZHM6W119KSxuLm9ic2VydmVkLnNldChlLHthY2NlcHRMaXN0Om8uc2xpY2UoKSxkYXRhOnR9KSx0LmhhbmRsZXJzLnNldChyLG4pfSxnPWZ1bmN0aW9uKGUsdCxyLG8pe3QuaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgbj10Lm9ic2VydmVkLmdldChlKS5hY2NlcHRMaXN0Oygic3RyaW5nIiE9dHlwZW9mIG98fGEobixvKT09PS0xKSYmYShuLHIudHlwZSk+LTEmJnQuY2hhbmdlUmVjb3Jkcy5wdXNoKHIpfSl9O249dSgpLGk9dSgpLGUub2JzZXJ2ZT1mdW5jdGlvbih0LHIsbil7aWYoIXR8fCJvYmplY3QiIT10eXBlb2YgdCYmImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0Lm9ic2VydmUgY2Fubm90IG9ic2VydmUgbm9uLW9iamVjdCIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO2lmKGUuaXNGcm96ZW4mJmUuaXNGcm96ZW4ocikpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0Lm9ic2VydmUgY2Fubm90IGRlbGl2ZXIgdG8gYSBmcm96ZW4gZnVuY3Rpb24gb2JqZWN0Iik7aWYobj09PW8pbj1zO2Vsc2UgaWYoIW58fCJvYmplY3QiIT10eXBlb2Ygbil0aHJvdyBuZXcgVHlwZUVycm9yKCJUaGlyZCBhcmd1bWVudCB0byBPYmplY3Qub2JzZXJ2ZSBtdXN0IGJlIGFuIGFycmF5IG9mIHN0cmluZ3MuIik7cmV0dXJuIHAodCxyLG4pLHR9LGUudW5vYnNlcnZlPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09PWV8fCJvYmplY3QiIT10eXBlb2YgZSYmImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LnVub2JzZXJ2ZSBjYW5ub3QgdW5vYnNlcnZlIG5vbi1vYmplY3QiKTtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QudW5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO3ZhciByLG89aS5nZXQodCk7cmV0dXJuIG8mJihyPW8ub2JzZXJ2ZWQuZ2V0KGUpKSYmKG8ub2JzZXJ2ZWQuZm9yRWFjaChmdW5jdGlvbihlLHQpe2goZS5kYXRhLHQpfSksXyhmdW5jdGlvbigpe3Yobyx0KX0pLDE9PT1vLm9ic2VydmVkLnNpemUmJm8ub2JzZXJ2ZWQuaGFzKGUpP2lbImRlbGV0ZSJdKHQpOm8ub2JzZXJ2ZWRbImRlbGV0ZSJdKGUpLDE9PT1yLmRhdGEuaGFuZGxlcnMuc2l6ZT9uWyJkZWxldGUiXShlKTpyLmRhdGEuaGFuZGxlcnNbImRlbGV0ZSJdKHQpKSxlfSxlLmdldE5vdGlmaWVyPWZ1bmN0aW9uKHQpe2lmKG51bGw9PT10fHwib2JqZWN0IiE9dHlwZW9mIHQmJiJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5nZXROb3RpZmllciBjYW5ub3QgZ2V0Tm90aWZpZXIgbm9uLW9iamVjdCIpO3JldHVybiBlLmlzRnJvemVuJiZlLmlzRnJvemVuKHQpP251bGw6aih0KX0sZS5kZWxpdmVyQ2hhbmdlUmVjb3Jkcz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QuZGVsaXZlckNoYW5nZVJlY29yZHMgY2Fubm90IGRlbGl2ZXIgdG8gbm9uLWZ1bmN0aW9uIik7dmFyIHQ9aS5nZXQoZSk7dCYmKHQub2JzZXJ2ZWQuZm9yRWFjaChmdW5jdGlvbihlLHQpe2goZS5kYXRhLHQpfSksdih0LGUpKX19KE9iamVjdCxBcnJheSx0aGlzKX0se31dLDExNDpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLkRhdGFPYmplY3RPYnNlcnZlcj1yLkRhdGFPYmplY3RSZXBvcnRlcj1yLlN5bmNoZXI9dm9pZCAwLGUoIm9iamVjdC5vYnNlcnZlIiksZSgiYXJyYXkub2JzZXJ2ZSIpO3ZhciBuPWUoIi4vc3luY2hlci9TeW5jaGVyIiksaT1vKG4pLHM9ZSgiLi9zeW5jaGVyL0RhdGFPYmplY3RSZXBvcnRlciIpLGM9byhzKSxhPWUoIi4vc3luY2hlci9EYXRhT2JqZWN0T2JzZXJ2ZXIiKSx1PW8oYSk7ci5TeW5jaGVyPWlbImRlZmF1bHQiXSxyLkRhdGFPYmplY3RSZXBvcnRlcj1jWyJkZWZhdWx0Il0sci5EYXRhT2JqZWN0T2JzZXJ2ZXI9dVsiZGVmYXVsdCJdfSx7Ii4vc3luY2hlci9EYXRhT2JqZWN0T2JzZXJ2ZXIiOjExNywiLi9zeW5jaGVyL0RhdGFPYmplY3RSZXBvcnRlciI6MTE4LCIuL3N5bmNoZXIvU3luY2hlciI6MTIxLCJhcnJheS5vYnNlcnZlIjoxLCJvYmplY3Qub2JzZXJ2ZSI6MTEzfV0sMTE1OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1vKG4pLHM9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksYz1vKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksdT1vKGEpLGw9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksZj1vKGwpLGQ9ZSgiLi9TeW5jT2JqZWN0IiksXz1vKGQpLHA9ZSgiLi9EYXRhT2JqZWN0Q2hpbGQiKSxiPW8ocCksaD1lKCIuLi91dGlscy91dGlscy5qcyIpLHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixvLG4saSxzKXsoMCx1WyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIGM9dGhpcztjLl9zeW5jaGVyPXQsYy5fdXJsPXIsYy5fc2NoZW1hPW8sYy5fc3RhdHVzPW4sYy5fc3luY09iaj1uZXcgX1siZGVmYXVsdCJdKGkpLGMuX2NoaWxkcmVucz1zLGMuX3ZlcnNpb249MCxjLl9jaGlsZElkPTAsYy5fY2hpbGRyZW5PYmplY3RzPXt9LGMuX2NoaWxkcmVuTGlzdGVuZXJzPVtdLGMuX293bmVyPXQuX293bmVyLGMuX2J1cz10Ll9idXN9cmV0dXJuKDAsZlsiZGVmYXVsdCJdKShlLFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMscj10Ll91cmwrIi9jaGlsZHJlbi8iO3QuX2NoaWxkcmVucyYmdC5fY2hpbGRyZW5zLmZvckVhY2goZnVuY3Rpb24obyl7dmFyIG49citvLGk9dC5fYnVzLmFkZExpc3RlbmVyKG4sZnVuY3Rpb24ocil7aWYoci5mcm9tIT09ZS5fb3duZXIpc3dpdGNoKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0LUNoaWxkcmVuLVJDVjogIixyKSxyLnR5cGUpe2Nhc2UiY3JlYXRlIjp0Ll9vbkNoaWxkQ3JlYXRlKHIpO2JyZWFrO2Nhc2UiZGVsZXRlIjpjb25zb2xlLmxvZyhyKTticmVhaztkZWZhdWx0OnQuX2NoYW5nZUNoaWxkcmVuKHIpfX0pO3QuX2NoaWxkcmVuTGlzdGVuZXJzLnB1c2goaSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihlKXtlLnJlbW92ZSgpfSksKDAsY1siZGVmYXVsdCJdKShlLl9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24odCl7ZS5fY2hpbGRyZW5PYmplY3RzW3RdLl9yZWxlYXNlTGlzdGVuZXJzKCl9KX19LHtrZXk6InBhdXNlIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJyZXN1bWUiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3ciTm90IGltcGxlbWVudGVkIn19LHtrZXk6InN0b3AiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3ciTm90IGltcGxlbWVudGVkIn19LHtrZXk6ImFkZENoaWxkIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7ci5fY2hpbGRJZCsrO3ZhciBvPXIuX293bmVyKyIjIityLl9jaGlsZElkLG49ci5fdXJsKyIvY2hpbGRyZW4vIitlLHM9e3R5cGU6ImNyZWF0ZSIsZnJvbTpyLl9vd25lcix0bzpuLGJvZHk6e3Jlc291cmNlOm8sdmFsdWU6dH19O3JldHVybiBuZXcgaVsiZGVmYXVsdCJdKGZ1bmN0aW9uKGUpe3ZhciBpPXIuX2J1cy5wb3N0TWVzc2FnZShzKTtjb25zb2xlLmxvZygiY3JlYXRlLXJlcG9ydGVyLWNoaWxkKCAiK3IuX293bmVyKyIgKTogIixzKTt2YXIgYz1uZXcgYlsiZGVmYXVsdCJdKHIsbyx0LHIuX293bmVyLGkpO2Mub25DaGFuZ2UoZnVuY3Rpb24oZSl7ci5fb25DaGFuZ2UoZSx7cGF0aDpuLGNoaWxkSWQ6b30pfSksci5fY2hpbGRyZW5PYmplY3RzW29dPWMsZShjKX0pfX0se2tleToib25BZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXI9ZX19LHtrZXk6Il9vbkNoaWxkQ3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LnJlc291cmNlO2NvbnNvbGUubG9nKCJjcmVhdGUtb2JzZXJ2ZXItY2hpbGQoICIrdC5fb3duZXIrIiApOiAiLGUpO3ZhciBvPW5ldyBiWyJkZWZhdWx0Il0odCxyLGUuYm9keS52YWx1ZSk7dC5fY2hpbGRyZW5PYmplY3RzW3JdPW8sc2V0VGltZW91dChmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCxzb3VyY2U6dC5fb3duZXJ9fSl9KTt2YXIgbj17dHlwZTplLnR5cGUsZnJvbTplLmZyb20sdXJsOmUudG8sdmFsdWU6ZS5ib2R5LnZhbHVlLGNoaWxkSWQ6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHl9O3QuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiYoY29uc29sZS5sb2coIkFERC1DSElMRFJFTi1FVkVOVDogIixuKSx0Ll9vbkFkZENoaWxkcmVuSGFuZGxlcihuKSl9fSx7a2V5OiJfb25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl92ZXJzaW9uKyssIm9uIj09PXIuX3N0YXR1cyl7dmFyIG89e3R5cGU6InVwZGF0ZSIsZnJvbTpyLl91cmwsdG86ci5fdXJsKyIvY2hhbmdlcyIsYm9keTp7dmVyc2lvbjpyLl92ZXJzaW9uLHNvdXJjZTpyLl9vd25lcixhdHRyaWJ1dGU6ZS5maWVsZH19O2Uub1R5cGU9PT1kLk9iamVjdFR5cGUuT0JKRUNUP2UuY1R5cGUhPT1kLkNoYW5nZVR5cGUuUkVNT1ZFJiYoby5ib2R5LnZhbHVlPWUuZGF0YSk6KG8uYm9keS5hdHRyaWJ1dGVUeXBlPWUub1R5cGUsby5ib2R5LnZhbHVlPWUuZGF0YSxlLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlVQREFURSYmKG8uYm9keS5vcGVyYXRpb249ZS5jVHlwZSkpLHQmJihvLnRvPXQucGF0aCxvLmJvZHkucmVzb3VyY2U9dC5jaGlsZElkKSxyLl9idXMucG9zdE1lc3NhZ2Uobyl9fX0se2tleToiX2NoYW5nZU9iamVjdCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2lmKHIuX3ZlcnNpb24rMT09PXQuYm9keS52ZXJzaW9uKXtyLl92ZXJzaW9uKys7dmFyIG89dC5ib2R5LmF0dHJpYnV0ZSxuPSgwLGguZGVlcENsb25lKSh0LmJvZHkudmFsdWUpLGk9ZS5maW5kQmVmb3JlKG8pO2lmKHQuYm9keS5hdHRyaWJ1dGVUeXBlPT09ZC5PYmplY3RUeXBlLkFSUkFZKWlmKHQuYm9keS5vcGVyYXRpb249PT1kLkNoYW5nZVR5cGUuQUREKXt2YXIgcz1pLm9iaixjPWkubGFzdDtBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KHMsW2MsMF0uY29uY2F0KG4pKX1lbHNlIGlmKHQuYm9keS5vcGVyYXRpb249PT1kLkNoYW5nZVR5cGUuUkVNT1ZFKXt2YXIgYT1pLm9iaix1PWkubGFzdDthLnNwbGljZSh1LG4pfWVsc2UgaS5vYmpbaS5sYXN0XT1uO2Vsc2UgdC5ib2R5LnZhbHVlP2kub2JqW2kubGFzdF09bjpkZWxldGUgaS5vYmpbaS5sYXN0XX1lbHNlIGNvbnNvbGUubG9nKCJVTlNZTkNIUk9OSVpFRCBWRVJTSU9OOiAoZGF0YSA9PiAiK3IuX3ZlcnNpb24rIiwgbXNnID0+ICIrdC5ib2R5LnZlcnNpb24rIikiKX19LHtrZXk6Il9jaGFuZ2VDaGlsZHJlbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztjb25zb2xlLmxvZygiQ2hhbmdlIGNoaWxkcmVuOiAiLHQuX293bmVyLGUpO3ZhciByPWUuYm9keS5yZXNvdXJjZSxvPXQuX2NoaWxkcmVuT2JqZWN0c1tyXTtvP3QuX2NoYW5nZU9iamVjdChvLl9zeW5jT2JqLGUpOmNvbnNvbGUubG9nKCJObyBjaGlsZHJlbiBmb3VuZCBmb3I6ICIscil9fSx7a2V5OiJ1cmwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91cmx9fSx7a2V5OiJzY2hlbWEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2hlbWF9fSx7a2V5OiJzdGF0dXMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGF0dXN9fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3luY09iai5kYXRhfX0se2tleToiY2hpbGRyZW5zIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW5PYmplY3RzfX1dKSxlfSgpO3JbImRlZmF1bHQiXT15LHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMiwiLi9EYXRhT2JqZWN0Q2hpbGQiOjExNiwiLi9TeW5jT2JqZWN0IjoxMjAsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjksImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMTY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG49ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksaT1vKG4pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksYz1vKHMpLGE9ZSgiLi9TeW5jT2JqZWN0IiksdT1vKGEpLGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixvLG4scyl7KDAsaVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBjPXRoaXM7Yy5fcGFyZW50PXQsYy5fY2hpbGRJZD1yLGMuX293bmVyPW4sYy5fbXNnSWQ9cyxjLl9zeW5jT2JqPW5ldyB1WyJkZWZhdWx0Il0obyksYy5fYnVzPXQuX2J1cyxjLl9hbGxvY2F0ZUxpc3RlbmVycygpfXJldHVybigwLGNbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fb3duZXImJihlLl9saXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fb3duZXIsZnVuY3Rpb24odCl7InJlc3BvbnNlIj09PXQudHlwZSYmdC5pZD09PWUuX21zZ0lkJiYoY29uc29sZS5sb2coIkRhdGFPYmplY3RDaGlsZC5vblJlc3BvbnNlOiIsdCksZS5fb25SZXNwb25zZSh0KSl9KSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyJiZlLl9saXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2RlbGV0ZSBlLl9wYXJlbnQuX2NoaWxkcmVuW2UuX2NoaWxkSWRdLGUuX3JlbGVhc2VMaXN0ZW5lcnMoKX19LHtrZXk6Im9uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24odCl7ZSh0KX0pfX0se2tleToib25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXNwb25zZUhhbmRsZXI9ZX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ZS50eXBlLHVybDplLmJvZHkuc291cmNlLGNvZGU6ZS5ib2R5LmNvZGV9O3QuX29uUmVzcG9uc2VIYW5kbGVyJiZ0Ll9vblJlc3BvbnNlSGFuZGxlcihyKX19LHtrZXk6ImNoaWxkSWQiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZElkfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19XSksZX0oKTtyWyJkZWZhdWx0Il09bCx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vU3luY09iamVjdCI6MTIwLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTE3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHU9byhhKSxsPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGY9byhsKSxkPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiksXz1vKGQpLHA9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCIpLGI9byhwKSxoPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyIpLHk9byhoKSx2PWUoIi4vRGF0YU9iamVjdCIpLGo9byh2KSxtPWUoIi4vRGF0YU9iamVjdENoaWxkIiksZz1vKG0pLHc9e0FOWToiYW55IixTVEFSVDoic3RhcnQiLEVYQUNUOiJleGFjdCJ9LE89ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbyxuLHMsYSxsKXsoMCx1WyJkZWZhdWx0Il0pKHRoaXMsdCk7dmFyIGY9KDAsX1siZGVmYXVsdCJdKSh0aGlzLCgwLGNbImRlZmF1bHQiXSkodCkuY2FsbCh0aGlzLGUscixvLG4scy5kYXRhLGEpKSxkPWY7cmV0dXJuIGQuX3ZlcnNpb249bCxkLl9maWx0ZXJzPXt9LGQuX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbihlKXtkLl9vbkZpbHRlcihlKX0pLCgwLGlbImRlZmF1bHQiXSkocy5jaGlsZHJlbnMpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9cy5jaGlsZHJlbnNbZV07ZC5fY2hpbGRyZW5PYmplY3RzW2VdPW5ldyBnWyJkZWZhdWx0Il0oZCxlLHQpfSksZC5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxmfXJldHVybigwLHlbImRlZmF1bHQiXSkodCxlKSwoMCxmWyJkZWZhdWx0Il0pKHQsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9jaGFuZ2VMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsKyIvY2hhbmdlcyIsZnVuY3Rpb24odCl7InVwZGF0ZSI9PT10LnR5cGUmJihjb25zb2xlLmxvZygiRGF0YU9iamVjdE9ic2VydmVyLSIrZS5fdXJsKyItUkNWOiAiLHQpLGUuX2NoYW5nZU9iamVjdChlLl9zeW5jT2JqLHQpKX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX3JlbGVhc2VMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9jaGFuZ2VMaXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF19fSx7a2V5OiJ1bnN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6InVuc3Vic2NyaWJlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YU9iamVjdE9ic2VydmVyLVVOU1VCU0NSSUJFOiAiLHQpLDIwMD09PXQuYm9keS5jb2RlJiYoZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9vYnNlcnZlcnNbZS5fdXJsXSl9KX19LHtrZXk6Im9uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWUsbz17dHlwZTp3LkVYQUNULGNhbGxiYWNrOnR9LG49ZS5pbmRleE9mKCIqIik7bj09PWUubGVuZ3RoLTEmJigwPT09bj9vLnR5cGU9dy5BTlk6KG8udHlwZT13LlNUQVJULHI9ZS5zdWJzdHIoMCxlLmxlbmd0aC0xKSkpLHRoaXMuX2ZpbHRlcnNbcl09b319LHtrZXk6Il9vbkZpbHRlciIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczsoMCxpWyJkZWZhdWx0Il0pKHQuX2ZpbHRlcnMpLmZvckVhY2goZnVuY3Rpb24ocil7dmFyIG89dC5fZmlsdGVyc1tyXTtvLnR5cGU9PT13LkFOWT9vLmNhbGxiYWNrKGUpOm8udHlwZT09PXcuU1RBUlQ/MD09PWUuZmllbGQuaW5kZXhPZihyKSYmby5jYWxsYmFjayhlKTpvLnR5cGU9PT13LkVYQUNUJiZlLmZpZWxkPT09ciYmby5jYWxsYmFjayhlKX0pfX1dKSx0fShqWyJkZWZhdWx0Il0pO3JbImRlZmF1bHQiXT1PLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi9EYXRhT2JqZWN0IjoxMTUsIi4vRGF0YU9iamVjdENoaWxkIjoxMTYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6NiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IjoxNCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjoxNSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOjE2fV0sMTE4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHU9byhhKSxsPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGY9byhsKSxkPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiksXz1vKGQpLHA9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCIpLGI9byhwKSxoPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyIpLHk9byhoKSx2PWUoIi4vRGF0YU9iamVjdCIpLGo9byh2KSxtPWUoIi4uL3V0aWxzL3V0aWxzLmpzIiksZz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixvLG4saSxzKXsoMCx1WyJkZWZhdWx0Il0pKHRoaXMsdCk7dmFyIGE9KDAsX1siZGVmYXVsdCJdKSh0aGlzLCgwLGNbImRlZmF1bHQiXSkodCkuY2FsbCh0aGlzLGUscixvLG4saSxzKSksbD1hO3JldHVybiBsLl9zdWJzY3JpcHRpb25zPXt9LGwuX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbihlKXtjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLSIrcisiLVNFTkQ6ICIsZSksbC5fb25DaGFuZ2UoZSl9KSxsLl9hbGxvY2F0ZUxpc3RlbmVycygpLGF9cmV0dXJuKDAseVsiZGVmYXVsdCJdKSh0LGUpLCgwLGZbImRlZmF1bHQiXSkodCxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9hbGxvY2F0ZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX29iamVjdExpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7c3dpdGNoKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0LSIrZS5fdXJsKyItUkNWOiAiLHQpLHQudHlwZSl7Y2FzZSJyZXNwb25zZSI6ZS5fb25SZXNwb25zZSh0KTticmVhaztjYXNlInJlYWQiOmUuX29uUmVhZCh0KX19KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fb2JqZWN0TGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJpbnZpdGVPYnNlcnZlcnMiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZToiY3JlYXRlIixmcm9tOnQuX3N5bmNoZXIuX293bmVyLHRvOnQuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTp0Ll91cmwsc2NoZW1hOnQuX3NjaGVtYSx2YWx1ZTp0Ll9zeW5jT2JqLmRhdGEsYXV0aG9yaXNlOmV9fTt0Ll9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJkZWxldGUiLGZyb206ZS5fb3duZXIsdG86ZS5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc291cmNlOmUuX3VybH19O2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe2NvbnNvbGUubG9nKCJEYXRhT2JqZWN0UmVwb3J0ZXItREVMRVRFOiAiLHQpLDIwMD09PXQuYm9keS5jb2RlJiYoZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9yZXBvcnRlcnNbZS5fdXJsXSl9KX19LHtrZXk6Im9uU3Vic2NyaXB0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXI9ZX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJvblJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVhZEhhbmRsZXI9ZX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7c3dpdGNoKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0UmVwb3J0ZXItUkNWOiAiLGUpLGUuYm9keS50eXBlKXtjYXNlInN1YnNjcmliZSI6dC5fb25TdWJzY3JpYmUoZSk7YnJlYWs7Y2FzZSJ1bnN1YnNjcmliZSI6dC5fb25VblN1YnNjcmliZShlKX19fSx7a2V5OiJfb25TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxvPXt0eXBlOmUuYm9keS50eXBlLHVybDpyLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2NlcHQ6ZnVuY3Rpb24oKXt2YXIgbz17dXJsOnIsc3RhdHVzOiJvbiJ9O3QuX3N1YnNjcmlwdGlvbnNbcl09bzt2YXIgbj17fTtyZXR1cm4oMCxpWyJkZWZhdWx0Il0pKHQuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcj10Ll9jaGlsZHJlbk9iamVjdHNbZV0uZGF0YTtuW2VdPSgwLG0uZGVlcENsb25lKShyKX0pLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCxzY2hlbWE6dC5fc2NoZW1hLHZlcnNpb246dC5fdmVyc2lvbix2YWx1ZTp7ZGF0YTooMCxtLmRlZXBDbG9uZSkodC5kYXRhKSxjaGlsZHJlbnM6bn19fSksb30scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMyxkZXNjOnJ9fSl9fTt0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXImJihjb25zb2xlLmxvZygiU1VCU0NSSVBUSU9OLUVWRU5UOiAiLG8pLHQuX29uU3Vic2NyaXB0aW9uSGFuZGxlcihvKSl9fSx7a2V5OiJfb25VblN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5mcm9tLG89dC5fc3Vic2NyaXB0aW9uc1tyXTtkZWxldGUgdC5fc3Vic2NyaXB0aW9uc1tyXTt2YXIgbj17dHlwZTplLmJvZHkudHlwZSx1cmw6cixvYmplY3Q6b307dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIlVOLVNVQlNDUklQVElPTi1FVkVOVDogIixuKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIobikpfX0se2tleToiX29uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZTplLnR5cGUsdXJsOmUuZnJvbSxjb2RlOmUuYm9keS5jb2RlfTt0Ll9vblJlc3BvbnNlSGFuZGxlciYmKGNvbnNvbGUubG9nKCJSRVNQT05TRS1FVkVOVDogIixyKSx0Ll9vblJlc3BvbnNlSGFuZGxlcihyKSl9fSx7a2V5OiJfb25SZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sYWNjZXB0OmZ1bmN0aW9uKCl7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHZhbHVlOigwLG0uZGVlcENsb25lKSh0LmRhdGEpfX0pfSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAxLGRlc2M6cn19KX19O3QuX29uUmVhZEhhbmRsZXImJihjb25zb2xlLmxvZygiUkVBRC1FVkVOVDogIixyKSx0Ll9vblJlYWRIYW5kbGVyKHIpKX19LHtrZXk6InN1YnNjcmlwdGlvbnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdWJzY3JpcHRpb25zfX1dKSx0fShqWyJkZWZhdWx0Il0pO3JbImRlZmF1bHQiXT1nLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMiwiLi9EYXRhT2JqZWN0IjoxMTUsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6NiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IjoxNCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjoxNSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOjE2fV0sMTE5OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGM9byhzKSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuKXsoMCxpWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIHM9dGhpcztzLl9vd25lcj10LHMuX3VybD1yLHMuX2J1cz1vLHMuX2NoaWxkcmVuPW4scy5fY2hhbmdlcz1bXSxzLl9hbGxvY2F0ZUxpc3RlbmVycygpfXJldHVybigwLGNbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YVByb3Zpc2lvbmFsLSIrZS5fdXJsKyItUkNWOiAiLHQpLGUuX2NoYW5nZXMucHVzaCh0KX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImFwcGx5Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2NoYW5nZXMuZm9yRWFjaChmdW5jdGlvbih0KXtlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KX0pfX0se2tleToiY2hpbGRyZW4iLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbn19XSksZX0oKTtyWyJkZWZhdWx0Il09YSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7ImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMjA6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5PYmplY3RUeXBlPXIuQ2hhbmdlVHlwZT12b2lkIDA7dmFyIG49ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksaT1vKG4pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksYz1vKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksdT1vKGEpLGw9ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIHI9dGhpcztyLl9vYnNlcnZlcnM9W10sci5fZmlsdGVycz17fSx0P3IuX2RhdGE9KDAsbC5kZWVwQ2xvbmUpKHQpOnIuX2RhdGE9e30sci5faW50ZXJuYWxPYnNlcnZlKG5ldyBkLHIuX2RhdGEpfXJldHVybigwLHVbImRlZmF1bHQiXSkoZSxbe2tleToib2JzZXJ2ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLnB1c2goZSl9fSx7a2V5OiJmaW5kIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLnNwbGl0KCIuIik7cmV0dXJuIHRoaXMuX2ZpbmRXaXRoU3BsaXQodCl9fSx7a2V5OiJmaW5kQmVmb3JlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17fSxyPWUuc3BsaXQoIi4iKTtyZXR1cm4gdC5sYXN0PXIucG9wKCksdC5vYmo9dGhpcy5fZmluZFdpdGhTcGxpdChyKSx0fX0se2tleToiX2ZpbmRXaXRoU3BsaXQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2RhdGE7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihlKXt0PXRbZV19KSx0fX0se2tleToiX2ZpcmVFdmVudCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dChlKX0pfX0se2tleToiX2lzT2JzZXJ2YWJsZSIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29uc3RydWN0b3I9PT1PYmplY3R8fGUuY29uc3RydWN0b3I9PT1BcnJheX19LHtrZXk6Il9pbnRlcm5hbE9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl9pc09ic2VydmFibGUodCkpe3ZhciBvPWZ1bmN0aW9uKHQpe3IuX29uQ2hhbmdlcyhlLHQpfTtpZih0LmNvbnN0cnVjdG9yPT09T2JqZWN0KXtPYmplY3Qub2JzZXJ2ZSh0LG8pO2Zvcih2YXIgbiBpbiB0KXIuX2lzT2JzZXJ2YWJsZSh0W25dKSYmci5faW50ZXJuYWxPYnNlcnZlKGVbIm5ldyJdKG4pLHRbbl0pfWVsc2UgaWYodC5jb25zdHJ1Y3Rvcj09PUFycmF5KXtBcnJheS5vYnNlcnZlKHQsbyk7Zm9yKHZhciBpIGluIHQpaWYoci5faXNPYnNlcnZhYmxlKHRbaV0pKXt2YXIgcz1lWyJuZXciXShuZXcgXyh0W2ldLGkpKTtyLl9pbnRlcm5hbE9ic2VydmUocyx0W2ldKX19fX19LHtrZXk6Il9vbkNoYW5nZXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztmb3IodmFyIG8gaW4gdCl7dmFyIG49dFtvXS5vYmplY3QsaT12b2lkIDA7aWYobi5jb25zdHJ1Y3Rvcj09PU9iamVjdCYmKGk9Yi5PQkpFQ1QpLG4uY29uc3RydWN0b3I9PT1BcnJheSYmKGk9Yi5BUlJBWSksInNwbGljZSI9PT10W29dLnR5cGUpIWZ1bmN0aW9uKCl7dmFyIHM9dFtvXS5pbmRleCxjPWVbIm5ldyJdKCIiK3MpLGE9Yy50b1N0cmluZygpLHU9dFtvXS5yZW1vdmVkLmxlbmd0aDtpZigwIT09dSl7dmFyIGY9dFtvXS5yZW1vdmVkO2YuZm9yRWFjaChmdW5jdGlvbih0LG8pe3IuX2lzT2JzZXJ2YWJsZSh0KSYmZS5yZW1vdmVJbmRleChzK28pfSksci5fZmlyZUV2ZW50KHtjVHlwZTpwLlJFTU9WRSxvVHlwZTppLGZpZWxkOmEsZGF0YTp1fSl9dmFyIGQ9dFtvXS5hZGRlZENvdW50O2lmKDAhPT1kKXt2YXIgYj1uLnNsaWNlKHMscytkKTtiLmZvckVhY2goZnVuY3Rpb24odCxvKXtpZihyLl9pc09ic2VydmFibGUodCkpe3ZhciBuPWVbIm5ldyJdKG5ldyBfKHQscytvKSk7ci5faW50ZXJuYWxPYnNlcnZlKG4sdCl9fSksci5fZmlyZUV2ZW50KHtjVHlwZTpwLkFERCxvVHlwZTppLGZpZWxkOmEsZGF0YTooMCxsLmRlZXBDbG9uZSkoYil9KX1zIT09bi5sZW5ndGgtMSYmZS5yZUluZGV4RnJvbShuKX0oKTtlbHNle3ZhciBzPWVbIm5ldyJdKHRbb10ubmFtZSksYz1zLnRvU3RyaW5nKCk7aWYoYy5pbmRleE9mKCJTeW1ib2wiKSE9PS0xKWNvbnRpbnVlO3ZhciBhPW5bdFtvXS5uYW1lXTsidXBkYXRlIj09PXRbb10udHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTpwLlVQREFURSxvVHlwZTppLGZpZWxkOmMsZGF0YTooMCxsLmRlZXBDbG9uZSkoYSl9KSwiYWRkIj09PXRbb10udHlwZSYmKHRoaXMuX2ludGVybmFsT2JzZXJ2ZShzLGEpLHRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6cC5BREQsb1R5cGU6aSxmaWVsZDpjLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGEpfSkpLCJkZWxldGUiPT09dFtvXS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnAuUkVNT1ZFLG9UeXBlOmksZmllbGQ6Y30pfX19fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YX19XSksZX0oKSxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLl9wYXRoPVtdLHRoaXMuX29ic2VydmFibGVzPXt9fXJldHVybigwLHVbImRlZmF1bHQiXSkoZSxbe2tleToicmVtb3ZlSW5kZXgiLHZhbHVlOmZ1bmN0aW9uKGUpe2RlbGV0ZSB0aGlzLl9vYnNlcnZhYmxlc1tlXX19LHtrZXk6InJlSW5kZXhGcm9tIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzOygwLGlbImRlZmF1bHQiXSkodGhpcy5fb2JzZXJ2YWJsZXMpLmZvckVhY2goZnVuY3Rpb24ocil7dmFyIG89dC5fb2JzZXJ2YWJsZXNbcl0sbj1lLmluZGV4T2Yoby5vYmopO28uaWR4IT1uJiYoby5pZHg9bixkZWxldGUgdC5fb2JzZXJ2YWJsZXNbcl0sdC5fb2JzZXJ2YWJsZXNbbl09byl9KX19LHtrZXk6Im5ldyIsdmFsdWU6ZnVuY3Rpb24oZSl7ZS5jb25zdHJ1Y3Rvcj09XyYmKHRoaXMuX29ic2VydmFibGVzW2UuaWR4XT1lKTt2YXIgdD10aGlzLmNsb25lKCk7cmV0dXJuIHQuX3BhdGgucHVzaChlKSx0fX0se2tleToiY2xvbmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9bmV3IGU7cmV0dXJuIHRoaXMuX3BhdGguZm9yRWFjaChmdW5jdGlvbihlKXt0Ll9wYXRoLnB1c2goZSl9KSx0fX0se2tleToidG9TdHJpbmciLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9IiI7cmV0dXJuIHRoaXMuX3BhdGguZm9yRWFjaChmdW5jdGlvbih0LHIpezA9PT1yP2U9dC50b1N0cmluZygpOmUrPSIuIit0LnRvU3RyaW5nKCl9KSxlfX1dKSxlfSgpLF89ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscil7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpLHRoaXMub2JqPXQsdGhpcy5pZHg9cn1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6InRvU3RyaW5nIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmlkeC50b1N0cmluZygpfX1dKSxlfSgpLHA9ci5DaGFuZ2VUeXBlPXtVUERBVEU6InVwZGF0ZSIsQUREOiJhZGQiLFJFTU9WRToicmVtb3ZlIn0sYj1yLk9iamVjdFR5cGU9e09CSkVDVDoib2JqZWN0IixBUlJBWToiYXJyYXkifTtyWyJkZWZhdWx0Il09Zn0seyIuLi91dGlscy91dGlscy5qcyI6MTIyLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMjE6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG49ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSx1PW8oYSksbD1lKCIuL0RhdGFPYmplY3RSZXBvcnRlciIpLGY9byhsKSxkPWUoIi4vRGF0YU9iamVjdE9ic2VydmVyIiksXz1vKGQpLHA9ZSgiLi9EYXRhUHJvdmlzaW9uYWwiKSxiPW8ocCksaD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG8peygwLGNbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgbj10aGlzO24uX293bmVyPXQsbi5fYnVzPXIsbi5fc3ViVVJMPW8ucnVudGltZVVSTCsiL3NtIixuLl9yZXBvcnRlcnM9e30sbi5fb2JzZXJ2ZXJzPXt9LG4uX3Byb3Zpc2lvbmFscz17fSxyLmFkZExpc3RlbmVyKHQsZnVuY3Rpb24oZSl7aWYoZS5mcm9tIT09dClzd2l0Y2goY29uc29sZS5sb2coIlN5bmNoZXItUkNWOiAiLGUpLGUudHlwZSl7Y2FzZSJmb3J3YXJkIjpuLl9vbkZvcndhcmQoZSk7YnJlYWs7Y2FzZSJjcmVhdGUiOm4uX29uUmVtb3RlQ3JlYXRlKGUpO2JyZWFrO2Nhc2UiZGVsZXRlIjpuLl9vblJlbW90ZURlbGV0ZShlKX19KX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6ImNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXRoaXM7ci5yZXBvcnRlcj1vLl9vd25lcixyLnNjaGVtYT1lO3ZhciBuPXt0eXBlOiJjcmVhdGUiLGZyb206by5fb3duZXIsdG86by5fc3ViVVJMLGJvZHk6e3NjaGVtYTplLHZhbHVlOnIsYXV0aG9yaXNlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbih0LGkpe28uX2J1cy5wb3N0TWVzc2FnZShuLGZ1bmN0aW9uKG4pe2lmKGNvbnNvbGUubG9nKCJjcmVhdGUtcmVzcG9uc2U6ICIsbiksMjAwPT09bi5ib2R5LmNvZGUpe3ZhciBzPW4uYm9keS5yZXNvdXJjZSxjPW5ldyBmWyJkZWZhdWx0Il0obyxzLGUsIm9uIixyLG4uYm9keS5jaGlsZHJlblJlc291cmNlcyk7by5fcmVwb3J0ZXJzW3NdPWMsdChjKX1lbHNlIGkobi5ib2R5LmRlc2MpfSl9KX19LHtrZXk6InN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG89e3R5cGU6InN1YnNjcmliZSIsZnJvbTpyLl9vd25lcix0bzpyLl9zdWJVUkwsYm9keTp7c2NoZW1hOmUscmVzb3VyY2U6dH19O3JldHVybiBuZXcgaVsiZGVmYXVsdCJdKGZ1bmN0aW9uKG4saSl7ci5fYnVzLnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24obyl7Y29uc29sZS5sb2coInN1YnNjcmliZS1yZXNwb25zZTogIixvKTt2YXIgcz1yLl9wcm92aXNpb25hbHNbdF07aWYoZGVsZXRlIHIuX3Byb3Zpc2lvbmFsc1t0XSxzJiZzLl9yZWxlYXNlTGlzdGVuZXJzKCksby5ib2R5LmNvZGU8MjAwKXM9bmV3IGJbImRlZmF1bHQiXShyLl9vd25lcix0LHIuX2J1cyxvLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpLHIuX3Byb3Zpc2lvbmFsc1t0XT1zO2Vsc2UgaWYoMjAwPT09by5ib2R5LmNvZGUpe3ZhciBjPW5ldyBfWyJkZWZhdWx0Il0ocix0LGUsIm9uIixvLmJvZHkudmFsdWUscy5jaGlsZHJlbixvLmJvZHkudmVyc2lvbik7ci5fb2JzZXJ2ZXJzW3RdPWMsbihjKSxzLmFwcGx5KGMpfWVsc2UgaShvLmJvZHkuZGVzYyl9KX0pfX0se2tleToicmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOiJyZWFkIixmcm9tOnQuX293bmVyLHRvOmV9O3JldHVybiBuZXcgaVsiZGVmYXVsdCJdKGZ1bmN0aW9uKGUsbyl7dC5fYnVzLnBvc3RNZXNzYWdlKHIsZnVuY3Rpb24odCl7DQpjb25zb2xlLmxvZygicmVhZC1yZXNwb25zZTogIix0KSwyMDA9PT10LmJvZHkuY29kZT9lKHQuYm9keS52YWx1ZSk6byh0LmJvZHkuZGVzYyl9KX0pfX0se2tleToib25Ob3RpZmljYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uTm90aWZpY2F0aW9uSGFuZGxlcj1lfX0se2tleToiX29uRm9yd2FyZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXQuX3JlcG9ydGVyc1tlLmJvZHkudG9dO3IuX29uRm9yd2FyZChlKX19LHtrZXk6Il9vblJlbW90ZUNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuZnJvbS5zbGljZSgwLC0xMyksbz17dHlwZTplLnR5cGUsZnJvbTplLmJvZHkuc291cmNlLHVybDpyLHNjaGVtYTplLmJvZHkuc2NoZW1hLHZhbHVlOmUuYm9keS52YWx1ZSxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBvPTIwMDtyJiYobz1yKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpvfX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIk5PVElGSUNBVElPTi1FVkVOVDogIixvKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIobykpfX0se2tleToiX29uUmVtb3RlRGVsZXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LnJlc291cmNlLG89dC5fb2JzZXJ2ZXJzW3JdO2lmKG8pe3ZhciBuPXt0eXBlOmUudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBuPTIwMDtyJiYobj1yKSwyMDA9PT1uJiZvWyJkZWxldGUiXSgpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm4sc291cmNlOnQuX293bmVyfX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIk5PVElGSUNBVElPTi1FVkVOVDogIixuKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIobikpfWVsc2UgdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDA0LHNvdXJjZTp0Ll9vd25lcn19KX19LHtrZXk6Im93bmVyIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3duZXJ9fSx7a2V5OiJyZXBvcnRlcnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZXBvcnRlcnN9fSx7a2V5OiJvYnNlcnZlcnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vYnNlcnZlcnN9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWgsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL0RhdGFPYmplY3RPYnNlcnZlciI6MTE3LCIuL0RhdGFPYmplY3RSZXBvcnRlciI6MTE4LCIuL0RhdGFQcm92aXNpb25hbCI6MTE5LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSI6OSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDEyMjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fWZ1bmN0aW9uIG4oZSl7aWYoIWUpdGhyb3cgRXJyb3IoIlVSTCBpcyBuZWVkZWQgdG8gc3BsaXQiKTt2YXIgdD0vKFthLXpBLVotXSopOlwvXC8oPzpcLik/KFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1cL10qKS9naSxyPSIkMSwkMiwkMyIsbz1lLnJlcGxhY2UodCxyKS5zcGxpdCgiLCIpO29bMF09PT1lJiYob1swXT0iaHR0cHMiLG9bMV09ZSk7dmFyIG49e3R5cGU6b1swXSxkb21haW46b1sxXSxpZGVudGl0eTpvWzJdfTtyZXR1cm4gbn1mdW5jdGlvbiBpKGUpe3ZhciB0PWUuaW5kZXhPZigiQCIpLHI9e3VzZXJuYW1lOmUuc3Vic3RyaW5nKDAsdCksZG9tYWluOmUuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCl9O3JldHVybiByfWZ1bmN0aW9uIHMoZSl7cmV0dXJuISgoMCxwWyJkZWZhdWx0Il0pKGUpLmxlbmd0aD4wKX1mdW5jdGlvbiBjKGUpe2lmKGUpcmV0dXJuIEpTT04ucGFyc2UoKDAsZFsiZGVmYXVsdCJdKShlKSl9ZnVuY3Rpb24gYShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKTtyZXR1cm4idXNlcjovLyIrZS5zdWJzdHJpbmcodCsxLGUubGVuZ3RoKSsiLyIrZS5zdWJzdHJpbmcoMCx0KX1mdW5jdGlvbiB1KGUpe3ZhciB0PW4oZSk7cmV0dXJuIHQuaWRlbnRpdHkucmVwbGFjZSgiLyIsIiIpKyJAIit0LmRvbWFpbn1mdW5jdGlvbiBsKGUpe2lmKCJ1c2VyOi8vIj09PWUuc3Vic3RyaW5nKDAsNykpe3ZhciB0PW4oZSk7aWYodC5kb21haW4mJnQuaWRlbnRpdHkpcmV0dXJuIGU7dGhyb3cidXNlclVSTCB3aXRoIHdyb25nIGZvcm1hdCJ9cmV0dXJuIGEoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBmPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSIpLGQ9byhmKSxfPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLHA9byhfKTtyLmRpdmlkZVVSTD1uLHIuZGl2aWRlRW1haWw9aSxyLmVtcHR5T2JqZWN0PXMsci5kZWVwQ2xvbmU9YyxyLmdldFVzZXJVUkxGcm9tRW1haWw9YSxyLmdldFVzZXJFbWFpbEZyb21VUkw9dSxyLmNvbnZlcnRUb1VzZXJVUkw9bH0seyJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiOjIsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6N31dfSx7fSxbMTE0XSkoMTE0KX0pOw0KDQoKfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pCn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiEKICogVVJJLmpzIC0gTXV0YXRpbmcgVVJMcwogKiBJUHY2IFN1cHBvcnQKICoKICogVmVyc2lvbjogMS4xOC4xCiAqCiAqIEF1dGhvcjogUm9kbmV5IFJlaG0KICogV2ViOiBodHRwOi8vbWVkaWFsaXplLmdpdGh1Yi5pby9VUkkuanMvCiAqCiAqIExpY2Vuc2VkIHVuZGVyCiAqICAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZQogKgogKi8KCihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkgewogICd1c2Ugc3RyaWN0JzsKICAvLyBodHRwczovL2dpdGh1Yi5jb20vdW1kanMvdW1kL2Jsb2IvbWFzdGVyL3JldHVybkV4cG9ydHMuanMKICBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAvLyBOb2RlCiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTsKICB9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgLy8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLgogICAgZGVmaW5lKGZhY3RvcnkpOwogIH0gZWxzZSB7CiAgICAvLyBCcm93c2VyIGdsb2JhbHMgKHJvb3QgaXMgd2luZG93KQogICAgcm9vdC5JUHY2ID0gZmFjdG9yeShyb290KTsKICB9Cn0odGhpcywgZnVuY3Rpb24gKHJvb3QpIHsKICAndXNlIHN0cmljdCc7CgogIC8qCiAgdmFyIF9pbiA9ICJmZTgwOjAwMDA6MDAwMDowMDAwOjAyMDQ6NjFmZjpmZTlkOmYxNTYiOwogIHZhciBfb3V0ID0gSVB2Ni5iZXN0KF9pbik7CiAgdmFyIF9leHBlY3RlZCA9ICJmZTgwOjoyMDQ6NjFmZjpmZTlkOmYxNTYiOwoKICBjb25zb2xlLmxvZyhfaW4sIF9vdXQsIF9leHBlY3RlZCwgX291dCA9PT0gX2V4cGVjdGVkKTsKICAqLwoKICAvLyBzYXZlIGN1cnJlbnQgSVB2NiB2YXJpYWJsZSwgaWYgYW55CiAgdmFyIF9JUHY2ID0gcm9vdCAmJiByb290LklQdjY7CgogIGZ1bmN0aW9uIGJlc3RQcmVzZW50YXRpb24oYWRkcmVzcykgewogICAgLy8gYmFzZWQgb246CiAgICAvLyBKYXZhc2NyaXB0IHRvIHRlc3QgYW4gSVB2NiBhZGRyZXNzIGZvciBwcm9wZXIgZm9ybWF0LCBhbmQgdG8KICAgIC8vIHByZXNlbnQgdGhlICJiZXN0IHRleHQgcmVwcmVzZW50YXRpb24iIGFjY29yZGluZyB0byBJRVRGIERyYWZ0IFJGQyBhdAogICAgLy8gaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvZHJhZnQtaWV0Zi02bWFuLXRleHQtYWRkci1yZXByZXNlbnRhdGlvbi0wNAogICAgLy8gOCBGZWIgMjAxMCBSaWNoIEJyb3duLCBEYXJ0d2FyZSwgTExDCiAgICAvLyBQbGVhc2UgZmVlbCBmcmVlIHRvIHVzZSB0aGlzIGNvZGUgYXMgbG9uZyBhcyB5b3UgcHJvdmlkZSBhIGxpbmsgdG8KICAgIC8vIGh0dHA6Ly93d3cuaW50ZXJtYXBwZXIuY29tCiAgICAvLyBodHRwOi8vaW50ZXJtYXBwZXIuY29tL3N1cHBvcnQvdG9vbHMvSVBWNi1WYWxpZGF0b3IuYXNweAogICAgLy8gaHR0cDovL2Rvd25sb2FkLmRhcnR3YXJlLmNvbS90aGlyZHBhcnR5L2lwdjZ2YWxpZGF0b3IuanMKCiAgICB2YXIgX2FkZHJlc3MgPSBhZGRyZXNzLnRvTG93ZXJDYXNlKCk7CiAgICB2YXIgc2VnbWVudHMgPSBfYWRkcmVzcy5zcGxpdCgnOicpOwogICAgdmFyIGxlbmd0aCA9IHNlZ21lbnRzLmxlbmd0aDsKICAgIHZhciB0b3RhbCA9IDg7CgogICAgLy8gdHJpbSBjb2xvbnMgKDo6IG9yIDo6YTpiOmPigKYgb3Ig4oCmYTpiOmM6OikKICAgIGlmIChzZWdtZW50c1swXSA9PT0gJycgJiYgc2VnbWVudHNbMV0gPT09ICcnICYmIHNlZ21lbnRzWzJdID09PSAnJykgewogICAgICAvLyBtdXN0IGhhdmUgYmVlbiA6OgogICAgICAvLyByZW1vdmUgZmlyc3QgdHdvIGl0ZW1zCiAgICAgIHNlZ21lbnRzLnNoaWZ0KCk7CiAgICAgIHNlZ21lbnRzLnNoaWZ0KCk7CiAgICB9IGVsc2UgaWYgKHNlZ21lbnRzWzBdID09PSAnJyAmJiBzZWdtZW50c1sxXSA9PT0gJycpIHsKICAgICAgLy8gbXVzdCBoYXZlIGJlZW4gOjp4eHh4CiAgICAgIC8vIHJlbW92ZSB0aGUgZmlyc3QgaXRlbQogICAgICBzZWdtZW50cy5zaGlmdCgpOwogICAgfSBlbHNlIGlmIChzZWdtZW50c1tsZW5ndGggLSAxXSA9PT0gJycgJiYgc2VnbWVudHNbbGVuZ3RoIC0gMl0gPT09ICcnKSB7CiAgICAgIC8vIG11c3QgaGF2ZSBiZWVuIHh4eHg6OgogICAgICBzZWdtZW50cy5wb3AoKTsKICAgIH0KCiAgICBsZW5ndGggPSBzZWdtZW50cy5sZW5ndGg7CgogICAgLy8gYWRqdXN0IHRvdGFsIHNlZ21lbnRzIGZvciBJUHY0IHRyYWlsZXIKICAgIGlmIChzZWdtZW50c1tsZW5ndGggLSAxXS5pbmRleE9mKCcuJykgIT09IC0xKSB7CiAgICAgIC8vIGZvdW5kIGEgIi4iIHdoaWNoIG1lYW5zIElQdjQKICAgICAgdG90YWwgPSA3OwogICAgfQoKICAgIC8vIGZpbGwgZW1wdHkgc2VnbWVudHMgdGhlbSB3aXRoICIwMDAwIgogICAgdmFyIHBvczsKICAgIGZvciAocG9zID0gMDsgcG9zIDwgbGVuZ3RoOyBwb3MrKykgewogICAgICBpZiAoc2VnbWVudHNbcG9zXSA9PT0gJycpIHsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIGlmIChwb3MgPCB0b3RhbCkgewogICAgICBzZWdtZW50cy5zcGxpY2UocG9zLCAxLCAnMDAwMCcpOwogICAgICB3aGlsZSAoc2VnbWVudHMubGVuZ3RoIDwgdG90YWwpIHsKICAgICAgICBzZWdtZW50cy5zcGxpY2UocG9zLCAwLCAnMDAwMCcpOwogICAgICB9CiAgICB9CgogICAgLy8gc3RyaXAgbGVhZGluZyB6ZXJvcwogICAgdmFyIF9zZWdtZW50czsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG90YWw7IGkrKykgewogICAgICBfc2VnbWVudHMgPSBzZWdtZW50c1tpXS5zcGxpdCgnJyk7CiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgMyA7IGorKykgewogICAgICAgIGlmIChfc2VnbWVudHNbMF0gPT09ICcwJyAmJiBfc2VnbWVudHMubGVuZ3RoID4gMSkgewogICAgICAgICAgX3NlZ21lbnRzLnNwbGljZSgwLDEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHNlZ21lbnRzW2ldID0gX3NlZ21lbnRzLmpvaW4oJycpOwogICAgfQoKICAgIC8vIGZpbmQgbG9uZ2VzdCBzZXF1ZW5jZSBvZiB6ZXJvZXMgYW5kIGNvYWxlc2NlIHRoZW0gaW50byBvbmUgc2VnbWVudAogICAgdmFyIGJlc3QgPSAtMTsKICAgIHZhciBfYmVzdCA9IDA7CiAgICB2YXIgX2N1cnJlbnQgPSAwOwogICAgdmFyIGN1cnJlbnQgPSAtMTsKICAgIHZhciBpbnplcm9lcyA9IGZhbHNlOwogICAgLy8gaTsgYWxyZWFkeSBkZWNsYXJlZAoKICAgIGZvciAoaSA9IDA7IGkgPCB0b3RhbDsgaSsrKSB7CiAgICAgIGlmIChpbnplcm9lcykgewogICAgICAgIGlmIChzZWdtZW50c1tpXSA9PT0gJzAnKSB7CiAgICAgICAgICBfY3VycmVudCArPSAxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpbnplcm9lcyA9IGZhbHNlOwogICAgICAgICAgaWYgKF9jdXJyZW50ID4gX2Jlc3QpIHsKICAgICAgICAgICAgYmVzdCA9IGN1cnJlbnQ7CiAgICAgICAgICAgIF9iZXN0ID0gX2N1cnJlbnQ7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmIChzZWdtZW50c1tpXSA9PT0gJzAnKSB7CiAgICAgICAgICBpbnplcm9lcyA9IHRydWU7CiAgICAgICAgICBjdXJyZW50ID0gaTsKICAgICAgICAgIF9jdXJyZW50ID0gMTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBpZiAoX2N1cnJlbnQgPiBfYmVzdCkgewogICAgICBiZXN0ID0gY3VycmVudDsKICAgICAgX2Jlc3QgPSBfY3VycmVudDsKICAgIH0KCiAgICBpZiAoX2Jlc3QgPiAxKSB7CiAgICAgIHNlZ21lbnRzLnNwbGljZShiZXN0LCBfYmVzdCwgJycpOwogICAgfQoKICAgIGxlbmd0aCA9IHNlZ21lbnRzLmxlbmd0aDsKCiAgICAvLyBhc3NlbWJsZSByZW1haW5pbmcgc2VnbWVudHMKICAgIHZhciByZXN1bHQgPSAnJzsKICAgIGlmIChzZWdtZW50c1swXSA9PT0gJycpICB7CiAgICAgIHJlc3VsdCA9ICc6JzsKICAgIH0KCiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgcmVzdWx0ICs9IHNlZ21lbnRzW2ldOwogICAgICBpZiAoaSA9PT0gbGVuZ3RoIC0gMSkgewogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICByZXN1bHQgKz0gJzonOwogICAgfQoKICAgIGlmIChzZWdtZW50c1tsZW5ndGggLSAxXSA9PT0gJycpIHsKICAgICAgcmVzdWx0ICs9ICc6JzsKICAgIH0KCiAgICByZXR1cm4gcmVzdWx0OwogIH0KCiAgZnVuY3Rpb24gbm9Db25mbGljdCgpIHsKICAgIC8qanNoaW50IHZhbGlkdGhpczogdHJ1ZSAqLwogICAgaWYgKHJvb3QuSVB2NiA9PT0gdGhpcykgewogICAgICByb290LklQdjYgPSBfSVB2NjsKICAgIH0KICAKICAgIHJldHVybiB0aGlzOwogIH0KCiAgcmV0dXJuIHsKICAgIGJlc3Q6IGJlc3RQcmVzZW50YXRpb24sCiAgICBub0NvbmZsaWN0OiBub0NvbmZsaWN0CiAgfTsKfSkpOwoKfSx7fV0sNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qIQogKiBVUkkuanMgLSBNdXRhdGluZyBVUkxzCiAqIFNlY29uZCBMZXZlbCBEb21haW4gKFNMRCkgU3VwcG9ydAogKgogKiBWZXJzaW9uOiAxLjE4LjEKICoKICogQXV0aG9yOiBSb2RuZXkgUmVobQogKiBXZWI6IGh0dHA6Ly9tZWRpYWxpemUuZ2l0aHViLmlvL1VSSS5qcy8KICoKICogTGljZW5zZWQgdW5kZXIKICogICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlCiAqCiAqLwoKKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7CiAgJ3VzZSBzdHJpY3QnOwogIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS91bWRqcy91bWQvYmxvYi9tYXN0ZXIvcmV0dXJuRXhwb3J0cy5qcwogIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsKICAgIC8vIE5vZGUKICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpOwogIH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuCiAgICBkZWZpbmUoZmFjdG9yeSk7CiAgfSBlbHNlIHsKICAgIC8vIEJyb3dzZXIgZ2xvYmFscyAocm9vdCBpcyB3aW5kb3cpCiAgICByb290LlNlY29uZExldmVsRG9tYWlucyA9IGZhY3Rvcnkocm9vdCk7CiAgfQp9KHRoaXMsIGZ1bmN0aW9uIChyb290KSB7CiAgJ3VzZSBzdHJpY3QnOwoKICAvLyBzYXZlIGN1cnJlbnQgU2Vjb25kTGV2ZWxEb21haW5zIHZhcmlhYmxlLCBpZiBhbnkKICB2YXIgX1NlY29uZExldmVsRG9tYWlucyA9IHJvb3QgJiYgcm9vdC5TZWNvbmRMZXZlbERvbWFpbnM7CgogIHZhciBTTEQgPSB7CiAgICAvLyBsaXN0IG9mIGtub3duIFNlY29uZCBMZXZlbCBEb21haW5zCiAgICAvLyBjb252ZXJ0ZWQgbGlzdCBvZiBTTERzIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2dhdmluZ21pbGxlci9zZWNvbmQtbGV2ZWwtZG9tYWlucwogICAgLy8gLS0tLQogICAgLy8gcHVibGljc3VmZml4Lm9yZyBpcyBtb3JlIGN1cnJlbnQgYW5kIGFjdHVhbGx5IHVzZWQgYnkgYSBjb3VwbGUgb2YgYnJvd3NlcnMgaW50ZXJuYWxseS4KICAgIC8vIGRvd25zaWRlIGlzIGl0IGFsc28gY29udGFpbnMgZG9tYWlucyBsaWtlICJkeW5kbnMub3JnIiAtIHdoaWNoIGlzIGZpbmUgZm9yIHRoZSBzZWN1cml0eQogICAgLy8gaXNzdWVzIGJyb3dzZXIgaGF2ZSB0byBkZWFsIHdpdGggKFNPUCBmb3IgY29va2llcywgZXRjKSAtIGJ1dCBpcyB3YXkgb3ZlcmJvYXJkIGZvciBVUkkuanMKICAgIC8vIC0tLS0KICAgIGxpc3Q6IHsKICAgICAgJ2FjJzonIGNvbSBnb3YgbWlsIG5ldCBvcmcgJywKICAgICAgJ2FlJzonIGFjIGNvIGdvdiBtaWwgbmFtZSBuZXQgb3JnIHBybyBzY2ggJywKICAgICAgJ2FmJzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ2FsJzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICdhbyc6JyBjbyBlZCBndiBpdCBvZyBwYiAnLAogICAgICAnYXInOicgY29tIGVkdSBnb2IgZ292IGludCBtaWwgbmV0IG9yZyB0dXIgJywKICAgICAgJ2F0JzonIGFjIGNvIGd2IG9yICcsCiAgICAgICdhdSc6JyBhc24gY29tIGNzaXJvIGVkdSBnb3YgaWQgbmV0IG9yZyAnLAogICAgICAnYmEnOicgY28gY29tIGVkdSBnb3YgbWlsIG5ldCBvcmcgcnMgdW5iaSB1bm1vIHVuc2EgdW50eiB1bnplICcsCiAgICAgICdiYic6JyBiaXogY28gY29tIGVkdSBnb3YgaW5mbyBuZXQgb3JnIHN0b3JlIHR2ICcsCiAgICAgICdiaCc6JyBiaXogY2MgY29tIGVkdSBnb3YgaW5mbyBuZXQgb3JnICcsCiAgICAgICdibic6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdibyc6JyBjb20gZWR1IGdvYiBnb3YgaW50IG1pbCBuZXQgb3JnIHR2ICcsCiAgICAgICdicic6JyBhZG0gYWR2IGFnciBhbSBhcnEgYXJ0IGF0byBiIGJpbyBibG9nIGJtZCBjaW0gY25nIGNudCBjb20gY29vcCBlY24gZWR1IGVuZyBlc3AgZXRjIGV0aSBmYXIgZmxvZyBmbSBmbmQgZm90IGZzdCBnMTIgZ2dmIGdvdiBpbWIgaW5kIGluZiBqb3IganVzIGxlbCBtYXQgbWVkIG1pbCBtdXMgbmV0IG5vbSBub3QgbnRyIG9kbyBvcmcgcHBnIHBybyBwc2MgcHNpIHFzbCByZWMgc2xnIHNydiB0bXAgdHJkIHR1ciB0diB2ZXQgdmxvZyB3aWtpIHpsZyAnLAogICAgICAnYnMnOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnYnonOicgZHUgZXQgb20gb3YgcmcgJywKICAgICAgJ2NhJzonIGFiIGJjIG1iIG5iIG5mIG5sIG5zIG50IG51IG9uIHBlIHFjIHNrIHlrICcsCiAgICAgICdjayc6JyBiaXogY28gZWR1IGdlbiBnb3YgaW5mbyBuZXQgb3JnICcsCiAgICAgICdjbic6JyBhYyBhaCBiaiBjb20gY3EgZWR1IGZqIGdkIGdvdiBncyBneCBneiBoYSBoYiBoZSBoaSBobCBobiBqbCBqcyBqeCBsbiBtaWwgbmV0IG5tIG54IG9yZyBxaCBzYyBzZCBzaCBzbiBzeCB0aiB0dyB4aiB4eiB5biB6aiAnLAogICAgICAnY28nOicgY29tIGVkdSBnb3YgbWlsIG5ldCBub20gb3JnICcsCiAgICAgICdjcic6JyBhYyBjIGNvIGVkIGZpIGdvIG9yIHNhICcsCiAgICAgICdjeSc6JyBhYyBiaXogY29tIGVrbG9nZXMgZ292IGx0ZCBuYW1lIG5ldCBvcmcgcGFybGlhbWVudCBwcmVzcyBwcm8gdG0gJywKICAgICAgJ2RvJzonIGFydCBjb20gZWR1IGdvYiBnb3YgbWlsIG5ldCBvcmcgc2xkIHdlYiAnLAogICAgICAnZHonOicgYXJ0IGFzc28gY29tIGVkdSBnb3YgbmV0IG9yZyBwb2wgJywKICAgICAgJ2VjJzonIGNvbSBlZHUgZmluIGdvdiBpbmZvIG1lZCBtaWwgbmV0IG9yZyBwcm8gJywKICAgICAgJ2VnJzonIGNvbSBlZHUgZXVuIGdvdiBtaWwgbmFtZSBuZXQgb3JnIHNjaSAnLAogICAgICAnZXInOicgY29tIGVkdSBnb3YgaW5kIG1pbCBuZXQgb3JnIHJvY2hlc3QgdyAnLAogICAgICAnZXMnOicgY29tIGVkdSBnb2Igbm9tIG9yZyAnLAogICAgICAnZXQnOicgYml6IGNvbSBlZHUgZ292IGluZm8gbmFtZSBuZXQgb3JnICcsCiAgICAgICdmaic6JyBhYyBiaXogY29tIGluZm8gbWlsIG5hbWUgbmV0IG9yZyBwcm8gJywKICAgICAgJ2ZrJzonIGFjIGNvIGdvdiBuZXQgbm9tIG9yZyAnLAogICAgICAnZnInOicgYXNzbyBjb20gZiBnb3V2IG5vbSBwcmQgcHJlc3NlIHRtICcsCiAgICAgICdnZyc6JyBjbyBuZXQgb3JnICcsCiAgICAgICdnaCc6JyBjb20gZWR1IGdvdiBtaWwgb3JnICcsCiAgICAgICdnbic6JyBhYyBjb20gZ292IG5ldCBvcmcgJywKICAgICAgJ2dyJzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICdndCc6JyBjb20gZWR1IGdvYiBpbmQgbWlsIG5ldCBvcmcgJywKICAgICAgJ2d1JzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ2hrJzonIGNvbSBlZHUgZ292IGlkdiBuZXQgb3JnICcsCiAgICAgICdodSc6JyAyMDAwIGFncmFyIGJvbHQgY2FzaW5vIGNpdHkgY28gZXJvdGljYSBlcm90aWthIGZpbG0gZm9ydW0gZ2FtZXMgaG90ZWwgaW5mbyBpbmdhdGxhbiBqb2dhc3oga29ueXZlbG8gbGFrYXMgbWVkaWEgbmV3cyBvcmcgcHJpdiByZWtsYW0gc2V4IHNob3Agc3BvcnQgc3VsaSBzemV4IHRtIHRvenNkZSB1dGF6YXMgdmlkZW8gJywKICAgICAgJ2lkJzonIGFjIGNvIGdvIG1pbCBuZXQgb3Igc2NoIHdlYiAnLAogICAgICAnaWwnOicgYWMgY28gZ292IGlkZiBrMTIgbXVuaSBuZXQgb3JnICcsCiAgICAgICdpbic6JyBhYyBjbyBlZHUgZXJuZXQgZmlybSBnZW4gZ292IGkgaW5kIG1pbCBuZXQgbmljIG9yZyByZXMgJywKICAgICAgJ2lxJzonIGNvbSBlZHUgZ292IGkgbWlsIG5ldCBvcmcgJywKICAgICAgJ2lyJzonIGFjIGNvIGRuc3NlYyBnb3YgaSBpZCBuZXQgb3JnIHNjaCAnLAogICAgICAnaXQnOicgZWR1IGdvdiAnLAogICAgICAnamUnOicgY28gbmV0IG9yZyAnLAogICAgICAnam8nOicgY29tIGVkdSBnb3YgbWlsIG5hbWUgbmV0IG9yZyBzY2ggJywKICAgICAgJ2pwJzonIGFjIGFkIGNvIGVkIGdvIGdyIGxnIG5lIG9yICcsCiAgICAgICdrZSc6JyBhYyBjbyBnbyBpbmZvIG1lIG1vYmkgbmUgb3Igc2MgJywKICAgICAgJ2toJzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnIHBlciAnLAogICAgICAna2knOicgYml6IGNvbSBkZSBlZHUgZ292IGluZm8gbW9iIG5ldCBvcmcgdGVsICcsCiAgICAgICdrbSc6JyBhc3NvIGNvbSBjb29wIGVkdSBnb3V2IGsgbWVkZWNpbiBtaWwgbm9tIG5vdGFpcmVzIHBoYXJtYWNpZW5zIHByZXNzZSB0bSB2ZXRlcmluYWlyZSAnLAogICAgICAna24nOicgZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdrcic6JyBhYyBidXNhbiBjaHVuZ2J1ayBjaHVuZ25hbSBjbyBkYWVndSBkYWVqZW9uIGVzIGdhbmd3b24gZ28gZ3dhbmdqdSBneWVvbmdidWsgZ3llb25nZ2kgZ3llb25nbmFtIGhzIGluY2hlb24gamVqdSBqZW9uYnVrIGplb25uYW0gayBrZyBtaWwgbXMgbmUgb3IgcGUgcmUgc2Mgc2VvdWwgdWxzYW4gJywKICAgICAgJ2t3JzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ2t5JzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ2t6JzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICdsYic6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdsayc6JyBhc3NuIGNvbSBlZHUgZ292IGdycCBob3RlbCBpbnQgbHRkIG5ldCBuZ28gb3JnIHNjaCBzb2Mgd2ViICcsCiAgICAgICdscic6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdsdic6JyBhc24gY29tIGNvbmYgZWR1IGdvdiBpZCBtaWwgbmV0IG9yZyAnLAogICAgICAnbHknOicgY29tIGVkdSBnb3YgaWQgbWVkIG5ldCBvcmcgcGxjIHNjaCAnLAogICAgICAnbWEnOicgYWMgY28gZ292IG0gbmV0IG9yZyBwcmVzcyAnLAogICAgICAnbWMnOicgYXNzbyB0bSAnLAogICAgICAnbWUnOicgYWMgY28gZWR1IGdvdiBpdHMgbmV0IG9yZyBwcml2ICcsCiAgICAgICdtZyc6JyBjb20gZWR1IGdvdiBtaWwgbm9tIG9yZyBwcmQgdG0gJywKICAgICAgJ21rJzonIGNvbSBlZHUgZ292IGluZiBuYW1lIG5ldCBvcmcgcHJvICcsCiAgICAgICdtbCc6JyBjb20gZWR1IGdvdiBuZXQgb3JnIHByZXNzZSAnLAogICAgICAnbW4nOicgZWR1IGdvdiBvcmcgJywKICAgICAgJ21vJzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ210JzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ212JzonIGFlcm8gYml6IGNvbSBjb29wIGVkdSBnb3YgaW5mbyBpbnQgbWlsIG11c2V1bSBuYW1lIG5ldCBvcmcgcHJvICcsCiAgICAgICdtdyc6JyBhYyBjbyBjb20gY29vcCBlZHUgZ292IGludCBtdXNldW0gbmV0IG9yZyAnLAogICAgICAnbXgnOicgY29tIGVkdSBnb2IgbmV0IG9yZyAnLAogICAgICAnbXknOicgY29tIGVkdSBnb3YgbWlsIG5hbWUgbmV0IG9yZyBzY2ggJywKICAgICAgJ25mJzonIGFydHMgY29tIGZpcm0gaW5mbyBuZXQgb3RoZXIgcGVyIHJlYyBzdG9yZSB3ZWIgJywKICAgICAgJ25nJzonIGJpeiBjb20gZWR1IGdvdiBtaWwgbW9iaSBuYW1lIG5ldCBvcmcgc2NoICcsCiAgICAgICduaSc6JyBhYyBjbyBjb20gZWR1IGdvYiBtaWwgbmV0IG5vbSBvcmcgJywKICAgICAgJ25wJzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICducic6JyBiaXogY29tIGVkdSBnb3YgaW5mbyBuZXQgb3JnICcsCiAgICAgICdvbSc6JyBhYyBiaXogY28gY29tIGVkdSBnb3YgbWVkIG1pbCBtdXNldW0gbmV0IG9yZyBwcm8gc2NoICcsCiAgICAgICdwZSc6JyBjb20gZWR1IGdvYiBtaWwgbmV0IG5vbSBvcmcgc2xkICcsCiAgICAgICdwaCc6JyBjb20gZWR1IGdvdiBpIG1pbCBuZXQgbmdvIG9yZyAnLAogICAgICAncGsnOicgYml6IGNvbSBlZHUgZmFtIGdvYiBnb2sgZ29uIGdvcCBnb3MgZ292IG5ldCBvcmcgd2ViICcsCiAgICAgICdwbCc6JyBhcnQgYmlhbHlzdG9rIGJpeiBjb20gZWR1IGdkYSBnZGFuc2sgZ29yem93IGdvdiBpbmZvIGthdG93aWNlIGtyYWtvdyBsb2R6IGx1YmxpbiBtaWwgbmV0IG5nbyBvbHN6dHluIG9yZyBwb3puYW4gcHdyIHJhZG9tIHNsdXBzayBzemN6ZWNpbiB0b3J1biB3YXJzemF3YSB3YXcgd3JvYyB3cm9jbGF3IHpnb3JhICcsCiAgICAgICdwcic6JyBhYyBiaXogY29tIGVkdSBlc3QgZ292IGluZm8gaXNsYSBuYW1lIG5ldCBvcmcgcHJvIHByb2YgJywKICAgICAgJ3BzJzonIGNvbSBlZHUgZ292IG5ldCBvcmcgcGxvIHNlYyAnLAogICAgICAncHcnOicgYmVsYXUgY28gZWQgZ28gbmUgb3IgJywKICAgICAgJ3JvJzonIGFydHMgY29tIGZpcm0gaW5mbyBub20gbnQgb3JnIHJlYyBzdG9yZSB0bSB3d3cgJywKICAgICAgJ3JzJzonIGFjIGNvIGVkdSBnb3YgaW4gb3JnICcsCiAgICAgICdzYic6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdzYyc6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdzaCc6JyBjbyBjb20gZWR1IGdvdiBuZXQgbm9tIG9yZyAnLAogICAgICAnc2wnOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnc3QnOicgY28gY29tIGNvbnN1bGFkbyBlZHUgZW1iYWl4YWRhIGdvdiBtaWwgbmV0IG9yZyBwcmluY2lwZSBzYW90b21lIHN0b3JlICcsCiAgICAgICdzdic6JyBjb20gZWR1IGdvYiBvcmcgcmVkICcsCiAgICAgICdzeic6JyBhYyBjbyBvcmcgJywKICAgICAgJ3RyJzonIGF2IGJicyBiZWwgYml6IGNvbSBkciBlZHUgZ2VuIGdvdiBpbmZvIGsxMiBuYW1lIG5ldCBvcmcgcG9sIHRlbCB0c2sgdHYgd2ViICcsCiAgICAgICd0dCc6JyBhZXJvIGJpeiBjYXQgY28gY29tIGNvb3AgZWR1IGdvdiBpbmZvIGludCBqb2JzIG1pbCBtb2JpIG11c2V1bSBuYW1lIG5ldCBvcmcgcHJvIHRlbCB0cmF2ZWwgJywKICAgICAgJ3R3JzonIGNsdWIgY29tIGViaXogZWR1IGdhbWUgZ292IGlkdiBtaWwgbmV0IG9yZyAnLAogICAgICAnbXUnOicgYWMgY28gY29tIGdvdiBuZXQgb3Igb3JnICcsCiAgICAgICdteic6JyBhYyBjbyBlZHUgZ292IG9yZyAnLAogICAgICAnbmEnOicgY28gY29tICcsCiAgICAgICdueic6JyBhYyBjbyBjcmkgZ2VlayBnZW4gZ292dCBoZWFsdGggaXdpIG1hb3JpIG1pbCBuZXQgb3JnIHBhcmxpYW1lbnQgc2Nob29sICcsCiAgICAgICdwYSc6JyBhYm8gYWMgY29tIGVkdSBnb2IgaW5nIG1lZCBuZXQgbm9tIG9yZyBzbGQgJywKICAgICAgJ3B0JzonIGNvbSBlZHUgZ292IGludCBuZXQgbm9tZSBvcmcgcHVibCAnLAogICAgICAncHknOicgY29tIGVkdSBnb3YgbWlsIG5ldCBvcmcgJywKICAgICAgJ3FhJzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICdyZSc6JyBhc3NvIGNvbSBub20gJywKICAgICAgJ3J1JzonIGFjIGFkeWdleWEgYWx0YWkgYW11ciBhcmtoYW5nZWxzayBhc3RyYWtoYW4gYmFzaGtpcmlhIGJlbGdvcm9kIGJpciBicnlhbnNrIGJ1cnlhdGlhIGNiZyBjaGVsIGNoZWx5YWJpbnNrIGNoaXRhIGNodWtvdGthIGNodXZhc2hpYSBjb20gZGFnZXN0YW4gZS1idXJnIGVkdSBnb3YgZ3Jvem55IGludCBpcmt1dHNrIGl2YW5vdm8gaXpoZXZzayBqYXIgam9zaGthci1vbGEga2FsbXlraWEga2FsdWdhIGthbWNoYXRrYSBrYXJlbGlhIGthemFuIGtjaHIga2VtZXJvdm8ga2hhYmFyb3ZzayBraGFrYXNzaWEga2h2IGtpcm92IGtvZW5pZyBrb21pIGtvc3Ryb21hIGtyYW5veWFyc2sga3ViYW4ga3VyZ2FuIGt1cnNrIGxpcGV0c2sgbWFnYWRhbiBtYXJpIG1hcmktZWwgbWFyaW5lIG1pbCBtb3Jkb3ZpYSBtb3NyZWcgbXNrIG11cm1hbnNrIG5hbGNoaWsgbmV0IG5ub3Ygbm92IG5vdm9zaWJpcnNrIG5zayBvbXNrIG9yZW5idXJnIG9yZyBvcnlvbCBwZW56YSBwZXJtIHBwIHBza292IHB0eiBybmQgcnlhemFuIHNha2hhbGluIHNhbWFyYSBzYXJhdG92IHNpbWJpcnNrIHNtb2xlbnNrIHNwYiBzdGF2cm9wb2wgc3R2IHN1cmd1dCB0YW1ib3YgdGF0YXJzdGFuIHRvbSB0b21zayB0c2FyaXRzeW4gdHNrIHR1bGEgdHV2YSB0dmVyIHR5dW1lbiB1ZG0gdWRtdXJ0aWEgdWxhbi11ZGUgdmxhZGlrYXZrYXogdmxhZGltaXIgdmxhZGl2b3N0b2sgdm9sZ29ncmFkIHZvbG9nZGEgdm9yb25lemggdnJuIHZ5YXRrYSB5YWt1dGlhIHlhbWFsIHlla2F0ZXJpbmJ1cmcgeXV6aG5vLXNha2hhbGluc2sgJywKICAgICAgJ3J3JzonIGFjIGNvIGNvbSBlZHUgZ291diBnb3YgaW50IG1pbCBuZXQgJywKICAgICAgJ3NhJzonIGNvbSBlZHUgZ292IG1lZCBuZXQgb3JnIHB1YiBzY2ggJywKICAgICAgJ3NkJzonIGNvbSBlZHUgZ292IGluZm8gbWVkIG5ldCBvcmcgdHYgJywKICAgICAgJ3NlJzonIGEgYWMgYiBiZCBjIGQgZSBmIGcgaCBpIGsgbCBtIG4gbyBvcmcgcCBwYXJ0aSBwcCBwcmVzcyByIHMgdCB0bSB1IHcgeCB5IHogJywKICAgICAgJ3NnJzonIGNvbSBlZHUgZ292IGlkbiBuZXQgb3JnIHBlciAnLAogICAgICAnc24nOicgYXJ0IGNvbSBlZHUgZ291diBvcmcgcGVyc28gdW5pdiAnLAogICAgICAnc3knOicgY29tIGVkdSBnb3YgbWlsIG5ldCBuZXdzIG9yZyAnLAogICAgICAndGgnOicgYWMgY28gZ28gaW4gbWkgbmV0IG9yICcsCiAgICAgICd0aic6JyBhYyBiaXogY28gY29tIGVkdSBnbyBnb3YgaW5mbyBpbnQgbWlsIG5hbWUgbmV0IG5pYyBvcmcgdGVzdCB3ZWIgJywKICAgICAgJ3RuJzonIGFncmluZXQgY29tIGRlZmVuc2UgZWR1bmV0IGVucyBmaW4gZ292IGluZCBpbmZvIGludGwgbWluY29tIG5hdCBuZXQgb3JnIHBlcnNvIHJucnQgcm5zIHJudSB0b3VyaXNtICcsCiAgICAgICd0eic6JyBhYyBjbyBnbyBuZSBvciAnLAogICAgICAndWEnOicgYml6IGNoZXJrYXNzeSBjaGVybmlnb3YgY2hlcm5vdnRzeSBjayBjbiBjbyBjb20gY3JpbWVhIGN2IGRuIGRuZXByb3BldHJvdnNrIGRvbmV0c2sgZHAgZWR1IGdvdiBpZiBpbiBpdmFuby1mcmFua2l2c2sga2gga2hhcmtvdiBraGVyc29uIGtobWVsbml0c2tpeSBraWV2IGtpcm92b2dyYWQga20ga3Iga3Mga3YgbGcgbHVnYW5zayBsdXRzayBsdml2IG1lIG1rIG5ldCBuaWtvbGFldiBvZCBvZGVzc2Egb3JnIHBsIHBvbHRhdmEgcHAgcm92bm8gcnYgc2ViYXN0b3BvbCBzdW15IHRlIHRlcm5vcGlsIHV6aGdvcm9kIHZpbm5pY2Egdm4gemFwb3Jpemh6aGUgemhpdG9taXIgenAgenQgJywKICAgICAgJ3VnJzonIGFjIGNvIGdvIG5lIG9yIG9yZyBzYyAnLAogICAgICAndWsnOicgYWMgYmwgYnJpdGlzaC1saWJyYXJ5IGNvIGN5bSBnb3YgZ292dCBpY25ldCBqZXQgbGVhIGx0ZCBtZSBtaWwgbW9kIG5hdGlvbmFsLWxpYnJhcnktc2NvdGxhbmQgbmVsIG5ldCBuaHMgbmljIG5scyBvcmcgb3JnbiBwYXJsaWFtZW50IHBsYyBwb2xpY2Ugc2NoIHNjb3Qgc29jICcsCiAgICAgICd1cyc6JyBkbmkgZmVkIGlzYSBraWRzIG5zbiAnLAogICAgICAndXknOicgY29tIGVkdSBndWIgbWlsIG5ldCBvcmcgJywKICAgICAgJ3ZlJzonIGNvIGNvbSBlZHUgZ29iIGluZm8gbWlsIG5ldCBvcmcgd2ViICcsCiAgICAgICd2aSc6JyBjbyBjb20gazEyIG5ldCBvcmcgJywKICAgICAgJ3ZuJzonIGFjIGJpeiBjb20gZWR1IGdvdiBoZWFsdGggaW5mbyBpbnQgbmFtZSBuZXQgb3JnIHBybyAnLAogICAgICAneWUnOicgY28gY29tIGdvdiBsdGQgbWUgbmV0IG9yZyBwbGMgJywKICAgICAgJ3l1JzonIGFjIGNvIGVkdSBnb3Ygb3JnICcsCiAgICAgICd6YSc6JyBhYyBhZ3JpYyBhbHQgYm91cnNlIGNpdHkgY28gY3liZXJuZXQgZGIgZWR1IGdvdiBncm9uZGFyIGlhY2Nlc3MgaW10IGluY2EgbGFuZGVzaWduIGxhdyBtaWwgbmV0IG5nbyBuaXMgbm9tIG9saXZldHRpIG9yZyBwaXggc2Nob29sIHRtIHdlYiAnLAogICAgICAnem0nOicgYWMgY28gY29tIGVkdSBnb3YgbmV0IG9yZyBzY2ggJwogICAgfSwKICAgIC8vIGdvcmhpbGwgMjAxMy0xMC0yNTogVXNpbmcgaW5kZXhPZigpIGluc3RlYWQgUmVnZXhwKCkuIFNpZ25pZmljYW50IGJvb3N0CiAgICAvLyBpbiBib3RoIHBlcmZvcm1hbmNlIGFuZCBtZW1vcnkgZm9vdHByaW50LiBObyBpbml0aWFsaXphdGlvbiByZXF1aXJlZC4KICAgIC8vIGh0dHA6Ly9qc3BlcmYuY29tL3VyaS1qcy1zbGQtcmVnZXgtdnMtYmluYXJ5LXNlYXJjaC80CiAgICAvLyBGb2xsb3dpbmcgbWV0aG9kcyB1c2UgbGFzdEluZGV4T2YoKSByYXRoZXIgdGhhbiBhcnJheS5zcGxpdCgpIGluIG9yZGVyCiAgICAvLyB0byBhdm9pZCBhbnkgbWVtb3J5IGFsbG9jYXRpb25zLgogICAgaGFzOiBmdW5jdGlvbihkb21haW4pIHsKICAgICAgdmFyIHRsZE9mZnNldCA9IGRvbWFpbi5sYXN0SW5kZXhPZignLicpOwogICAgICBpZiAodGxkT2Zmc2V0IDw9IDAgfHwgdGxkT2Zmc2V0ID49IChkb21haW4ubGVuZ3RoLTEpKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHZhciBzbGRPZmZzZXQgPSBkb21haW4ubGFzdEluZGV4T2YoJy4nLCB0bGRPZmZzZXQtMSk7CiAgICAgIGlmIChzbGRPZmZzZXQgPD0gMCB8fCBzbGRPZmZzZXQgPj0gKHRsZE9mZnNldC0xKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICB2YXIgc2xkTGlzdCA9IFNMRC5saXN0W2RvbWFpbi5zbGljZSh0bGRPZmZzZXQrMSldOwogICAgICBpZiAoIXNsZExpc3QpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgcmV0dXJuIHNsZExpc3QuaW5kZXhPZignICcgKyBkb21haW4uc2xpY2Uoc2xkT2Zmc2V0KzEsIHRsZE9mZnNldCkgKyAnICcpID49IDA7CiAgICB9LAogICAgaXM6IGZ1bmN0aW9uKGRvbWFpbikgewogICAgICB2YXIgdGxkT2Zmc2V0ID0gZG9tYWluLmxhc3RJbmRleE9mKCcuJyk7CiAgICAgIGlmICh0bGRPZmZzZXQgPD0gMCB8fCB0bGRPZmZzZXQgPj0gKGRvbWFpbi5sZW5ndGgtMSkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgdmFyIHNsZE9mZnNldCA9IGRvbWFpbi5sYXN0SW5kZXhPZignLicsIHRsZE9mZnNldC0xKTsKICAgICAgaWYgKHNsZE9mZnNldCA+PSAwKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHZhciBzbGRMaXN0ID0gU0xELmxpc3RbZG9tYWluLnNsaWNlKHRsZE9mZnNldCsxKV07CiAgICAgIGlmICghc2xkTGlzdCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICByZXR1cm4gc2xkTGlzdC5pbmRleE9mKCcgJyArIGRvbWFpbi5zbGljZSgwLCB0bGRPZmZzZXQpICsgJyAnKSA+PSAwOwogICAgfSwKICAgIGdldDogZnVuY3Rpb24oZG9tYWluKSB7CiAgICAgIHZhciB0bGRPZmZzZXQgPSBkb21haW4ubGFzdEluZGV4T2YoJy4nKTsKICAgICAgaWYgKHRsZE9mZnNldCA8PSAwIHx8IHRsZE9mZnNldCA+PSAoZG9tYWluLmxlbmd0aC0xKSkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIHZhciBzbGRPZmZzZXQgPSBkb21haW4ubGFzdEluZGV4T2YoJy4nLCB0bGRPZmZzZXQtMSk7CiAgICAgIGlmIChzbGRPZmZzZXQgPD0gMCB8fCBzbGRPZmZzZXQgPj0gKHRsZE9mZnNldC0xKSkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIHZhciBzbGRMaXN0ID0gU0xELmxpc3RbZG9tYWluLnNsaWNlKHRsZE9mZnNldCsxKV07CiAgICAgIGlmICghc2xkTGlzdCkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIGlmIChzbGRMaXN0LmluZGV4T2YoJyAnICsgZG9tYWluLnNsaWNlKHNsZE9mZnNldCsxLCB0bGRPZmZzZXQpICsgJyAnKSA8IDApIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICByZXR1cm4gZG9tYWluLnNsaWNlKHNsZE9mZnNldCsxKTsKICAgIH0sCiAgICBub0NvbmZsaWN0OiBmdW5jdGlvbigpewogICAgICBpZiAocm9vdC5TZWNvbmRMZXZlbERvbWFpbnMgPT09IHRoaXMpIHsKICAgICAgICByb290LlNlY29uZExldmVsRG9tYWlucyA9IF9TZWNvbmRMZXZlbERvbWFpbnM7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKCiAgcmV0dXJuIFNMRDsKfSkpOwoKfSx7fV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Ci8qIQogKiBVUkkuanMgLSBNdXRhdGluZyBVUkxzCiAqCiAqIFZlcnNpb246IDEuMTguMQogKgogKiBBdXRob3I6IFJvZG5leSBSZWhtCiAqIFdlYjogaHR0cDovL21lZGlhbGl6ZS5naXRodWIuaW8vVVJJLmpzLwogKgogKiBMaWNlbnNlZCB1bmRlcgogKiAgIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UKICoKICovCihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkgewogICd1c2Ugc3RyaWN0JzsKICAvLyBodHRwczovL2dpdGh1Yi5jb20vdW1kanMvdW1kL2Jsb2IvbWFzdGVyL3JldHVybkV4cG9ydHMuanMKICBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAvLyBOb2RlCiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnLi9wdW55Y29kZScpLCByZXF1aXJlKCcuL0lQdjYnKSwgcmVxdWlyZSgnLi9TZWNvbmRMZXZlbERvbWFpbnMnKSk7CiAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgIC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS4KICAgIGRlZmluZShbJy4vcHVueWNvZGUnLCAnLi9JUHY2JywgJy4vU2Vjb25kTGV2ZWxEb21haW5zJ10sIGZhY3RvcnkpOwogIH0gZWxzZSB7CiAgICAvLyBCcm93c2VyIGdsb2JhbHMgKHJvb3QgaXMgd2luZG93KQogICAgcm9vdC5VUkkgPSBmYWN0b3J5KHJvb3QucHVueWNvZGUsIHJvb3QuSVB2Niwgcm9vdC5TZWNvbmRMZXZlbERvbWFpbnMsIHJvb3QpOwogIH0KfSh0aGlzLCBmdW5jdGlvbiAocHVueWNvZGUsIElQdjYsIFNMRCwgcm9vdCkgewogICd1c2Ugc3RyaWN0JzsKICAvKmdsb2JhbCBsb2NhdGlvbiwgZXNjYXBlLCB1bmVzY2FwZSAqLwogIC8vIEZJWE1FOiB2Mi4wLjAgcmVuYW1jZSBub24tY2FtZWxDYXNlIHByb3BlcnRpZXMgdG8gdXBwZXJjYXNlCiAgLypqc2hpbnQgY2FtZWxjYXNlOiBmYWxzZSAqLwoKICAvLyBzYXZlIGN1cnJlbnQgVVJJIHZhcmlhYmxlLCBpZiBhbnkKICB2YXIgX1VSSSA9IHJvb3QgJiYgcm9vdC5VUkk7CgogIGZ1bmN0aW9uIFVSSSh1cmwsIGJhc2UpIHsKICAgIHZhciBfdXJsU3VwcGxpZWQgPSBhcmd1bWVudHMubGVuZ3RoID49IDE7CiAgICB2YXIgX2Jhc2VTdXBwbGllZCA9IGFyZ3VtZW50cy5sZW5ndGggPj0gMjsKCiAgICAvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmQKICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBVUkkpKSB7CiAgICAgIGlmIChfdXJsU3VwcGxpZWQpIHsKICAgICAgICBpZiAoX2Jhc2VTdXBwbGllZCkgewogICAgICAgICAgcmV0dXJuIG5ldyBVUkkodXJsLCBiYXNlKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBuZXcgVVJJKHVybCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBuZXcgVVJJKCk7CiAgICB9CgogICAgaWYgKHVybCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmIChfdXJsU3VwcGxpZWQpIHsKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd1bmRlZmluZWQgaXMgbm90IGEgdmFsaWQgYXJndW1lbnQgZm9yIFVSSScpOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIGxvY2F0aW9uICE9PSAndW5kZWZpbmVkJykgewogICAgICAgIHVybCA9IGxvY2F0aW9uLmhyZWYgKyAnJzsKICAgICAgfSBlbHNlIHsKICAgICAgICB1cmwgPSAnJzsKICAgICAgfQogICAgfQoKICAgIHRoaXMuaHJlZih1cmwpOwoKICAgIC8vIHJlc29sdmUgdG8gYmFzZSBhY2NvcmRpbmcgdG8gaHR0cDovL2R2Y3MudzMub3JnL2hnL3VybC9yYXctZmlsZS90aXAvT3ZlcnZpZXcuaHRtbCNjb25zdHJ1Y3RvcgogICAgaWYgKGJhc2UgIT09IHVuZGVmaW5lZCkgewogICAgICByZXR1cm4gdGhpcy5hYnNvbHV0ZVRvKGJhc2UpOwogICAgfQoKICAgIHJldHVybiB0aGlzOwogIH0KCiAgVVJJLnZlcnNpb24gPSAnMS4xOC4xJzsKCiAgdmFyIHAgPSBVUkkucHJvdG90eXBlOwogIHZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5OwoKICBmdW5jdGlvbiBlc2NhcGVSZWdFeChzdHJpbmcpIHsKICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRpYWxpemUvVVJJLmpzL2NvbW1pdC84NWFjMjE3ODNjMTFmOGNjYWIwNjEwNmRiYTk3MzVhMzFhODY5MjRkI2NvbW1pdGNvbW1lbnQtODIxOTYzCiAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoLyhbLiorP149IToke30oKXxbXF1cL1xcXSkvZywgJ1xcJDEnKTsKICB9CgogIGZ1bmN0aW9uIGdldFR5cGUodmFsdWUpIHsKICAgIC8vIElFOCBkb2Vzbid0IHJldHVybiBbT2JqZWN0IFVuZGVmaW5lZF0gYnV0IFtPYmplY3QgT2JqZWN0XSBmb3IgdW5kZWZpbmVkIHZhbHVlCiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgewogICAgICByZXR1cm4gJ1VuZGVmaW5lZCc7CiAgICB9CgogICAgcmV0dXJuIFN0cmluZyhPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpKS5zbGljZSg4LCAtMSk7CiAgfQoKICBmdW5jdGlvbiBpc0FycmF5KG9iaikgewogICAgcmV0dXJuIGdldFR5cGUob2JqKSA9PT0gJ0FycmF5JzsKICB9CgogIGZ1bmN0aW9uIGZpbHRlckFycmF5VmFsdWVzKGRhdGEsIHZhbHVlKSB7CiAgICB2YXIgbG9va3VwID0ge307CiAgICB2YXIgaSwgbGVuZ3RoOwoKICAgIGlmIChnZXRUeXBlKHZhbHVlKSA9PT0gJ1JlZ0V4cCcpIHsKICAgICAgbG9va3VwID0gbnVsbDsKICAgIH0gZWxzZSBpZiAoaXNBcnJheSh2YWx1ZSkpIHsKICAgICAgZm9yIChpID0gMCwgbGVuZ3RoID0gdmFsdWUubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICBsb29rdXBbdmFsdWVbaV1dID0gdHJ1ZTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgbG9va3VwW3ZhbHVlXSA9IHRydWU7CiAgICB9CgogICAgZm9yIChpID0gMCwgbGVuZ3RoID0gZGF0YS5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAvKmpzaGludCBsYXhicmVhazogdHJ1ZSAqLwogICAgICB2YXIgX21hdGNoID0gbG9va3VwICYmIGxvb2t1cFtkYXRhW2ldXSAhPT0gdW5kZWZpbmVkCiAgICAgICAgfHwgIWxvb2t1cCAmJiB2YWx1ZS50ZXN0KGRhdGFbaV0pOwogICAgICAvKmpzaGludCBsYXhicmVhazogZmFsc2UgKi8KICAgICAgaWYgKF9tYXRjaCkgewogICAgICAgIGRhdGEuc3BsaWNlKGksIDEpOwogICAgICAgIGxlbmd0aC0tOwogICAgICAgIGktLTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBkYXRhOwogIH0KCiAgZnVuY3Rpb24gYXJyYXlDb250YWlucyhsaXN0LCB2YWx1ZSkgewogICAgdmFyIGksIGxlbmd0aDsKCiAgICAvLyB2YWx1ZSBtYXkgYmUgc3RyaW5nLCBudW1iZXIsIGFycmF5LCByZWdleHAKICAgIGlmIChpc0FycmF5KHZhbHVlKSkgewogICAgICAvLyBOb3RlOiB0aGlzIGNhbiBiZSBvcHRpbWl6ZWQgdG8gTyhuKSAoaW5zdGVhZCBvZiBjdXJyZW50IE8obSAqIG4pKQogICAgICBmb3IgKGkgPSAwLCBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIGlmICghYXJyYXlDb250YWlucyhsaXN0LCB2YWx1ZVtpXSkpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIHZhciBfdHlwZSA9IGdldFR5cGUodmFsdWUpOwogICAgZm9yIChpID0gMCwgbGVuZ3RoID0gbGlzdC5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICBpZiAoX3R5cGUgPT09ICdSZWdFeHAnKSB7CiAgICAgICAgaWYgKHR5cGVvZiBsaXN0W2ldID09PSAnc3RyaW5nJyAmJiBsaXN0W2ldLm1hdGNoKHZhbHVlKSkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKGxpc3RbaV0gPT09IHZhbHVlKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBmdW5jdGlvbiBhcnJheXNFcXVhbChvbmUsIHR3bykgewogICAgaWYgKCFpc0FycmF5KG9uZSkgfHwgIWlzQXJyYXkodHdvKSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgLy8gYXJyYXlzIGNhbid0IGJlIGVxdWFsIGlmIHRoZXkgaGF2ZSBkaWZmZXJlbnQgYW1vdW50IG9mIGNvbnRlbnQKICAgIGlmIChvbmUubGVuZ3RoICE9PSB0d28ubGVuZ3RoKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBvbmUuc29ydCgpOwogICAgdHdvLnNvcnQoKTsKCiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9uZS5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgaWYgKG9uZVtpXSAhPT0gdHdvW2ldKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRydWU7CiAgfQoKICBmdW5jdGlvbiB0cmltU2xhc2hlcyh0ZXh0KSB7CiAgICB2YXIgdHJpbV9leHByZXNzaW9uID0gL15cLyt8XC8rJC9nOwogICAgcmV0dXJuIHRleHQucmVwbGFjZSh0cmltX2V4cHJlc3Npb24sICcnKTsKICB9CgogIFVSSS5fcGFydHMgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiB7CiAgICAgIHByb3RvY29sOiBudWxsLAogICAgICB1c2VybmFtZTogbnVsbCwKICAgICAgcGFzc3dvcmQ6IG51bGwsCiAgICAgIGhvc3RuYW1lOiBudWxsLAogICAgICB1cm46IG51bGwsCiAgICAgIHBvcnQ6IG51bGwsCiAgICAgIHBhdGg6IG51bGwsCiAgICAgIHF1ZXJ5OiBudWxsLAogICAgICBmcmFnbWVudDogbnVsbCwKICAgICAgLy8gc3RhdGUKICAgICAgZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzOiBVUkkuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLAogICAgICBlc2NhcGVRdWVyeVNwYWNlOiBVUkkuZXNjYXBlUXVlcnlTcGFjZQogICAgfTsKICB9OwogIC8vIHN0YXRlOiBhbGxvdyBkdXBsaWNhdGUgcXVlcnkgcGFyYW1ldGVycyAoYT0xJmE9MSkKICBVUkkuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzID0gZmFsc2U7CiAgLy8gc3RhdGU6IHJlcGxhY2VzICsgd2l0aCAlMjAgKHNwYWNlIGluIHF1ZXJ5IHN0cmluZ3MpCiAgVVJJLmVzY2FwZVF1ZXJ5U3BhY2UgPSB0cnVlOwogIC8vIHN0YXRpYyBwcm9wZXJ0aWVzCiAgVVJJLnByb3RvY29sX2V4cHJlc3Npb24gPSAvXlthLXpdW2EtejAtOS4rLV0qJC9pOwogIFVSSS5pZG5fZXhwcmVzc2lvbiA9IC9bXmEtejAtOVwuLV0vaTsKICBVUkkucHVueWNvZGVfZXhwcmVzc2lvbiA9IC8oeG4tLSkvaTsKICAvLyB3ZWxsLCAzMzMuNDQ0LjU1NS42NjYgbWF0Y2hlcywgYnV0IGl0IHN1cmUgYWluJ3Qgbm8gSVB2NCAtIGRvIHdlIGNhcmU/CiAgVVJJLmlwNF9leHByZXNzaW9uID0gL15cZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9JC87CiAgLy8gY3JlZGl0cyB0byBSaWNoIEJyb3duCiAgLy8gc291cmNlOiBodHRwOi8vZm9ydW1zLmludGVybWFwcGVyLmNvbS92aWV3dG9waWMucGhwP3A9MTA5NiMxMDk2CiAgLy8gc3BlY2lmaWNhdGlvbjogaHR0cDovL3d3dy5pZXRmLm9yZy9yZmMvcmZjNDI5MS50eHQKICBVUkkuaXA2X2V4cHJlc3Npb24gPSAvXlxzKigoKFswLTlBLUZhLWZdezEsNH06KXs3fShbMC05QS1GYS1mXXsxLDR9fDopKXwoKFswLTlBLUZhLWZdezEsNH06KXs2fSg6WzAtOUEtRmEtZl17MSw0fXwoKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezV9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsMn0pfDooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezR9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsM30pfCgoOlswLTlBLUZhLWZdezEsNH0pPzooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSkpfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXszfSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDR9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDJ9OigoMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkoXC4oMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkpezN9KSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezJ9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsNX0pfCgoOlswLTlBLUZhLWZdezEsNH0pezAsM306KCgyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKShcLigyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKSl7M30pKXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7MX0oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSw2fSl8KCg6WzAtOUEtRmEtZl17MSw0fSl7MCw0fTooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSkpfDopKXwoOigoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDd9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDV9OigoMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkoXC4oMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkpezN9KSl8OikpKSglLispP1xzKiQvOwogIC8vIGV4cHJlc3Npb24gdXNlZCBpcyAiZ3J1YmVyIHJldmlzZWQiIChAZ3J1YmVyIHYyKSBkZXRlcm1pbmVkIHRvIGJlIHRoZQogIC8vIGJlc3Qgc29sdXRpb24gaW4gYSByZWdleC1nb2xmIHdlIGRpZCBhIGNvdXBsZSBvZiBhZ2VzIGFnbyBhdAogIC8vICogaHR0cDovL21hdGhpYXNieW5lbnMuYmUvZGVtby91cmwtcmVnZXgKICAvLyAqIGh0dHA6Ly9yb2RuZXlyZWhtLmRlL3QvdXJsLXJlZ2V4Lmh0bWwKICBVUkkuZmluZF91cmlfZXhwcmVzc2lvbiA9IC9cYigoPzpbYS16XVtcdy1dKzooPzpcL3sxLDN9fFthLXowLTklXSl8d3d3XGR7MCwzfVsuXXxbYS16MC05LlwtXStbLl1bYS16XXsyLDR9XC8pKD86W15ccygpPD5dK3xcKChbXlxzKCk8Pl0rfChcKFteXHMoKTw+XStcKSkpKlwpKSsoPzpcKChbXlxzKCk8Pl0rfChcKFteXHMoKTw+XStcKSkpKlwpfFteXHNgISgpXFtcXXt9OzonIi4sPD4/wqvCu+KAnOKAneKAmOKAmV0pKS9pZzsKICBVUkkuZmluZFVyaSA9IHsKICAgIC8vIHZhbGlkICJzY2hlbWU6Ly8iIG9yICJ3d3cuIgogICAgc3RhcnQ6IC9cYig/OihbYS16XVthLXowLTkuKy1dKjpcL1wvKXx3d3dcLikvZ2ksCiAgICAvLyBldmVyeXRoaW5nIHVwIHRvIHRoZSBuZXh0IHdoaXRlc3BhY2UKICAgIGVuZDogL1tcc1xyXG5dfCQvLAogICAgLy8gdHJpbSB0cmFpbGluZyBwdW5jdHVhdGlvbiBjYXB0dXJlZCBieSBlbmQgUmVnRXhwCiAgICB0cmltOiAvW2AhKClcW1xde307OiciLiw8Pj/Cq8K74oCc4oCd4oCe4oCY4oCZXSskLwogIH07CiAgLy8gaHR0cDovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy91cmktc2NoZW1lcy5odG1sCiAgLy8gaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9MaXN0X29mX1RDUF9hbmRfVURQX3BvcnRfbnVtYmVycyNXZWxsLWtub3duX3BvcnRzCiAgVVJJLmRlZmF1bHRQb3J0cyA9IHsKICAgIGh0dHA6ICc4MCcsCiAgICBodHRwczogJzQ0MycsCiAgICBmdHA6ICcyMScsCiAgICBnb3BoZXI6ICc3MCcsCiAgICB3czogJzgwJywKICAgIHdzczogJzQ0MycKICB9OwogIC8vIGFsbG93ZWQgaG9zdG5hbWUgY2hhcmFjdGVycyBhY2NvcmRpbmcgdG8gUkZDIDM5ODYKICAvLyBBTFBIQSBESUdJVCAiLSIgIi4iICJfIiAifiIgIiEiICIkIiAiJiIgIiciICIoIiAiKSIgIioiICIrIiAiLCIgIjsiICI9IiAlZW5jb2RlZAogIC8vIEkndmUgbmV2ZXIgc2VlbiBhIChub24tSUROKSBob3N0bmFtZSBvdGhlciB0aGFuOiBBTFBIQSBESUdJVCAuIC0KICBVUkkuaW52YWxpZF9ob3N0bmFtZV9jaGFyYWN0ZXJzID0gL1teYS16QS1aMC05XC4tXS87CiAgLy8gbWFwIERPTSBFbGVtZW50cyB0byB0aGVpciBVUkkgYXR0cmlidXRlCiAgVVJJLmRvbUF0dHJpYnV0ZXMgPSB7CiAgICAnYSc6ICdocmVmJywKICAgICdibG9ja3F1b3RlJzogJ2NpdGUnLAogICAgJ2xpbmsnOiAnaHJlZicsCiAgICAnYmFzZSc6ICdocmVmJywKICAgICdzY3JpcHQnOiAnc3JjJywKICAgICdmb3JtJzogJ2FjdGlvbicsCiAgICAnaW1nJzogJ3NyYycsCiAgICAnYXJlYSc6ICdocmVmJywKICAgICdpZnJhbWUnOiAnc3JjJywKICAgICdlbWJlZCc6ICdzcmMnLAogICAgJ3NvdXJjZSc6ICdzcmMnLAogICAgJ3RyYWNrJzogJ3NyYycsCiAgICAnaW5wdXQnOiAnc3JjJywgLy8gYnV0IG9ubHkgaWYgdHlwZT0iaW1hZ2UiCiAgICAnYXVkaW8nOiAnc3JjJywKICAgICd2aWRlbyc6ICdzcmMnCiAgfTsKICBVUkkuZ2V0RG9tQXR0cmlidXRlID0gZnVuY3Rpb24obm9kZSkgewogICAgaWYgKCFub2RlIHx8ICFub2RlLm5vZGVOYW1lKSB7CiAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICB9CgogICAgdmFyIG5vZGVOYW1lID0gbm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwogICAgLy8gPGlucHV0PiBzaG91bGQgb25seSBleHBvc2Ugc3JjIGZvciB0eXBlPSJpbWFnZSIKICAgIGlmIChub2RlTmFtZSA9PT0gJ2lucHV0JyAmJiBub2RlLnR5cGUgIT09ICdpbWFnZScpIHsKICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgIH0KCiAgICByZXR1cm4gVVJJLmRvbUF0dHJpYnV0ZXNbbm9kZU5hbWVdOwogIH07CgogIGZ1bmN0aW9uIGVzY2FwZUZvckR1bWJGaXJlZm94MzYodmFsdWUpIHsKICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRpYWxpemUvVVJJLmpzL2lzc3Vlcy85MQogICAgcmV0dXJuIGVzY2FwZSh2YWx1ZSk7CiAgfQoKICAvLyBlbmNvZGluZyAvIGRlY29kaW5nIGFjY29yZGluZyB0byBSRkMzOTg2CiAgZnVuY3Rpb24gc3RyaWN0RW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZykgewogICAgLy8gc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvZW5jb2RlVVJJQ29tcG9uZW50CiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZykKICAgICAgLnJlcGxhY2UoL1shJygpKl0vZywgZXNjYXBlRm9yRHVtYkZpcmVmb3gzNikKICAgICAgLnJlcGxhY2UoL1wqL2csICclMkEnKTsKICB9CiAgVVJJLmVuY29kZSA9IHN0cmljdEVuY29kZVVSSUNvbXBvbmVudDsKICBVUkkuZGVjb2RlID0gZGVjb2RlVVJJQ29tcG9uZW50OwogIFVSSS5pc284ODU5ID0gZnVuY3Rpb24oKSB7CiAgICBVUkkuZW5jb2RlID0gZXNjYXBlOwogICAgVVJJLmRlY29kZSA9IHVuZXNjYXBlOwogIH07CiAgVVJJLnVuaWNvZGUgPSBmdW5jdGlvbigpIHsKICAgIFVSSS5lbmNvZGUgPSBzdHJpY3RFbmNvZGVVUklDb21wb25lbnQ7CiAgICBVUkkuZGVjb2RlID0gZGVjb2RlVVJJQ29tcG9uZW50OwogIH07CiAgVVJJLmNoYXJhY3RlcnMgPSB7CiAgICBwYXRobmFtZTogewogICAgICBlbmNvZGU6IHsKICAgICAgICAvLyBSRkMzOTg2IDIuMTogRm9yIGNvbnNpc3RlbmN5LCBVUkkgcHJvZHVjZXJzIGFuZCBub3JtYWxpemVycyBzaG91bGQKICAgICAgICAvLyB1c2UgdXBwZXJjYXNlIGhleGFkZWNpbWFsIGRpZ2l0cyBmb3IgYWxsIHBlcmNlbnQtZW5jb2RpbmdzLgogICAgICAgIGV4cHJlc3Npb246IC8lKDI0fDI2fDJCfDJDfDNCfDNEfDNBfDQwKS9pZywKICAgICAgICBtYXA6IHsKICAgICAgICAgIC8vIC0uX34hJygpKgogICAgICAgICAgJyUyNCc6ICckJywKICAgICAgICAgICclMjYnOiAnJicsCiAgICAgICAgICAnJTJCJzogJysnLAogICAgICAgICAgJyUyQyc6ICcsJywKICAgICAgICAgICclM0InOiAnOycsCiAgICAgICAgICAnJTNEJzogJz0nLAogICAgICAgICAgJyUzQSc6ICc6JywKICAgICAgICAgICclNDAnOiAnQCcKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRlY29kZTogewogICAgICAgIGV4cHJlc3Npb246IC9bXC9cPyNdL2csCiAgICAgICAgbWFwOiB7CiAgICAgICAgICAnLyc6ICclMkYnLAogICAgICAgICAgJz8nOiAnJTNGJywKICAgICAgICAgICcjJzogJyUyMycKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICByZXNlcnZlZDogewogICAgICBlbmNvZGU6IHsKICAgICAgICAvLyBSRkMzOTg2IDIuMTogRm9yIGNvbnNpc3RlbmN5LCBVUkkgcHJvZHVjZXJzIGFuZCBub3JtYWxpemVycyBzaG91bGQKICAgICAgICAvLyB1c2UgdXBwZXJjYXNlIGhleGFkZWNpbWFsIGRpZ2l0cyBmb3IgYWxsIHBlcmNlbnQtZW5jb2RpbmdzLgogICAgICAgIGV4cHJlc3Npb246IC8lKDIxfDIzfDI0fDI2fDI3fDI4fDI5fDJBfDJCfDJDfDJGfDNBfDNCfDNEfDNGfDQwfDVCfDVEKS9pZywKICAgICAgICBtYXA6IHsKICAgICAgICAgIC8vIGdlbi1kZWxpbXMKICAgICAgICAgICclM0EnOiAnOicsCiAgICAgICAgICAnJTJGJzogJy8nLAogICAgICAgICAgJyUzRic6ICc/JywKICAgICAgICAgICclMjMnOiAnIycsCiAgICAgICAgICAnJTVCJzogJ1snLAogICAgICAgICAgJyU1RCc6ICddJywKICAgICAgICAgICclNDAnOiAnQCcsCiAgICAgICAgICAvLyBzdWItZGVsaW1zCiAgICAgICAgICAnJTIxJzogJyEnLAogICAgICAgICAgJyUyNCc6ICckJywKICAgICAgICAgICclMjYnOiAnJicsCiAgICAgICAgICAnJTI3JzogJ1wnJywKICAgICAgICAgICclMjgnOiAnKCcsCiAgICAgICAgICAnJTI5JzogJyknLAogICAgICAgICAgJyUyQSc6ICcqJywKICAgICAgICAgICclMkInOiAnKycsCiAgICAgICAgICAnJTJDJzogJywnLAogICAgICAgICAgJyUzQic6ICc7JywKICAgICAgICAgICclM0QnOiAnPScKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB1cm5wYXRoOiB7CiAgICAgIC8vIFRoZSBjaGFyYWN0ZXJzIHVuZGVyIGBlbmNvZGVgIGFyZSB0aGUgY2hhcmFjdGVycyBjYWxsZWQgb3V0IGJ5IFJGQyAyMTQxIGFzIGJlaW5nIGFjY2VwdGFibGUKICAgICAgLy8gZm9yIHVzYWdlIGluIGEgVVJOLiBSRkMyMTQxIGFsc28gY2FsbHMgb3V0ICItIiwgIi4iLCBhbmQgIl8iIGFzIGFjY2VwdGFibGUgY2hhcmFjdGVycywgYnV0CiAgICAgIC8vIHRoZXNlIGFyZW4ndCBlbmNvZGVkIGJ5IGVuY29kZVVSSUNvbXBvbmVudCwgc28gd2UgZG9uJ3QgaGF2ZSB0byBjYWxsIHRoZW0gb3V0IGhlcmUuIEFsc28KICAgICAgLy8gbm90ZSB0aGF0IHRoZSBjb2xvbiBjaGFyYWN0ZXIgaXMgbm90IGZlYXR1cmVkIGluIHRoZSBlbmNvZGluZyBtYXA7IHRoaXMgaXMgYmVjYXVzZSBVUkkuanMKICAgICAgLy8gZ2l2ZXMgdGhlIGNvbG9ucyBpbiBVUk5zIHNlbWFudGljIG1lYW5pbmcgYXMgdGhlIGRlbGltaXRlcnMgb2YgcGF0aCBzZWdlbWVudHMsIGFuZCBzbyBpdAogICAgICAvLyBzaG91bGQgbm90IGFwcGVhciB1bmVuY29kZWQgaW4gYSBzZWdtZW50IGl0c2VsZi4KICAgICAgLy8gU2VlIGFsc28gdGhlIG5vdGUgYWJvdmUgYWJvdXQgUkZDMzk4NiBhbmQgY2FwaXRhbGFsaXplZCBoZXggZGlnaXRzLgogICAgICBlbmNvZGU6IHsKICAgICAgICBleHByZXNzaW9uOiAvJSgyMXwyNHwyN3wyOHwyOXwyQXwyQnwyQ3wzQnwzRHw0MCkvaWcsCiAgICAgICAgbWFwOiB7CiAgICAgICAgICAnJTIxJzogJyEnLAogICAgICAgICAgJyUyNCc6ICckJywKICAgICAgICAgICclMjcnOiAnXCcnLAogICAgICAgICAgJyUyOCc6ICcoJywKICAgICAgICAgICclMjknOiAnKScsCiAgICAgICAgICAnJTJBJzogJyonLAogICAgICAgICAgJyUyQic6ICcrJywKICAgICAgICAgICclMkMnOiAnLCcsCiAgICAgICAgICAnJTNCJzogJzsnLAogICAgICAgICAgJyUzRCc6ICc9JywKICAgICAgICAgICclNDAnOiAnQCcKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIFRoZXNlIGNoYXJhY3RlcnMgYXJlIHRoZSBjaGFyYWN0ZXJzIGNhbGxlZCBvdXQgYnkgUkZDMjE0MSBhcyAicmVzZXJ2ZWQiIGNoYXJhY3RlcnMgdGhhdAogICAgICAvLyBzaG91bGQgbmV2ZXIgYXBwZWFyIGluIGEgVVJOLCBwbHVzIHRoZSBjb2xvbiBjaGFyYWN0ZXIgKHNlZSBub3RlIGFib3ZlKS4KICAgICAgZGVjb2RlOiB7CiAgICAgICAgZXhwcmVzc2lvbjogL1tcL1w/IzpdL2csCiAgICAgICAgbWFwOiB7CiAgICAgICAgICAnLyc6ICclMkYnLAogICAgICAgICAgJz8nOiAnJTNGJywKICAgICAgICAgICcjJzogJyUyMycsCiAgICAgICAgICAnOic6ICclM0EnCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfTsKICBVUkkuZW5jb2RlUXVlcnkgPSBmdW5jdGlvbihzdHJpbmcsIGVzY2FwZVF1ZXJ5U3BhY2UpIHsKICAgIHZhciBlc2NhcGVkID0gVVJJLmVuY29kZShzdHJpbmcgKyAnJyk7CiAgICBpZiAoZXNjYXBlUXVlcnlTcGFjZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGVzY2FwZVF1ZXJ5U3BhY2UgPSBVUkkuZXNjYXBlUXVlcnlTcGFjZTsKICAgIH0KCiAgICByZXR1cm4gZXNjYXBlUXVlcnlTcGFjZSA/IGVzY2FwZWQucmVwbGFjZSgvJTIwL2csICcrJykgOiBlc2NhcGVkOwogIH07CiAgVVJJLmRlY29kZVF1ZXJ5ID0gZnVuY3Rpb24oc3RyaW5nLCBlc2NhcGVRdWVyeVNwYWNlKSB7CiAgICBzdHJpbmcgKz0gJyc7CiAgICBpZiAoZXNjYXBlUXVlcnlTcGFjZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGVzY2FwZVF1ZXJ5U3BhY2UgPSBVUkkuZXNjYXBlUXVlcnlTcGFjZTsKICAgIH0KCiAgICB0cnkgewogICAgICByZXR1cm4gVVJJLmRlY29kZShlc2NhcGVRdWVyeVNwYWNlID8gc3RyaW5nLnJlcGxhY2UoL1wrL2csICclMjAnKSA6IHN0cmluZyk7CiAgICB9IGNhdGNoKGUpIHsKICAgICAgLy8gd2UncmUgbm90IGdvaW5nIHRvIG1lc3Mgd2l0aCB3ZWlyZCBlbmNvZGluZ3MsCiAgICAgIC8vIGdpdmUgdXAgYW5kIHJldHVybiB0aGUgdW5kZWNvZGVkIG9yaWdpbmFsIHN0cmluZwogICAgICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21lZGlhbGl6ZS9VUkkuanMvaXNzdWVzLzg3CiAgICAgIC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWVkaWFsaXplL1VSSS5qcy9pc3N1ZXMvOTIKICAgICAgcmV0dXJuIHN0cmluZzsKICAgIH0KICB9OwogIC8vIGdlbmVyYXRlIGVuY29kZS9kZWNvZGUgcGF0aCBmdW5jdGlvbnMKICB2YXIgX3BhcnRzID0geydlbmNvZGUnOidlbmNvZGUnLCAnZGVjb2RlJzonZGVjb2RlJ307CiAgdmFyIF9wYXJ0OwogIHZhciBnZW5lcmF0ZUFjY2Vzc29yID0gZnVuY3Rpb24oX2dyb3VwLCBfcGFydCkgewogICAgcmV0dXJuIGZ1bmN0aW9uKHN0cmluZykgewogICAgICB0cnkgewogICAgICAgIHJldHVybiBVUklbX3BhcnRdKHN0cmluZyArICcnKS5yZXBsYWNlKFVSSS5jaGFyYWN0ZXJzW19ncm91cF1bX3BhcnRdLmV4cHJlc3Npb24sIGZ1bmN0aW9uKGMpIHsKICAgICAgICAgIHJldHVybiBVUkkuY2hhcmFjdGVyc1tfZ3JvdXBdW19wYXJ0XS5tYXBbY107CiAgICAgICAgfSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAvLyB3ZSdyZSBub3QgZ29pbmcgdG8gbWVzcyB3aXRoIHdlaXJkIGVuY29kaW5ncywKICAgICAgICAvLyBnaXZlIHVwIGFuZCByZXR1cm4gdGhlIHVuZGVjb2RlZCBvcmlnaW5hbCBzdHJpbmcKICAgICAgICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21lZGlhbGl6ZS9VUkkuanMvaXNzdWVzLzg3CiAgICAgICAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRpYWxpemUvVVJJLmpzL2lzc3Vlcy85MgogICAgICAgIHJldHVybiBzdHJpbmc7CiAgICAgIH0KICAgIH07CiAgfTsKCiAgZm9yIChfcGFydCBpbiBfcGFydHMpIHsKICAgIFVSSVtfcGFydCArICdQYXRoU2VnbWVudCddID0gZ2VuZXJhdGVBY2Nlc3NvcigncGF0aG5hbWUnLCBfcGFydHNbX3BhcnRdKTsKICAgIFVSSVtfcGFydCArICdVcm5QYXRoU2VnbWVudCddID0gZ2VuZXJhdGVBY2Nlc3NvcigndXJucGF0aCcsIF9wYXJ0c1tfcGFydF0pOwogIH0KCiAgdmFyIGdlbmVyYXRlU2VnbWVudGVkUGF0aEZ1bmN0aW9uID0gZnVuY3Rpb24oX3NlcCwgX2NvZGluZ0Z1bmNOYW1lLCBfaW5uZXJDb2RpbmdGdW5jTmFtZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uKHN0cmluZykgewogICAgICAvLyBXaHkgcGFzcyBpbiBuYW1lcyBvZiBmdW5jdGlvbnMsIHJhdGhlciB0aGFuIHRoZSBmdW5jdGlvbiBvYmplY3RzIHRoZW1zZWx2ZXM/IFRoZQogICAgICAvLyBkZWZpbml0aW9ucyBvZiBzb21lIGZ1bmN0aW9ucyAoYnV0IGluIHBhcnRpY3VsYXIsIFVSSS5kZWNvZGUpIHdpbGwgb2NjYXNpb25hbGx5IGNoYW5nZSBkdWUKICAgICAgLy8gdG8gVVJJLmpzIGhhdmluZyBJU084ODU5IGFuZCBVbmljb2RlIG1vZGVzLiBQYXNzaW5nIGluIHRoZSBuYW1lIGFuZCBnZXR0aW5nIGl0IHdpbGwgZW5zdXJlCiAgICAgIC8vIHRoYXQgdGhlIGZ1bmN0aW9ucyB3ZSB1c2UgaGVyZSBhcmUgImZyZXNoIi4KICAgICAgdmFyIGFjdHVhbENvZGluZ0Z1bmM7CiAgICAgIGlmICghX2lubmVyQ29kaW5nRnVuY05hbWUpIHsKICAgICAgICBhY3R1YWxDb2RpbmdGdW5jID0gVVJJW19jb2RpbmdGdW5jTmFtZV07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYWN0dWFsQ29kaW5nRnVuYyA9IGZ1bmN0aW9uKHN0cmluZykgewogICAgICAgICAgcmV0dXJuIFVSSVtfY29kaW5nRnVuY05hbWVdKFVSSVtfaW5uZXJDb2RpbmdGdW5jTmFtZV0oc3RyaW5nKSk7CiAgICAgICAgfTsKICAgICAgfQoKICAgICAgdmFyIHNlZ21lbnRzID0gKHN0cmluZyArICcnKS5zcGxpdChfc2VwKTsKCiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBzZWdtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIHNlZ21lbnRzW2ldID0gYWN0dWFsQ29kaW5nRnVuYyhzZWdtZW50c1tpXSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzZWdtZW50cy5qb2luKF9zZXApOwogICAgfTsKICB9OwoKICAvLyBUaGlzIHRha2VzIHBsYWNlIG91dHNpZGUgdGhlIGFib3ZlIGxvb3AgYmVjYXVzZSB3ZSBkb24ndCB3YW50LCBlLmcuLCBlbmNvZGVVcm5QYXRoIGZ1bmN0aW9ucy4KICBVUkkuZGVjb2RlUGF0aCA9IGdlbmVyYXRlU2VnbWVudGVkUGF0aEZ1bmN0aW9uKCcvJywgJ2RlY29kZVBhdGhTZWdtZW50Jyk7CiAgVVJJLmRlY29kZVVyblBhdGggPSBnZW5lcmF0ZVNlZ21lbnRlZFBhdGhGdW5jdGlvbignOicsICdkZWNvZGVVcm5QYXRoU2VnbWVudCcpOwogIFVSSS5yZWNvZGVQYXRoID0gZ2VuZXJhdGVTZWdtZW50ZWRQYXRoRnVuY3Rpb24oJy8nLCAnZW5jb2RlUGF0aFNlZ21lbnQnLCAnZGVjb2RlJyk7CiAgVVJJLnJlY29kZVVyblBhdGggPSBnZW5lcmF0ZVNlZ21lbnRlZFBhdGhGdW5jdGlvbignOicsICdlbmNvZGVVcm5QYXRoU2VnbWVudCcsICdkZWNvZGUnKTsKCiAgVVJJLmVuY29kZVJlc2VydmVkID0gZ2VuZXJhdGVBY2Nlc3NvcigncmVzZXJ2ZWQnLCAnZW5jb2RlJyk7CgogIFVSSS5wYXJzZSA9IGZ1bmN0aW9uKHN0cmluZywgcGFydHMpIHsKICAgIHZhciBwb3M7CiAgICBpZiAoIXBhcnRzKSB7CiAgICAgIHBhcnRzID0ge307CiAgICB9CiAgICAvLyBbcHJvdG9jb2wiOi8vIlt1c2VybmFtZVsiOiJwYXNzd29yZF0iQCJdaG9zdG5hbWVbIjoicG9ydF0iLyI/XVtwYXRoXVsiPyJxdWVyeXN0cmluZ11bIiMiZnJhZ21lbnRdCgogICAgLy8gZXh0cmFjdCBmcmFnbWVudAogICAgcG9zID0gc3RyaW5nLmluZGV4T2YoJyMnKTsKICAgIGlmIChwb3MgPiAtMSkgewogICAgICAvLyBlc2NhcGluZz8KICAgICAgcGFydHMuZnJhZ21lbnQgPSBzdHJpbmcuc3Vic3RyaW5nKHBvcyArIDEpIHx8IG51bGw7CiAgICAgIHN0cmluZyA9IHN0cmluZy5zdWJzdHJpbmcoMCwgcG9zKTsKICAgIH0KCiAgICAvLyBleHRyYWN0IHF1ZXJ5CiAgICBwb3MgPSBzdHJpbmcuaW5kZXhPZignPycpOwogICAgaWYgKHBvcyA+IC0xKSB7CiAgICAgIC8vIGVzY2FwaW5nPwogICAgICBwYXJ0cy5xdWVyeSA9IHN0cmluZy5zdWJzdHJpbmcocG9zICsgMSkgfHwgbnVsbDsKICAgICAgc3RyaW5nID0gc3RyaW5nLnN1YnN0cmluZygwLCBwb3MpOwogICAgfQoKICAgIC8vIGV4dHJhY3QgcHJvdG9jb2wKICAgIGlmIChzdHJpbmcuc3Vic3RyaW5nKDAsIDIpID09PSAnLy8nKSB7CiAgICAgIC8vIHJlbGF0aXZlLXNjaGVtZQogICAgICBwYXJ0cy5wcm90b2NvbCA9IG51bGw7CiAgICAgIHN0cmluZyA9IHN0cmluZy5zdWJzdHJpbmcoMik7CiAgICAgIC8vIGV4dHJhY3QgInVzZXI6cGFzc0Bob3N0OnBvcnQiCiAgICAgIHN0cmluZyA9IFVSSS5wYXJzZUF1dGhvcml0eShzdHJpbmcsIHBhcnRzKTsKICAgIH0gZWxzZSB7CiAgICAgIHBvcyA9IHN0cmluZy5pbmRleE9mKCc6Jyk7CiAgICAgIGlmIChwb3MgPiAtMSkgewogICAgICAgIHBhcnRzLnByb3RvY29sID0gc3RyaW5nLnN1YnN0cmluZygwLCBwb3MpIHx8IG51bGw7CiAgICAgICAgaWYgKHBhcnRzLnByb3RvY29sICYmICFwYXJ0cy5wcm90b2NvbC5tYXRjaChVUkkucHJvdG9jb2xfZXhwcmVzc2lvbikpIHsKICAgICAgICAgIC8vIDogbWF5IGJlIHdpdGhpbiB0aGUgcGF0aAogICAgICAgICAgcGFydHMucHJvdG9jb2wgPSB1bmRlZmluZWQ7CiAgICAgICAgfSBlbHNlIGlmIChzdHJpbmcuc3Vic3RyaW5nKHBvcyArIDEsIHBvcyArIDMpID09PSAnLy8nKSB7CiAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcuc3Vic3RyaW5nKHBvcyArIDMpOwoKICAgICAgICAgIC8vIGV4dHJhY3QgInVzZXI6cGFzc0Bob3N0OnBvcnQiCiAgICAgICAgICBzdHJpbmcgPSBVUkkucGFyc2VBdXRob3JpdHkoc3RyaW5nLCBwYXJ0cyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHN0cmluZyA9IHN0cmluZy5zdWJzdHJpbmcocG9zICsgMSk7CiAgICAgICAgICBwYXJ0cy51cm4gPSB0cnVlOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIC8vIHdoYXQncyBsZWZ0IG11c3QgYmUgdGhlIHBhdGgKICAgIHBhcnRzLnBhdGggPSBzdHJpbmc7CgogICAgLy8gYW5kIHdlJ3JlIGRvbmUKICAgIHJldHVybiBwYXJ0czsKICB9OwogIFVSSS5wYXJzZUhvc3QgPSBmdW5jdGlvbihzdHJpbmcsIHBhcnRzKSB7CiAgICAvLyBDb3B5IGNocm9tZSwgSUUsIG9wZXJhIGJhY2tzbGFzaC1oYW5kbGluZyBiZWhhdmlvci4KICAgIC8vIEJhY2sgc2xhc2hlcyBiZWZvcmUgdGhlIHF1ZXJ5IHN0cmluZyBnZXQgY29udmVydGVkIHRvIGZvcndhcmQgc2xhc2hlcwogICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vam95ZW50L25vZGUvYmxvYi8zODZmZDI0ZjQ5YjBlOWQxYThhMDc2NTkyYTQwNDE2OGZhZWVjYzM0L2xpYi91cmwuanMjTDExNS1MMTI0CiAgICAvLyBTZWU6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0yNTkxNgogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21lZGlhbGl6ZS9VUkkuanMvcHVsbC8yMzMKICAgIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKC9cXC9nLCAnLycpOwoKICAgIC8vIGV4dHJhY3QgaG9zdDpwb3J0CiAgICB2YXIgcG9zID0gc3RyaW5nLmluZGV4T2YoJy8nKTsKICAgIHZhciBicmFja2V0UG9zOwogICAgdmFyIHQ7CgogICAgaWYgKHBvcyA9PT0gLTEpIHsKICAgICAgcG9zID0gc3RyaW5nLmxlbmd0aDsKICAgIH0KCiAgICBpZiAoc3RyaW5nLmNoYXJBdCgwKSA9PT0gJ1snKSB7CiAgICAgIC8vIElQdjYgaG9zdCAtIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWlldGYtNm1hbi10ZXh0LWFkZHItcmVwcmVzZW50YXRpb24tMDQjc2VjdGlvbi02CiAgICAgIC8vIEkgY2xhaW0gbW9zdCBjbGllbnQgc29mdHdhcmUgYnJlYWtzIG9uIElQdjYgYW55d2F5cy4gVG8gc2ltcGxpZnkgdGhpbmdzLCBVUkkgb25seSBhY2NlcHRzCiAgICAgIC8vIElQdjYrcG9ydCBpbiB0aGUgZm9ybWF0IFsyMDAxOmRiODo6MV06ODAgKGZvciB0aGUgdGltZSBiZWluZykKICAgICAgYnJhY2tldFBvcyA9IHN0cmluZy5pbmRleE9mKCddJyk7CiAgICAgIHBhcnRzLmhvc3RuYW1lID0gc3RyaW5nLnN1YnN0cmluZygxLCBicmFja2V0UG9zKSB8fCBudWxsOwogICAgICBwYXJ0cy5wb3J0ID0gc3RyaW5nLnN1YnN0cmluZyhicmFja2V0UG9zICsgMiwgcG9zKSB8fCBudWxsOwogICAgICBpZiAocGFydHMucG9ydCA9PT0gJy8nKSB7CiAgICAgICAgcGFydHMucG9ydCA9IG51bGw7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHZhciBmaXJzdENvbG9uID0gc3RyaW5nLmluZGV4T2YoJzonKTsKICAgICAgdmFyIGZpcnN0U2xhc2ggPSBzdHJpbmcuaW5kZXhPZignLycpOwogICAgICB2YXIgbmV4dENvbG9uID0gc3RyaW5nLmluZGV4T2YoJzonLCBmaXJzdENvbG9uICsgMSk7CiAgICAgIGlmIChuZXh0Q29sb24gIT09IC0xICYmIChmaXJzdFNsYXNoID09PSAtMSB8fCBuZXh0Q29sb24gPCBmaXJzdFNsYXNoKSkgewogICAgICAgIC8vIElQdjYgaG9zdCBjb250YWlucyBtdWx0aXBsZSBjb2xvbnMgLSBidXQgbm8gcG9ydAogICAgICAgIC8vIHRoaXMgbm90YXRpb24gaXMgYWN0dWFsbHkgbm90IGFsbG93ZWQgYnkgUkZDIDM5ODYsIGJ1dCB3ZSdyZSBhIGxpYmVyYWwgcGFyc2VyCiAgICAgICAgcGFydHMuaG9zdG5hbWUgPSBzdHJpbmcuc3Vic3RyaW5nKDAsIHBvcykgfHwgbnVsbDsKICAgICAgICBwYXJ0cy5wb3J0ID0gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICB0ID0gc3RyaW5nLnN1YnN0cmluZygwLCBwb3MpLnNwbGl0KCc6Jyk7CiAgICAgICAgcGFydHMuaG9zdG5hbWUgPSB0WzBdIHx8IG51bGw7CiAgICAgICAgcGFydHMucG9ydCA9IHRbMV0gfHwgbnVsbDsKICAgICAgfQogICAgfQoKICAgIGlmIChwYXJ0cy5ob3N0bmFtZSAmJiBzdHJpbmcuc3Vic3RyaW5nKHBvcykuY2hhckF0KDApICE9PSAnLycpIHsKICAgICAgcG9zKys7CiAgICAgIHN0cmluZyA9ICcvJyArIHN0cmluZzsKICAgIH0KCiAgICByZXR1cm4gc3RyaW5nLnN1YnN0cmluZyhwb3MpIHx8ICcvJzsKICB9OwogIFVSSS5wYXJzZUF1dGhvcml0eSA9IGZ1bmN0aW9uKHN0cmluZywgcGFydHMpIHsKICAgIHN0cmluZyA9IFVSSS5wYXJzZVVzZXJpbmZvKHN0cmluZywgcGFydHMpOwogICAgcmV0dXJuIFVSSS5wYXJzZUhvc3Qoc3RyaW5nLCBwYXJ0cyk7CiAgfTsKICBVUkkucGFyc2VVc2VyaW5mbyA9IGZ1bmN0aW9uKHN0cmluZywgcGFydHMpIHsKICAgIC8vIGV4dHJhY3QgdXNlcm5hbWU6cGFzc3dvcmQKICAgIHZhciBmaXJzdFNsYXNoID0gc3RyaW5nLmluZGV4T2YoJy8nKTsKICAgIHZhciBwb3MgPSBzdHJpbmcubGFzdEluZGV4T2YoJ0AnLCBmaXJzdFNsYXNoID4gLTEgPyBmaXJzdFNsYXNoIDogc3RyaW5nLmxlbmd0aCAtIDEpOwogICAgdmFyIHQ7CgogICAgLy8gYXV0aG9yaXR5QCBtdXN0IGNvbWUgYmVmb3JlIC9wYXRoCiAgICBpZiAocG9zID4gLTEgJiYgKGZpcnN0U2xhc2ggPT09IC0xIHx8IHBvcyA8IGZpcnN0U2xhc2gpKSB7CiAgICAgIHQgPSBzdHJpbmcuc3Vic3RyaW5nKDAsIHBvcykuc3BsaXQoJzonKTsKICAgICAgcGFydHMudXNlcm5hbWUgPSB0WzBdID8gVVJJLmRlY29kZSh0WzBdKSA6IG51bGw7CiAgICAgIHQuc2hpZnQoKTsKICAgICAgcGFydHMucGFzc3dvcmQgPSB0WzBdID8gVVJJLmRlY29kZSh0LmpvaW4oJzonKSkgOiBudWxsOwogICAgICBzdHJpbmcgPSBzdHJpbmcuc3Vic3RyaW5nKHBvcyArIDEpOwogICAgfSBlbHNlIHsKICAgICAgcGFydHMudXNlcm5hbWUgPSBudWxsOwogICAgICBwYXJ0cy5wYXNzd29yZCA9IG51bGw7CiAgICB9CgogICAgcmV0dXJuIHN0cmluZzsKICB9OwogIFVSSS5wYXJzZVF1ZXJ5ID0gZnVuY3Rpb24oc3RyaW5nLCBlc2NhcGVRdWVyeVNwYWNlKSB7CiAgICBpZiAoIXN0cmluZykgewogICAgICByZXR1cm4ge307CiAgICB9CgogICAgLy8gdGhyb3cgb3V0IHRoZSBmdW5reSBidXNpbmVzcyAtICI/IltuYW1lIj0idmFsdWUiJiJdKwogICAgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UoLyYrL2csICcmJykucmVwbGFjZSgvXlw/KiYqfCYrJC9nLCAnJyk7CgogICAgaWYgKCFzdHJpbmcpIHsKICAgICAgcmV0dXJuIHt9OwogICAgfQoKICAgIHZhciBpdGVtcyA9IHt9OwogICAgdmFyIHNwbGl0cyA9IHN0cmluZy5zcGxpdCgnJicpOwogICAgdmFyIGxlbmd0aCA9IHNwbGl0cy5sZW5ndGg7CiAgICB2YXIgdiwgbmFtZSwgdmFsdWU7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICB2ID0gc3BsaXRzW2ldLnNwbGl0KCc9Jyk7CiAgICAgIG5hbWUgPSBVUkkuZGVjb2RlUXVlcnkodi5zaGlmdCgpLCBlc2NhcGVRdWVyeVNwYWNlKTsKICAgICAgLy8gbm8gIj0iIGlzIG51bGwgYWNjb3JkaW5nIHRvIGh0dHA6Ly9kdmNzLnczLm9yZy9oZy91cmwvcmF3LWZpbGUvdGlwL092ZXJ2aWV3Lmh0bWwjY29sbGVjdC11cmwtcGFyYW1ldGVycwogICAgICB2YWx1ZSA9IHYubGVuZ3RoID8gVVJJLmRlY29kZVF1ZXJ5KHYuam9pbignPScpLCBlc2NhcGVRdWVyeVNwYWNlKSA6IG51bGw7CgogICAgICBpZiAoaGFzT3duLmNhbGwoaXRlbXMsIG5hbWUpKSB7CiAgICAgICAgaWYgKHR5cGVvZiBpdGVtc1tuYW1lXSA9PT0gJ3N0cmluZycgfHwgaXRlbXNbbmFtZV0gPT09IG51bGwpIHsKICAgICAgICAgIGl0ZW1zW25hbWVdID0gW2l0ZW1zW25hbWVdXTsKICAgICAgICB9CgogICAgICAgIGl0ZW1zW25hbWVdLnB1c2godmFsdWUpOwogICAgICB9IGVsc2UgewogICAgICAgIGl0ZW1zW25hbWVdID0gdmFsdWU7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gaXRlbXM7CiAgfTsKCiAgVVJJLmJ1aWxkID0gZnVuY3Rpb24ocGFydHMpIHsKICAgIHZhciB0ID0gJyc7CgogICAgaWYgKHBhcnRzLnByb3RvY29sKSB7CiAgICAgIHQgKz0gcGFydHMucHJvdG9jb2wgKyAnOic7CiAgICB9CgogICAgaWYgKCFwYXJ0cy51cm4gJiYgKHQgfHwgcGFydHMuaG9zdG5hbWUpKSB7CiAgICAgIHQgKz0gJy8vJzsKICAgIH0KCiAgICB0ICs9IChVUkkuYnVpbGRBdXRob3JpdHkocGFydHMpIHx8ICcnKTsKCiAgICBpZiAodHlwZW9mIHBhcnRzLnBhdGggPT09ICdzdHJpbmcnKSB7CiAgICAgIGlmIChwYXJ0cy5wYXRoLmNoYXJBdCgwKSAhPT0gJy8nICYmIHR5cGVvZiBwYXJ0cy5ob3N0bmFtZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICB0ICs9ICcvJzsKICAgICAgfQoKICAgICAgdCArPSBwYXJ0cy5wYXRoOwogICAgfQoKICAgIGlmICh0eXBlb2YgcGFydHMucXVlcnkgPT09ICdzdHJpbmcnICYmIHBhcnRzLnF1ZXJ5KSB7CiAgICAgIHQgKz0gJz8nICsgcGFydHMucXVlcnk7CiAgICB9CgogICAgaWYgKHR5cGVvZiBwYXJ0cy5mcmFnbWVudCA9PT0gJ3N0cmluZycgJiYgcGFydHMuZnJhZ21lbnQpIHsKICAgICAgdCArPSAnIycgKyBwYXJ0cy5mcmFnbWVudDsKICAgIH0KICAgIHJldHVybiB0OwogIH07CiAgVVJJLmJ1aWxkSG9zdCA9IGZ1bmN0aW9uKHBhcnRzKSB7CiAgICB2YXIgdCA9ICcnOwoKICAgIGlmICghcGFydHMuaG9zdG5hbWUpIHsKICAgICAgcmV0dXJuICcnOwogICAgfSBlbHNlIGlmIChVUkkuaXA2X2V4cHJlc3Npb24udGVzdChwYXJ0cy5ob3N0bmFtZSkpIHsKICAgICAgdCArPSAnWycgKyBwYXJ0cy5ob3N0bmFtZSArICddJzsKICAgIH0gZWxzZSB7CiAgICAgIHQgKz0gcGFydHMuaG9zdG5hbWU7CiAgICB9CgogICAgaWYgKHBhcnRzLnBvcnQpIHsKICAgICAgdCArPSAnOicgKyBwYXJ0cy5wb3J0OwogICAgfQoKICAgIHJldHVybiB0OwogIH07CiAgVVJJLmJ1aWxkQXV0aG9yaXR5ID0gZnVuY3Rpb24ocGFydHMpIHsKICAgIHJldHVybiBVUkkuYnVpbGRVc2VyaW5mbyhwYXJ0cykgKyBVUkkuYnVpbGRIb3N0KHBhcnRzKTsKICB9OwogIFVSSS5idWlsZFVzZXJpbmZvID0gZnVuY3Rpb24ocGFydHMpIHsKICAgIHZhciB0ID0gJyc7CgogICAgaWYgKHBhcnRzLnVzZXJuYW1lKSB7CiAgICAgIHQgKz0gVVJJLmVuY29kZShwYXJ0cy51c2VybmFtZSk7CiAgICB9CgogICAgaWYgKHBhcnRzLnBhc3N3b3JkKSB7CiAgICAgIHQgKz0gJzonICsgVVJJLmVuY29kZShwYXJ0cy5wYXNzd29yZCk7CiAgICB9CgogICAgaWYgKHQpIHsKICAgICAgdCArPSAnQCc7CiAgICB9CgogICAgcmV0dXJuIHQ7CiAgfTsKICBVUkkuYnVpbGRRdWVyeSA9IGZ1bmN0aW9uKGRhdGEsIGR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycywgZXNjYXBlUXVlcnlTcGFjZSkgewogICAgLy8gYWNjb3JkaW5nIHRvIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM5ODYgb3IgaHR0cDovL2xhYnMuYXBhY2hlLm9yZy93ZWJhcmNoL3VyaS9yZmMvcmZjMzk4Ni5odG1sCiAgICAvLyBiZWluZyDCuy0uX34hJCYnKCkqKyw7PTpALz/CqyAlSEVYIGFuZCBhbG51bSBhcmUgYWxsb3dlZAogICAgLy8gdGhlIFJGQyBleHBsaWNpdGx5IHN0YXRlcyA/L2ZvbyBiZWluZyBhIHZhbGlkIHVzZSBjYXNlLCBubyBtZW50aW9uIG9mIHBhcmFtZXRlciBzeW50YXghCiAgICAvLyBVUkkuanMgdHJlYXRzIHRoZSBxdWVyeSBzdHJpbmcgYXMgYmVpbmcgYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkCiAgICAvLyBzZWUgaHR0cDovL3d3dy53My5vcmcvVFIvUkVDLWh0bWw0MC9pbnRlcmFjdC9mb3Jtcy5odG1sI2Zvcm0tY29udGVudC10eXBlCgogICAgdmFyIHQgPSAnJzsKICAgIHZhciB1bmlxdWUsIGtleSwgaSwgbGVuZ3RoOwogICAgZm9yIChrZXkgaW4gZGF0YSkgewogICAgICBpZiAoaGFzT3duLmNhbGwoZGF0YSwga2V5KSAmJiBrZXkpIHsKICAgICAgICBpZiAoaXNBcnJheShkYXRhW2tleV0pKSB7CiAgICAgICAgICB1bmlxdWUgPSB7fTsKICAgICAgICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IGRhdGFba2V5XS5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAoZGF0YVtrZXldW2ldICE9PSB1bmRlZmluZWQgJiYgdW5pcXVlW2RhdGFba2V5XVtpXSArICcnXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgdCArPSAnJicgKyBVUkkuYnVpbGRRdWVyeVBhcmFtZXRlcihrZXksIGRhdGFba2V5XVtpXSwgZXNjYXBlUXVlcnlTcGFjZSk7CiAgICAgICAgICAgICAgaWYgKGR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycyAhPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgdW5pcXVlW2RhdGFba2V5XVtpXSArICcnXSA9IHRydWU7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChkYXRhW2tleV0gIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgdCArPSAnJicgKyBVUkkuYnVpbGRRdWVyeVBhcmFtZXRlcihrZXksIGRhdGFba2V5XSwgZXNjYXBlUXVlcnlTcGFjZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHQuc3Vic3RyaW5nKDEpOwogIH07CiAgVVJJLmJ1aWxkUXVlcnlQYXJhbWV0ZXIgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgZXNjYXBlUXVlcnlTcGFjZSkgewogICAgLy8gaHR0cDovL3d3dy53My5vcmcvVFIvUkVDLWh0bWw0MC9pbnRlcmFjdC9mb3Jtcy5odG1sI2Zvcm0tY29udGVudC10eXBlIC0tIGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZAogICAgLy8gZG9uJ3QgYXBwZW5kICI9IiBmb3IgbnVsbCB2YWx1ZXMsIGFjY29yZGluZyB0byBodHRwOi8vZHZjcy53My5vcmcvaGcvdXJsL3Jhdy1maWxlL3RpcC9PdmVydmlldy5odG1sI3VybC1wYXJhbWV0ZXItc2VyaWFsaXphdGlvbgogICAgcmV0dXJuIFVSSS5lbmNvZGVRdWVyeShuYW1lLCBlc2NhcGVRdWVyeVNwYWNlKSArICh2YWx1ZSAhPT0gbnVsbCA/ICc9JyArIFVSSS5lbmNvZGVRdWVyeSh2YWx1ZSwgZXNjYXBlUXVlcnlTcGFjZSkgOiAnJyk7CiAgfTsKCiAgVVJJLmFkZFF1ZXJ5ID0gZnVuY3Rpb24oZGF0YSwgbmFtZSwgdmFsdWUpIHsKICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gJ29iamVjdCcpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG5hbWUpIHsKICAgICAgICBpZiAoaGFzT3duLmNhbGwobmFtZSwga2V5KSkgewogICAgICAgICAgVVJJLmFkZFF1ZXJ5KGRhdGEsIGtleSwgbmFtZVtrZXldKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZW9mIG5hbWUgPT09ICdzdHJpbmcnKSB7CiAgICAgIGlmIChkYXRhW25hbWVdID09PSB1bmRlZmluZWQpIHsKICAgICAgICBkYXRhW25hbWVdID0gdmFsdWU7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgaWYgKHR5cGVvZiBkYXRhW25hbWVdID09PSAnc3RyaW5nJykgewogICAgICAgIGRhdGFbbmFtZV0gPSBbZGF0YVtuYW1lXV07CiAgICAgIH0KCiAgICAgIGlmICghaXNBcnJheSh2YWx1ZSkpIHsKICAgICAgICB2YWx1ZSA9IFt2YWx1ZV07CiAgICAgIH0KCiAgICAgIGRhdGFbbmFtZV0gPSAoZGF0YVtuYW1lXSB8fCBbXSkuY29uY2F0KHZhbHVlKTsKICAgIH0gZWxzZSB7CiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1VSSS5hZGRRdWVyeSgpIGFjY2VwdHMgYW4gb2JqZWN0LCBzdHJpbmcgYXMgdGhlIG5hbWUgcGFyYW1ldGVyJyk7CiAgICB9CiAgfTsKICBVUkkucmVtb3ZlUXVlcnkgPSBmdW5jdGlvbihkYXRhLCBuYW1lLCB2YWx1ZSkgewogICAgdmFyIGksIGxlbmd0aCwga2V5OwoKICAgIGlmIChpc0FycmF5KG5hbWUpKSB7CiAgICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IG5hbWUubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICBkYXRhW25hbWVbaV1dID0gdW5kZWZpbmVkOwogICAgICB9CiAgICB9IGVsc2UgaWYgKGdldFR5cGUobmFtZSkgPT09ICdSZWdFeHAnKSB7CiAgICAgIGZvciAoa2V5IGluIGRhdGEpIHsKICAgICAgICBpZiAobmFtZS50ZXN0KGtleSkpIHsKICAgICAgICAgIGRhdGFba2V5XSA9IHVuZGVmaW5lZDsKICAgICAgICB9CiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZW9mIG5hbWUgPT09ICdvYmplY3QnKSB7CiAgICAgIGZvciAoa2V5IGluIG5hbWUpIHsKICAgICAgICBpZiAoaGFzT3duLmNhbGwobmFtZSwga2V5KSkgewogICAgICAgICAgVVJJLnJlbW92ZVF1ZXJ5KGRhdGEsIGtleSwgbmFtZVtrZXldKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZW9mIG5hbWUgPT09ICdzdHJpbmcnKSB7CiAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgaWYgKGdldFR5cGUodmFsdWUpID09PSAnUmVnRXhwJykgewogICAgICAgICAgaWYgKCFpc0FycmF5KGRhdGFbbmFtZV0pICYmIHZhbHVlLnRlc3QoZGF0YVtuYW1lXSkpIHsKICAgICAgICAgICAgZGF0YVtuYW1lXSA9IHVuZGVmaW5lZDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRhdGFbbmFtZV0gPSBmaWx0ZXJBcnJheVZhbHVlcyhkYXRhW25hbWVdLCB2YWx1ZSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChkYXRhW25hbWVdID09PSBTdHJpbmcodmFsdWUpICYmICghaXNBcnJheSh2YWx1ZSkgfHwgdmFsdWUubGVuZ3RoID09PSAxKSkgewogICAgICAgICAgZGF0YVtuYW1lXSA9IHVuZGVmaW5lZDsKICAgICAgICB9IGVsc2UgaWYgKGlzQXJyYXkoZGF0YVtuYW1lXSkpIHsKICAgICAgICAgIGRhdGFbbmFtZV0gPSBmaWx0ZXJBcnJheVZhbHVlcyhkYXRhW25hbWVdLCB2YWx1ZSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGRhdGFbbmFtZV0gPSB1bmRlZmluZWQ7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1VSSS5yZW1vdmVRdWVyeSgpIGFjY2VwdHMgYW4gb2JqZWN0LCBzdHJpbmcsIFJlZ0V4cCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyJyk7CiAgICB9CiAgfTsKICBVUkkuaGFzUXVlcnkgPSBmdW5jdGlvbihkYXRhLCBuYW1lLCB2YWx1ZSwgd2l0aGluQXJyYXkpIHsKICAgIHN3aXRjaCAoZ2V0VHlwZShuYW1lKSkgewogICAgICBjYXNlICdTdHJpbmcnOgogICAgICAgIC8vIE5vdGhpbmcgdG8gZG8gaGVyZQogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnUmVnRXhwJzoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgaWYgKGhhc093bi5jYWxsKGRhdGEsIGtleSkpIHsKICAgICAgICAgICAgaWYgKG5hbWUudGVzdChrZXkpICYmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IFVSSS5oYXNRdWVyeShkYXRhLCBrZXksIHZhbHVlKSkpIHsKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgY2FzZSAnT2JqZWN0JzoKICAgICAgICBmb3IgKHZhciBfa2V5IGluIG5hbWUpIHsKICAgICAgICAgIGlmIChoYXNPd24uY2FsbChuYW1lLCBfa2V5KSkgewogICAgICAgICAgICBpZiAoIVVSSS5oYXNRdWVyeShkYXRhLCBfa2V5LCBuYW1lW19rZXldKSkgewogICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CgogICAgICBkZWZhdWx0OgogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1VSSS5oYXNRdWVyeSgpIGFjY2VwdHMgYSBzdHJpbmcsIHJlZ3VsYXIgZXhwcmVzc2lvbiBvciBvYmplY3QgYXMgdGhlIG5hbWUgcGFyYW1ldGVyJyk7CiAgICB9CgogICAgc3dpdGNoIChnZXRUeXBlKHZhbHVlKSkgewogICAgICBjYXNlICdVbmRlZmluZWQnOgogICAgICAgIC8vIHRydWUgaWYgZXhpc3RzIChidXQgbWF5IGJlIGVtcHR5KQogICAgICAgIHJldHVybiBuYW1lIGluIGRhdGE7IC8vIGRhdGFbbmFtZV0gIT09IHVuZGVmaW5lZDsKCiAgICAgIGNhc2UgJ0Jvb2xlYW4nOgogICAgICAgIC8vIHRydWUgaWYgZXhpc3RzIGFuZCBub24tZW1wdHkKICAgICAgICB2YXIgX2Jvb2x5ID0gQm9vbGVhbihpc0FycmF5KGRhdGFbbmFtZV0pID8gZGF0YVtuYW1lXS5sZW5ndGggOiBkYXRhW25hbWVdKTsKICAgICAgICByZXR1cm4gdmFsdWUgPT09IF9ib29seTsKCiAgICAgIGNhc2UgJ0Z1bmN0aW9uJzoKICAgICAgICAvLyBhbGxvdyBjb21wbGV4IGNvbXBhcmlzb24KICAgICAgICByZXR1cm4gISF2YWx1ZShkYXRhW25hbWVdLCBuYW1lLCBkYXRhKTsKCiAgICAgIGNhc2UgJ0FycmF5JzoKICAgICAgICBpZiAoIWlzQXJyYXkoZGF0YVtuYW1lXSkpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIHZhciBvcCA9IHdpdGhpbkFycmF5ID8gYXJyYXlDb250YWlucyA6IGFycmF5c0VxdWFsOwogICAgICAgIHJldHVybiBvcChkYXRhW25hbWVdLCB2YWx1ZSk7CgogICAgICBjYXNlICdSZWdFeHAnOgogICAgICAgIGlmICghaXNBcnJheShkYXRhW25hbWVdKSkgewogICAgICAgICAgcmV0dXJuIEJvb2xlYW4oZGF0YVtuYW1lXSAmJiBkYXRhW25hbWVdLm1hdGNoKHZhbHVlKSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoIXdpdGhpbkFycmF5KSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gYXJyYXlDb250YWlucyhkYXRhW25hbWVdLCB2YWx1ZSk7CgogICAgICBjYXNlICdOdW1iZXInOgogICAgICAgIHZhbHVlID0gU3RyaW5nKHZhbHVlKTsKICAgICAgICAvKiBmYWxscyB0aHJvdWdoICovCiAgICAgIGNhc2UgJ1N0cmluZyc6CiAgICAgICAgaWYgKCFpc0FycmF5KGRhdGFbbmFtZV0pKSB7CiAgICAgICAgICByZXR1cm4gZGF0YVtuYW1lXSA9PT0gdmFsdWU7CiAgICAgICAgfQoKICAgICAgICBpZiAoIXdpdGhpbkFycmF5KSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gYXJyYXlDb250YWlucyhkYXRhW25hbWVdLCB2YWx1ZSk7CgogICAgICBkZWZhdWx0OgogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1VSSS5oYXNRdWVyeSgpIGFjY2VwdHMgdW5kZWZpbmVkLCBib29sZWFuLCBzdHJpbmcsIG51bWJlciwgUmVnRXhwLCBGdW5jdGlvbiBhcyB0aGUgdmFsdWUgcGFyYW1ldGVyJyk7CiAgICB9CiAgfTsKCgogIFVSSS5qb2luUGF0aHMgPSBmdW5jdGlvbigpIHsKICAgIHZhciBpbnB1dCA9IFtdOwogICAgdmFyIHNlZ21lbnRzID0gW107CiAgICB2YXIgbm9uRW1wdHlTZWdtZW50cyA9IDA7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgICAgdmFyIHVybCA9IG5ldyBVUkkoYXJndW1lbnRzW2ldKTsKICAgICAgaW5wdXQucHVzaCh1cmwpOwogICAgICB2YXIgX3NlZ21lbnRzID0gdXJsLnNlZ21lbnQoKTsKICAgICAgZm9yICh2YXIgcyA9IDA7IHMgPCBfc2VnbWVudHMubGVuZ3RoOyBzKyspIHsKICAgICAgICBpZiAodHlwZW9mIF9zZWdtZW50c1tzXSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgIHNlZ21lbnRzLnB1c2goX3NlZ21lbnRzW3NdKTsKICAgICAgICB9CgogICAgICAgIGlmIChfc2VnbWVudHNbc10pIHsKICAgICAgICAgIG5vbkVtcHR5U2VnbWVudHMrKzsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBpZiAoIXNlZ21lbnRzLmxlbmd0aCB8fCAhbm9uRW1wdHlTZWdtZW50cykgewogICAgICByZXR1cm4gbmV3IFVSSSgnJyk7CiAgICB9CgogICAgdmFyIHVyaSA9IG5ldyBVUkkoJycpLnNlZ21lbnQoc2VnbWVudHMpOwoKICAgIGlmIChpbnB1dFswXS5wYXRoKCkgPT09ICcnIHx8IGlucHV0WzBdLnBhdGgoKS5zbGljZSgwLCAxKSA9PT0gJy8nKSB7CiAgICAgIHVyaS5wYXRoKCcvJyArIHVyaS5wYXRoKCkpOwogICAgfQoKICAgIHJldHVybiB1cmkubm9ybWFsaXplKCk7CiAgfTsKCiAgVVJJLmNvbW1vblBhdGggPSBmdW5jdGlvbihvbmUsIHR3bykgewogICAgdmFyIGxlbmd0aCA9IE1hdGgubWluKG9uZS5sZW5ndGgsIHR3by5sZW5ndGgpOwogICAgdmFyIHBvczsKCiAgICAvLyBmaW5kIGZpcnN0IG5vbi1tYXRjaGluZyBjaGFyYWN0ZXIKICAgIGZvciAocG9zID0gMDsgcG9zIDwgbGVuZ3RoOyBwb3MrKykgewogICAgICBpZiAob25lLmNoYXJBdChwb3MpICE9PSB0d28uY2hhckF0KHBvcykpIHsKICAgICAgICBwb3MtLTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQoKICAgIGlmIChwb3MgPCAxKSB7CiAgICAgIHJldHVybiBvbmUuY2hhckF0KDApID09PSB0d28uY2hhckF0KDApICYmIG9uZS5jaGFyQXQoMCkgPT09ICcvJyA/ICcvJyA6ICcnOwogICAgfQoKICAgIC8vIHJldmVydCB0byBsYXN0IC8KICAgIGlmIChvbmUuY2hhckF0KHBvcykgIT09ICcvJyB8fCB0d28uY2hhckF0KHBvcykgIT09ICcvJykgewogICAgICBwb3MgPSBvbmUuc3Vic3RyaW5nKDAsIHBvcykubGFzdEluZGV4T2YoJy8nKTsKICAgIH0KCiAgICByZXR1cm4gb25lLnN1YnN0cmluZygwLCBwb3MgKyAxKTsKICB9OwoKICBVUkkud2l0aGluU3RyaW5nID0gZnVuY3Rpb24oc3RyaW5nLCBjYWxsYmFjaywgb3B0aW9ucykgewogICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTsKICAgIHZhciBfc3RhcnQgPSBvcHRpb25zLnN0YXJ0IHx8IFVSSS5maW5kVXJpLnN0YXJ0OwogICAgdmFyIF9lbmQgPSBvcHRpb25zLmVuZCB8fCBVUkkuZmluZFVyaS5lbmQ7CiAgICB2YXIgX3RyaW0gPSBvcHRpb25zLnRyaW0gfHwgVVJJLmZpbmRVcmkudHJpbTsKICAgIHZhciBfYXR0cmlidXRlT3BlbiA9IC9bYS16MC05LV09WyInXT8kL2k7CgogICAgX3N0YXJ0Lmxhc3RJbmRleCA9IDA7CiAgICB3aGlsZSAodHJ1ZSkgewogICAgICB2YXIgbWF0Y2ggPSBfc3RhcnQuZXhlYyhzdHJpbmcpOwogICAgICBpZiAoIW1hdGNoKSB7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIHZhciBzdGFydCA9IG1hdGNoLmluZGV4OwogICAgICBpZiAob3B0aW9ucy5pZ25vcmVIdG1sKSB7CiAgICAgICAgLy8gYXR0cmlidXQoZT1bIiddPyQpCiAgICAgICAgdmFyIGF0dHJpYnV0ZU9wZW4gPSBzdHJpbmcuc2xpY2UoTWF0aC5tYXgoc3RhcnQgLSAzLCAwKSwgc3RhcnQpOwogICAgICAgIGlmIChhdHRyaWJ1dGVPcGVuICYmIF9hdHRyaWJ1dGVPcGVuLnRlc3QoYXR0cmlidXRlT3BlbikpIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdmFyIGVuZCA9IHN0YXJ0ICsgc3RyaW5nLnNsaWNlKHN0YXJ0KS5zZWFyY2goX2VuZCk7CiAgICAgIHZhciBzbGljZSA9IHN0cmluZy5zbGljZShzdGFydCwgZW5kKS5yZXBsYWNlKF90cmltLCAnJyk7CiAgICAgIGlmIChvcHRpb25zLmlnbm9yZSAmJiBvcHRpb25zLmlnbm9yZS50ZXN0KHNsaWNlKSkgewogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICBlbmQgPSBzdGFydCArIHNsaWNlLmxlbmd0aDsKICAgICAgdmFyIHJlc3VsdCA9IGNhbGxiYWNrKHNsaWNlLCBzdGFydCwgZW5kLCBzdHJpbmcpOwogICAgICBzdHJpbmcgPSBzdHJpbmcuc2xpY2UoMCwgc3RhcnQpICsgcmVzdWx0ICsgc3RyaW5nLnNsaWNlKGVuZCk7CiAgICAgIF9zdGFydC5sYXN0SW5kZXggPSBzdGFydCArIHJlc3VsdC5sZW5ndGg7CiAgICB9CgogICAgX3N0YXJ0Lmxhc3RJbmRleCA9IDA7CiAgICByZXR1cm4gc3RyaW5nOwogIH07CgogIFVSSS5lbnN1cmVWYWxpZEhvc3RuYW1lID0gZnVuY3Rpb24odikgewogICAgLy8gVGhlb3JldGljYWxseSBVUklzIGFsbG93IHBlcmNlbnQtZW5jb2RpbmcgaW4gSG9zdG5hbWVzIChhY2NvcmRpbmcgdG8gUkZDIDM5ODYpCiAgICAvLyB0aGV5IGFyZSBub3QgcGFydCBvZiBETlMgYW5kIHRoZXJlZm9yZSBpZ25vcmVkIGJ5IFVSSS5qcwoKICAgIGlmICh2Lm1hdGNoKFVSSS5pbnZhbGlkX2hvc3RuYW1lX2NoYXJhY3RlcnMpKSB7CiAgICAgIC8vIHRlc3QgcHVueWNvZGUKICAgICAgaWYgKCFwdW55Y29kZSkgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0hvc3RuYW1lICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05Li1dIGFuZCBQdW55Y29kZS5qcyBpcyBub3QgYXZhaWxhYmxlJyk7CiAgICAgIH0KCiAgICAgIGlmIChwdW55Y29kZS50b0FTQ0lJKHYpLm1hdGNoKFVSSS5pbnZhbGlkX2hvc3RuYW1lX2NoYXJhY3RlcnMpKSB7CiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSG9zdG5hbWUgIicgKyB2ICsgJyIgY29udGFpbnMgY2hhcmFjdGVycyBvdGhlciB0aGFuIFtBLVowLTkuLV0nKTsKICAgICAgfQogICAgfQogIH07CgogIC8vIG5vQ29uZmxpY3QKICBVUkkubm9Db25mbGljdCA9IGZ1bmN0aW9uKHJlbW92ZUFsbCkgewogICAgaWYgKHJlbW92ZUFsbCkgewogICAgICB2YXIgdW5jb25mbGljdGVkID0gewogICAgICAgIFVSSTogdGhpcy5ub0NvbmZsaWN0KCkKICAgICAgfTsKCiAgICAgIGlmIChyb290LlVSSVRlbXBsYXRlICYmIHR5cGVvZiByb290LlVSSVRlbXBsYXRlLm5vQ29uZmxpY3QgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICB1bmNvbmZsaWN0ZWQuVVJJVGVtcGxhdGUgPSByb290LlVSSVRlbXBsYXRlLm5vQ29uZmxpY3QoKTsKICAgICAgfQoKICAgICAgaWYgKHJvb3QuSVB2NiAmJiB0eXBlb2Ygcm9vdC5JUHY2Lm5vQ29uZmxpY3QgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICB1bmNvbmZsaWN0ZWQuSVB2NiA9IHJvb3QuSVB2Ni5ub0NvbmZsaWN0KCk7CiAgICAgIH0KCiAgICAgIGlmIChyb290LlNlY29uZExldmVsRG9tYWlucyAmJiB0eXBlb2Ygcm9vdC5TZWNvbmRMZXZlbERvbWFpbnMubm9Db25mbGljdCA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHVuY29uZmxpY3RlZC5TZWNvbmRMZXZlbERvbWFpbnMgPSByb290LlNlY29uZExldmVsRG9tYWlucy5ub0NvbmZsaWN0KCk7CiAgICAgIH0KCiAgICAgIHJldHVybiB1bmNvbmZsaWN0ZWQ7CiAgICB9IGVsc2UgaWYgKHJvb3QuVVJJID09PSB0aGlzKSB7CiAgICAgIHJvb3QuVVJJID0gX1VSSTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9OwoKICBwLmJ1aWxkID0gZnVuY3Rpb24oZGVmZXJCdWlsZCkgewogICAgaWYgKGRlZmVyQnVpbGQgPT09IHRydWUpIHsKICAgICAgdGhpcy5fZGVmZXJyZWRfYnVpbGQgPSB0cnVlOwogICAgfSBlbHNlIGlmIChkZWZlckJ1aWxkID09PSB1bmRlZmluZWQgfHwgdGhpcy5fZGVmZXJyZWRfYnVpbGQpIHsKICAgICAgdGhpcy5fc3RyaW5nID0gVVJJLmJ1aWxkKHRoaXMuX3BhcnRzKTsKICAgICAgdGhpcy5fZGVmZXJyZWRfYnVpbGQgPSBmYWxzZTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9OwoKICBwLmNsb25lID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gbmV3IFVSSSh0aGlzKTsKICB9OwoKICBwLnZhbHVlT2YgPSBwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gdGhpcy5idWlsZChmYWxzZSkuX3N0cmluZzsKICB9OwoKCiAgZnVuY3Rpb24gZ2VuZXJhdGVTaW1wbGVBY2Nlc3NvcihfcGFydCl7CiAgICByZXR1cm4gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB0aGlzLl9wYXJ0c1tfcGFydF0gfHwgJyc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5fcGFydHNbX3BhcnRdID0gdiB8fCBudWxsOwogICAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfQogICAgfTsKICB9CgogIGZ1bmN0aW9uIGdlbmVyYXRlUHJlZml4QWNjZXNzb3IoX3BhcnQsIF9rZXkpewogICAgcmV0dXJuIGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gdGhpcy5fcGFydHNbX3BhcnRdIHx8ICcnOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh2ICE9PSBudWxsKSB7CiAgICAgICAgICB2ID0gdiArICcnOwogICAgICAgICAgaWYgKHYuY2hhckF0KDApID09PSBfa2V5KSB7CiAgICAgICAgICAgIHYgPSB2LnN1YnN0cmluZygxKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuX3BhcnRzW19wYXJ0XSA9IHY7CiAgICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICAgIHJldHVybiB0aGlzOwogICAgICB9CiAgICB9OwogIH0KCiAgcC5wcm90b2NvbCA9IGdlbmVyYXRlU2ltcGxlQWNjZXNzb3IoJ3Byb3RvY29sJyk7CiAgcC51c2VybmFtZSA9IGdlbmVyYXRlU2ltcGxlQWNjZXNzb3IoJ3VzZXJuYW1lJyk7CiAgcC5wYXNzd29yZCA9IGdlbmVyYXRlU2ltcGxlQWNjZXNzb3IoJ3Bhc3N3b3JkJyk7CiAgcC5ob3N0bmFtZSA9IGdlbmVyYXRlU2ltcGxlQWNjZXNzb3IoJ2hvc3RuYW1lJyk7CiAgcC5wb3J0ID0gZ2VuZXJhdGVTaW1wbGVBY2Nlc3NvcigncG9ydCcpOwogIHAucXVlcnkgPSBnZW5lcmF0ZVByZWZpeEFjY2Vzc29yKCdxdWVyeScsICc/Jyk7CiAgcC5mcmFnbWVudCA9IGdlbmVyYXRlUHJlZml4QWNjZXNzb3IoJ2ZyYWdtZW50JywgJyMnKTsKCiAgcC5zZWFyY2ggPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgdmFyIHQgPSB0aGlzLnF1ZXJ5KHYsIGJ1aWxkKTsKICAgIHJldHVybiB0eXBlb2YgdCA9PT0gJ3N0cmluZycgJiYgdC5sZW5ndGggPyAoJz8nICsgdCkgOiB0OwogIH07CiAgcC5oYXNoID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIHZhciB0ID0gdGhpcy5mcmFnbWVudCh2LCBidWlsZCk7CiAgICByZXR1cm4gdHlwZW9mIHQgPT09ICdzdHJpbmcnICYmIHQubGVuZ3RoID8gKCcjJyArIHQpIDogdDsKICB9OwoKICBwLnBhdGhuYW1lID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gdHJ1ZSkgewogICAgICB2YXIgcmVzID0gdGhpcy5fcGFydHMucGF0aCB8fCAodGhpcy5fcGFydHMuaG9zdG5hbWUgPyAnLycgOiAnJyk7CiAgICAgIHJldHVybiB2ID8gKHRoaXMuX3BhcnRzLnVybiA/IFVSSS5kZWNvZGVVcm5QYXRoIDogVVJJLmRlY29kZVBhdGgpKHJlcykgOiByZXM7CiAgICB9IGVsc2UgewogICAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgICAgdGhpcy5fcGFydHMucGF0aCA9IHYgPyBVUkkucmVjb2RlVXJuUGF0aCh2KSA6ICcnOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuX3BhcnRzLnBhdGggPSB2ID8gVVJJLnJlY29kZVBhdGgodikgOiAnLyc7CiAgICAgIH0KICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAucGF0aCA9IHAucGF0aG5hbWU7CiAgcC5ocmVmID0gZnVuY3Rpb24oaHJlZiwgYnVpbGQpIHsKICAgIHZhciBrZXk7CgogICAgaWYgKGhyZWYgPT09IHVuZGVmaW5lZCkgewogICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpOwogICAgfQoKICAgIHRoaXMuX3N0cmluZyA9ICcnOwogICAgdGhpcy5fcGFydHMgPSBVUkkuX3BhcnRzKCk7CgogICAgdmFyIF9VUkkgPSBocmVmIGluc3RhbmNlb2YgVVJJOwogICAgdmFyIF9vYmplY3QgPSB0eXBlb2YgaHJlZiA9PT0gJ29iamVjdCcgJiYgKGhyZWYuaG9zdG5hbWUgfHwgaHJlZi5wYXRoIHx8IGhyZWYucGF0aG5hbWUpOwogICAgaWYgKGhyZWYubm9kZU5hbWUpIHsKICAgICAgdmFyIGF0dHJpYnV0ZSA9IFVSSS5nZXREb21BdHRyaWJ1dGUoaHJlZik7CiAgICAgIGhyZWYgPSBocmVmW2F0dHJpYnV0ZV0gfHwgJyc7CiAgICAgIF9vYmplY3QgPSBmYWxzZTsKICAgIH0KCiAgICAvLyB3aW5kb3cubG9jYXRpb24gaXMgcmVwb3J0ZWQgdG8gYmUgYW4gb2JqZWN0LCBidXQgaXQncyBub3QgdGhlIHNvcnQKICAgIC8vIG9mIG9iamVjdCB3ZSdyZSBsb29raW5nIGZvcjoKICAgIC8vICogbG9jYXRpb24ucHJvdG9jb2wgZW5kcyB3aXRoIGEgY29sb24KICAgIC8vICogbG9jYXRpb24ucXVlcnkgIT0gb2JqZWN0LnNlYXJjaAogICAgLy8gKiBsb2NhdGlvbi5oYXNoICE9IG9iamVjdC5mcmFnbWVudAogICAgLy8gc2ltcGx5IHNlcmlhbGl6aW5nIHRoZSB1bmtub3duIG9iamVjdCBzaG91bGQgZG8gdGhlIHRyaWNrCiAgICAvLyAoZm9yIGxvY2F0aW9uLCBub3QgZm9yIGV2ZXJ5dGhpbmcuLi4pCiAgICBpZiAoIV9VUkkgJiYgX29iamVjdCAmJiBocmVmLnBhdGhuYW1lICE9PSB1bmRlZmluZWQpIHsKICAgICAgaHJlZiA9IGhyZWYudG9TdHJpbmcoKTsKICAgIH0KCiAgICBpZiAodHlwZW9mIGhyZWYgPT09ICdzdHJpbmcnIHx8IGhyZWYgaW5zdGFuY2VvZiBTdHJpbmcpIHsKICAgICAgdGhpcy5fcGFydHMgPSBVUkkucGFyc2UoU3RyaW5nKGhyZWYpLCB0aGlzLl9wYXJ0cyk7CiAgICB9IGVsc2UgaWYgKF9VUkkgfHwgX29iamVjdCkgewogICAgICB2YXIgc3JjID0gX1VSSSA/IGhyZWYuX3BhcnRzIDogaHJlZjsKICAgICAgZm9yIChrZXkgaW4gc3JjKSB7CiAgICAgICAgaWYgKGhhc093bi5jYWxsKHRoaXMuX3BhcnRzLCBrZXkpKSB7CiAgICAgICAgICB0aGlzLl9wYXJ0c1trZXldID0gc3JjW2tleV07CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIGlucHV0Jyk7CiAgICB9CgogICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgcmV0dXJuIHRoaXM7CiAgfTsKCiAgLy8gaWRlbnRpZmljYXRpb24gYWNjZXNzb3JzCiAgcC5pcyA9IGZ1bmN0aW9uKHdoYXQpIHsKICAgIHZhciBpcCA9IGZhbHNlOwogICAgdmFyIGlwNCA9IGZhbHNlOwogICAgdmFyIGlwNiA9IGZhbHNlOwogICAgdmFyIG5hbWUgPSBmYWxzZTsKICAgIHZhciBzbGQgPSBmYWxzZTsKICAgIHZhciBpZG4gPSBmYWxzZTsKICAgIHZhciBwdW55Y29kZSA9IGZhbHNlOwogICAgdmFyIHJlbGF0aXZlID0gIXRoaXMuX3BhcnRzLnVybjsKCiAgICBpZiAodGhpcy5fcGFydHMuaG9zdG5hbWUpIHsKICAgICAgcmVsYXRpdmUgPSBmYWxzZTsKICAgICAgaXA0ID0gVVJJLmlwNF9leHByZXNzaW9uLnRlc3QodGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgICBpcDYgPSBVUkkuaXA2X2V4cHJlc3Npb24udGVzdCh0aGlzLl9wYXJ0cy5ob3N0bmFtZSk7CiAgICAgIGlwID0gaXA0IHx8IGlwNjsKICAgICAgbmFtZSA9ICFpcDsKICAgICAgc2xkID0gbmFtZSAmJiBTTEQgJiYgU0xELmhhcyh0aGlzLl9wYXJ0cy5ob3N0bmFtZSk7CiAgICAgIGlkbiA9IG5hbWUgJiYgVVJJLmlkbl9leHByZXNzaW9uLnRlc3QodGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgICBwdW55Y29kZSA9IG5hbWUgJiYgVVJJLnB1bnljb2RlX2V4cHJlc3Npb24udGVzdCh0aGlzLl9wYXJ0cy5ob3N0bmFtZSk7CiAgICB9CgogICAgc3dpdGNoICh3aGF0LnRvTG93ZXJDYXNlKCkpIHsKICAgICAgY2FzZSAncmVsYXRpdmUnOgogICAgICAgIHJldHVybiByZWxhdGl2ZTsKCiAgICAgIGNhc2UgJ2Fic29sdXRlJzoKICAgICAgICByZXR1cm4gIXJlbGF0aXZlOwoKICAgICAgLy8gaG9zdG5hbWUgaWRlbnRpZmljYXRpb24KICAgICAgY2FzZSAnZG9tYWluJzoKICAgICAgY2FzZSAnbmFtZSc6CiAgICAgICAgcmV0dXJuIG5hbWU7CgogICAgICBjYXNlICdzbGQnOgogICAgICAgIHJldHVybiBzbGQ7CgogICAgICBjYXNlICdpcCc6CiAgICAgICAgcmV0dXJuIGlwOwoKICAgICAgY2FzZSAnaXA0JzoKICAgICAgY2FzZSAnaXB2NCc6CiAgICAgIGNhc2UgJ2luZXQ0JzoKICAgICAgICByZXR1cm4gaXA0OwoKICAgICAgY2FzZSAnaXA2JzoKICAgICAgY2FzZSAnaXB2Nic6CiAgICAgIGNhc2UgJ2luZXQ2JzoKICAgICAgICByZXR1cm4gaXA2OwoKICAgICAgY2FzZSAnaWRuJzoKICAgICAgICByZXR1cm4gaWRuOwoKICAgICAgY2FzZSAndXJsJzoKICAgICAgICByZXR1cm4gIXRoaXMuX3BhcnRzLnVybjsKCiAgICAgIGNhc2UgJ3Vybic6CiAgICAgICAgcmV0dXJuICEhdGhpcy5fcGFydHMudXJuOwoKICAgICAgY2FzZSAncHVueWNvZGUnOgogICAgICAgIHJldHVybiBwdW55Y29kZTsKICAgIH0KCiAgICByZXR1cm4gbnVsbDsKICB9OwoKICAvLyBjb21wb25lbnQgc3BlY2lmaWMgaW5wdXQgdmFsaWRhdGlvbgogIHZhciBfcHJvdG9jb2wgPSBwLnByb3RvY29sOwogIHZhciBfcG9ydCA9IHAucG9ydDsKICB2YXIgX2hvc3RuYW1lID0gcC5ob3N0bmFtZTsKCiAgcC5wcm90b2NvbCA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodiAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmICh2KSB7CiAgICAgICAgLy8gYWNjZXB0IHRyYWlsaW5nIDovLwogICAgICAgIHYgPSB2LnJlcGxhY2UoLzooXC9cLyk/JC8sICcnKTsKCiAgICAgICAgaWYgKCF2Lm1hdGNoKFVSSS5wcm90b2NvbF9leHByZXNzaW9uKSkgewogICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUHJvdG9jb2wgIicgKyB2ICsgJyIgY29udGFpbnMgY2hhcmFjdGVycyBvdGhlciB0aGFuIFtBLVowLTkuKy1dIG9yIGRvZXNuXCd0IHN0YXJ0IHdpdGggW0EtWl0nKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBfcHJvdG9jb2wuY2FsbCh0aGlzLCB2LCBidWlsZCk7CiAgfTsKICBwLnNjaGVtZSA9IHAucHJvdG9jb2w7CiAgcC5wb3J0ID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodiAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmICh2ID09PSAwKSB7CiAgICAgICAgdiA9IG51bGw7CiAgICAgIH0KCiAgICAgIGlmICh2KSB7CiAgICAgICAgdiArPSAnJzsKICAgICAgICBpZiAodi5jaGFyQXQoMCkgPT09ICc6JykgewogICAgICAgICAgdiA9IHYuc3Vic3RyaW5nKDEpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHYubWF0Y2goL1teMC05XS8pKSB7CiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdQb3J0ICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbMC05XScpOwogICAgICAgIH0KICAgICAgfQogICAgfQogICAgcmV0dXJuIF9wb3J0LmNhbGwodGhpcywgdiwgYnVpbGQpOwogIH07CiAgcC5ob3N0bmFtZSA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgIT09IHVuZGVmaW5lZCkgewogICAgICB2YXIgeCA9IHt9OwogICAgICB2YXIgcmVzID0gVVJJLnBhcnNlSG9zdCh2LCB4KTsKICAgICAgaWYgKHJlcyAhPT0gJy8nKSB7CiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSG9zdG5hbWUgIicgKyB2ICsgJyIgY29udGFpbnMgY2hhcmFjdGVycyBvdGhlciB0aGFuIFtBLVowLTkuLV0nKTsKICAgICAgfQoKICAgICAgdiA9IHguaG9zdG5hbWU7CiAgICB9CiAgICByZXR1cm4gX2hvc3RuYW1lLmNhbGwodGhpcywgdiwgYnVpbGQpOwogIH07CgogIC8vIGNvbXBvdW5kIGFjY2Vzc29ycwogIHAub3JpZ2luID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHZhciBwcm90b2NvbCA9IHRoaXMucHJvdG9jb2woKTsKICAgICAgdmFyIGF1dGhvcml0eSA9IHRoaXMuYXV0aG9yaXR5KCk7CiAgICAgIGlmICghYXV0aG9yaXR5KSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICByZXR1cm4gKHByb3RvY29sID8gcHJvdG9jb2wgKyAnOi8vJyA6ICcnKSArIHRoaXMuYXV0aG9yaXR5KCk7CiAgICB9IGVsc2UgewogICAgICB2YXIgb3JpZ2luID0gVVJJKHYpOwogICAgICB0aGlzCiAgICAgICAgLnByb3RvY29sKG9yaWdpbi5wcm90b2NvbCgpKQogICAgICAgIC5hdXRob3JpdHkob3JpZ2luLmF1dGhvcml0eSgpKQogICAgICAgIC5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAuaG9zdCA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICByZXR1cm4gdGhpcy5fcGFydHMuaG9zdG5hbWUgPyBVUkkuYnVpbGRIb3N0KHRoaXMuX3BhcnRzKSA6ICcnOwogICAgfSBlbHNlIHsKICAgICAgdmFyIHJlcyA9IFVSSS5wYXJzZUhvc3QodiwgdGhpcy5fcGFydHMpOwogICAgICBpZiAocmVzICE9PSAnLycpIHsKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdIb3N0bmFtZSAiJyArIHYgKyAnIiBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gW0EtWjAtOS4tXScpOwogICAgICB9CgogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC5hdXRob3JpdHkgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lID8gVVJJLmJ1aWxkQXV0aG9yaXR5KHRoaXMuX3BhcnRzKSA6ICcnOwogICAgfSBlbHNlIHsKICAgICAgdmFyIHJlcyA9IFVSSS5wYXJzZUF1dGhvcml0eSh2LCB0aGlzLl9wYXJ0cyk7CiAgICAgIGlmIChyZXMgIT09ICcvJykgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0hvc3RuYW1lICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05Li1dJyk7CiAgICAgIH0KCiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLnVzZXJpbmZvID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHZhciB0ID0gVVJJLmJ1aWxkVXNlcmluZm8odGhpcy5fcGFydHMpOwogICAgICByZXR1cm4gdCA/IHQuc3Vic3RyaW5nKDAsIHQubGVuZ3RoIC0xKSA6IHQ7CiAgICB9IGVsc2UgewogICAgICBpZiAodlt2Lmxlbmd0aC0xXSAhPT0gJ0AnKSB7CiAgICAgICAgdiArPSAnQCc7CiAgICAgIH0KCiAgICAgIFVSSS5wYXJzZVVzZXJpbmZvKHYsIHRoaXMuX3BhcnRzKTsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAucmVzb3VyY2UgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgdmFyIHBhcnRzOwoKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgcmV0dXJuIHRoaXMucGF0aCgpICsgdGhpcy5zZWFyY2goKSArIHRoaXMuaGFzaCgpOwogICAgfQoKICAgIHBhcnRzID0gVVJJLnBhcnNlKHYpOwogICAgdGhpcy5fcGFydHMucGF0aCA9IHBhcnRzLnBhdGg7CiAgICB0aGlzLl9wYXJ0cy5xdWVyeSA9IHBhcnRzLnF1ZXJ5OwogICAgdGhpcy5fcGFydHMuZnJhZ21lbnQgPSBwYXJ0cy5mcmFnbWVudDsKICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIHJldHVybiB0aGlzOwogIH07CgogIC8vIGZyYWN0aW9uIGFjY2Vzc29ycwogIHAuc3ViZG9tYWluID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICAvLyBjb252ZW5pZW5jZSwgcmV0dXJuICJ3d3ciIGZyb20gInd3dy5leGFtcGxlLm9yZyIKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgaWYgKCF0aGlzLl9wYXJ0cy5ob3N0bmFtZSB8fCB0aGlzLmlzKCdJUCcpKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICAvLyBncmFiIGRvbWFpbiBhbmQgYWRkIGFub3RoZXIgc2VnbWVudAogICAgICB2YXIgZW5kID0gdGhpcy5fcGFydHMuaG9zdG5hbWUubGVuZ3RoIC0gdGhpcy5kb21haW4oKS5sZW5ndGggLSAxOwogICAgICByZXR1cm4gdGhpcy5fcGFydHMuaG9zdG5hbWUuc3Vic3RyaW5nKDAsIGVuZCkgfHwgJyc7CiAgICB9IGVsc2UgewogICAgICB2YXIgZSA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLmxlbmd0aCAtIHRoaXMuZG9tYWluKCkubGVuZ3RoOwogICAgICB2YXIgc3ViID0gdGhpcy5fcGFydHMuaG9zdG5hbWUuc3Vic3RyaW5nKDAsIGUpOwogICAgICB2YXIgcmVwbGFjZSA9IG5ldyBSZWdFeHAoJ14nICsgZXNjYXBlUmVnRXgoc3ViKSk7CgogICAgICBpZiAodiAmJiB2LmNoYXJBdCh2Lmxlbmd0aCAtIDEpICE9PSAnLicpIHsKICAgICAgICB2ICs9ICcuJzsKICAgICAgfQoKICAgICAgaWYgKHYpIHsKICAgICAgICBVUkkuZW5zdXJlVmFsaWRIb3N0bmFtZSh2KTsKICAgICAgfQoKICAgICAgdGhpcy5fcGFydHMuaG9zdG5hbWUgPSB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5yZXBsYWNlKHJlcGxhY2UsIHYpOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC5kb21haW4gPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh0eXBlb2YgdiA9PT0gJ2Jvb2xlYW4nKSB7CiAgICAgIGJ1aWxkID0gdjsKICAgICAgdiA9IHVuZGVmaW5lZDsKICAgIH0KCiAgICAvLyBjb252ZW5pZW5jZSwgcmV0dXJuICJleGFtcGxlLm9yZyIgZnJvbSAid3d3LmV4YW1wbGUub3JnIgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICBpZiAoIXRoaXMuX3BhcnRzLmhvc3RuYW1lIHx8IHRoaXMuaXMoJ0lQJykpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIC8vIGlmIGhvc3RuYW1lIGNvbnNpc3RzIG9mIDEgb3IgMiBzZWdtZW50cywgaXQgbXVzdCBiZSB0aGUgZG9tYWluCiAgICAgIHZhciB0ID0gdGhpcy5fcGFydHMuaG9zdG5hbWUubWF0Y2goL1wuL2cpOwogICAgICBpZiAodCAmJiB0Lmxlbmd0aCA8IDIpIHsKICAgICAgICByZXR1cm4gdGhpcy5fcGFydHMuaG9zdG5hbWU7CiAgICAgIH0KCiAgICAgIC8vIGdyYWIgdGxkIGFuZCBhZGQgYW5vdGhlciBzZWdtZW50CiAgICAgIHZhciBlbmQgPSB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5sZW5ndGggLSB0aGlzLnRsZChidWlsZCkubGVuZ3RoIC0gMTsKICAgICAgZW5kID0gdGhpcy5fcGFydHMuaG9zdG5hbWUubGFzdEluZGV4T2YoJy4nLCBlbmQgLTEpICsgMTsKICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lLnN1YnN0cmluZyhlbmQpIHx8ICcnOwogICAgfSBlbHNlIHsKICAgICAgaWYgKCF2KSB7CiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignY2Fubm90IHNldCBkb21haW4gZW1wdHknKTsKICAgICAgfQoKICAgICAgVVJJLmVuc3VyZVZhbGlkSG9zdG5hbWUodik7CgogICAgICBpZiAoIXRoaXMuX3BhcnRzLmhvc3RuYW1lIHx8IHRoaXMuaXMoJ0lQJykpIHsKICAgICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IHY7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHJlcGxhY2UgPSBuZXcgUmVnRXhwKGVzY2FwZVJlZ0V4KHRoaXMuZG9tYWluKCkpICsgJyQnKTsKICAgICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLnJlcGxhY2UocmVwbGFjZSwgdik7CiAgICAgIH0KCiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLnRsZCA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHR5cGVvZiB2ID09PSAnYm9vbGVhbicpIHsKICAgICAgYnVpbGQgPSB2OwogICAgICB2ID0gdW5kZWZpbmVkOwogICAgfQoKICAgIC8vIHJldHVybiAib3JnIiBmcm9tICJ3d3cuZXhhbXBsZS5vcmciCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmICghdGhpcy5fcGFydHMuaG9zdG5hbWUgfHwgdGhpcy5pcygnSVAnKSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgdmFyIHBvcyA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLmxhc3RJbmRleE9mKCcuJyk7CiAgICAgIHZhciB0bGQgPSB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5zdWJzdHJpbmcocG9zICsgMSk7CgogICAgICBpZiAoYnVpbGQgIT09IHRydWUgJiYgU0xEICYmIFNMRC5saXN0W3RsZC50b0xvd2VyQ2FzZSgpXSkgewogICAgICAgIHJldHVybiBTTEQuZ2V0KHRoaXMuX3BhcnRzLmhvc3RuYW1lKSB8fCB0bGQ7CiAgICAgIH0KCiAgICAgIHJldHVybiB0bGQ7CiAgICB9IGVsc2UgewogICAgICB2YXIgcmVwbGFjZTsKCiAgICAgIGlmICghdikgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2Nhbm5vdCBzZXQgVExEIGVtcHR5Jyk7CiAgICAgIH0gZWxzZSBpZiAodi5tYXRjaCgvW15hLXpBLVowLTktXS8pKSB7CiAgICAgICAgaWYgKFNMRCAmJiBTTEQuaXModikpIHsKICAgICAgICAgIHJlcGxhY2UgPSBuZXcgUmVnRXhwKGVzY2FwZVJlZ0V4KHRoaXMudGxkKCkpICsgJyQnKTsKICAgICAgICAgIHRoaXMuX3BhcnRzLmhvc3RuYW1lID0gdGhpcy5fcGFydHMuaG9zdG5hbWUucmVwbGFjZShyZXBsYWNlLCB2KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVExEICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05XScpOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmICghdGhpcy5fcGFydHMuaG9zdG5hbWUgfHwgdGhpcy5pcygnSVAnKSkgewogICAgICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcignY2Fubm90IHNldCBUTEQgb24gbm9uLWRvbWFpbiBob3N0Jyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVwbGFjZSA9IG5ldyBSZWdFeHAoZXNjYXBlUmVnRXgodGhpcy50bGQoKSkgKyAnJCcpOwogICAgICAgIHRoaXMuX3BhcnRzLmhvc3RuYW1lID0gdGhpcy5fcGFydHMuaG9zdG5hbWUucmVwbGFjZShyZXBsYWNlLCB2KTsKICAgICAgfQoKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAuZGlyZWN0b3J5ID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkIHx8IHYgPT09IHRydWUpIHsKICAgICAgaWYgKCF0aGlzLl9wYXJ0cy5wYXRoICYmICF0aGlzLl9wYXJ0cy5ob3N0bmFtZSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuX3BhcnRzLnBhdGggPT09ICcvJykgewogICAgICAgIHJldHVybiAnLyc7CiAgICAgIH0KCiAgICAgIHZhciBlbmQgPSB0aGlzLl9wYXJ0cy5wYXRoLmxlbmd0aCAtIHRoaXMuZmlsZW5hbWUoKS5sZW5ndGggLSAxOwogICAgICB2YXIgcmVzID0gdGhpcy5fcGFydHMucGF0aC5zdWJzdHJpbmcoMCwgZW5kKSB8fCAodGhpcy5fcGFydHMuaG9zdG5hbWUgPyAnLycgOiAnJyk7CgogICAgICByZXR1cm4gdiA/IFVSSS5kZWNvZGVQYXRoKHJlcykgOiByZXM7CgogICAgfSBlbHNlIHsKICAgICAgdmFyIGUgPSB0aGlzLl9wYXJ0cy5wYXRoLmxlbmd0aCAtIHRoaXMuZmlsZW5hbWUoKS5sZW5ndGg7CiAgICAgIHZhciBkaXJlY3RvcnkgPSB0aGlzLl9wYXJ0cy5wYXRoLnN1YnN0cmluZygwLCBlKTsKICAgICAgdmFyIHJlcGxhY2UgPSBuZXcgUmVnRXhwKCdeJyArIGVzY2FwZVJlZ0V4KGRpcmVjdG9yeSkpOwoKICAgICAgLy8gZnVsbHkgcXVhbGlmaWVyIGRpcmVjdG9yaWVzIGJlZ2luIHdpdGggYSBzbGFzaAogICAgICBpZiAoIXRoaXMuaXMoJ3JlbGF0aXZlJykpIHsKICAgICAgICBpZiAoIXYpIHsKICAgICAgICAgIHYgPSAnLyc7CiAgICAgICAgfQoKICAgICAgICBpZiAodi5jaGFyQXQoMCkgIT09ICcvJykgewogICAgICAgICAgdiA9ICcvJyArIHY7CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyBkaXJlY3RvcmllcyBhbHdheXMgZW5kIHdpdGggYSBzbGFzaAogICAgICBpZiAodiAmJiB2LmNoYXJBdCh2Lmxlbmd0aCAtIDEpICE9PSAnLycpIHsKICAgICAgICB2ICs9ICcvJzsKICAgICAgfQoKICAgICAgdiA9IFVSSS5yZWNvZGVQYXRoKHYpOwogICAgICB0aGlzLl9wYXJ0cy5wYXRoID0gdGhpcy5fcGFydHMucGF0aC5yZXBsYWNlKHJlcGxhY2UsIHYpOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC5maWxlbmFtZSA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCB8fCB2ID09PSB0cnVlKSB7CiAgICAgIGlmICghdGhpcy5fcGFydHMucGF0aCB8fCB0aGlzLl9wYXJ0cy5wYXRoID09PSAnLycpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIHZhciBwb3MgPSB0aGlzLl9wYXJ0cy5wYXRoLmxhc3RJbmRleE9mKCcvJyk7CiAgICAgIHZhciByZXMgPSB0aGlzLl9wYXJ0cy5wYXRoLnN1YnN0cmluZyhwb3MrMSk7CgogICAgICByZXR1cm4gdiA/IFVSSS5kZWNvZGVQYXRoU2VnbWVudChyZXMpIDogcmVzOwogICAgfSBlbHNlIHsKICAgICAgdmFyIG11dGF0ZWREaXJlY3RvcnkgPSBmYWxzZTsKCiAgICAgIGlmICh2LmNoYXJBdCgwKSA9PT0gJy8nKSB7CiAgICAgICAgdiA9IHYuc3Vic3RyaW5nKDEpOwogICAgICB9CgogICAgICBpZiAodi5tYXRjaCgvXC4/XC8vKSkgewogICAgICAgIG11dGF0ZWREaXJlY3RvcnkgPSB0cnVlOwogICAgICB9CgogICAgICB2YXIgcmVwbGFjZSA9IG5ldyBSZWdFeHAoZXNjYXBlUmVnRXgodGhpcy5maWxlbmFtZSgpKSArICckJyk7CiAgICAgIHYgPSBVUkkucmVjb2RlUGF0aCh2KTsKICAgICAgdGhpcy5fcGFydHMucGF0aCA9IHRoaXMuX3BhcnRzLnBhdGgucmVwbGFjZShyZXBsYWNlLCB2KTsKCiAgICAgIGlmIChtdXRhdGVkRGlyZWN0b3J5KSB7CiAgICAgICAgdGhpcy5ub3JtYWxpemVQYXRoKGJ1aWxkKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC5zdWZmaXggPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gdHJ1ZSkgewogICAgICBpZiAoIXRoaXMuX3BhcnRzLnBhdGggfHwgdGhpcy5fcGFydHMucGF0aCA9PT0gJy8nKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICB2YXIgZmlsZW5hbWUgPSB0aGlzLmZpbGVuYW1lKCk7CiAgICAgIHZhciBwb3MgPSBmaWxlbmFtZS5sYXN0SW5kZXhPZignLicpOwogICAgICB2YXIgcywgcmVzOwoKICAgICAgaWYgKHBvcyA9PT0gLTEpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIC8vIHN1ZmZpeCBtYXkgb25seSBjb250YWluIGFsbnVtIGNoYXJhY3RlcnMgKHl1cCwgSSBtYWRlIHRoaXMgdXAuKQogICAgICBzID0gZmlsZW5hbWUuc3Vic3RyaW5nKHBvcysxKTsKICAgICAgcmVzID0gKC9eW2EtejAtOSVdKyQvaSkudGVzdChzKSA/IHMgOiAnJzsKICAgICAgcmV0dXJuIHYgPyBVUkkuZGVjb2RlUGF0aFNlZ21lbnQocmVzKSA6IHJlczsKICAgIH0gZWxzZSB7CiAgICAgIGlmICh2LmNoYXJBdCgwKSA9PT0gJy4nKSB7CiAgICAgICAgdiA9IHYuc3Vic3RyaW5nKDEpOwogICAgICB9CgogICAgICB2YXIgc3VmZml4ID0gdGhpcy5zdWZmaXgoKTsKICAgICAgdmFyIHJlcGxhY2U7CgogICAgICBpZiAoIXN1ZmZpeCkgewogICAgICAgIGlmICghdikgewogICAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgICAgfQoKICAgICAgICB0aGlzLl9wYXJ0cy5wYXRoICs9ICcuJyArIFVSSS5yZWNvZGVQYXRoKHYpOwogICAgICB9IGVsc2UgaWYgKCF2KSB7CiAgICAgICAgcmVwbGFjZSA9IG5ldyBSZWdFeHAoZXNjYXBlUmVnRXgoJy4nICsgc3VmZml4KSArICckJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVwbGFjZSA9IG5ldyBSZWdFeHAoZXNjYXBlUmVnRXgoc3VmZml4KSArICckJyk7CiAgICAgIH0KCiAgICAgIGlmIChyZXBsYWNlKSB7CiAgICAgICAgdiA9IFVSSS5yZWNvZGVQYXRoKHYpOwogICAgICAgIHRoaXMuX3BhcnRzLnBhdGggPSB0aGlzLl9wYXJ0cy5wYXRoLnJlcGxhY2UocmVwbGFjZSwgdik7CiAgICAgIH0KCiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLnNlZ21lbnQgPSBmdW5jdGlvbihzZWdtZW50LCB2LCBidWlsZCkgewogICAgdmFyIHNlcGFyYXRvciA9IHRoaXMuX3BhcnRzLnVybiA/ICc6JyA6ICcvJzsKICAgIHZhciBwYXRoID0gdGhpcy5wYXRoKCk7CiAgICB2YXIgYWJzb2x1dGUgPSBwYXRoLnN1YnN0cmluZygwLCAxKSA9PT0gJy8nOwogICAgdmFyIHNlZ21lbnRzID0gcGF0aC5zcGxpdChzZXBhcmF0b3IpOwoKICAgIGlmIChzZWdtZW50ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIHNlZ21lbnQgIT09ICdudW1iZXInKSB7CiAgICAgIGJ1aWxkID0gdjsKICAgICAgdiA9IHNlZ21lbnQ7CiAgICAgIHNlZ21lbnQgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgaWYgKHNlZ21lbnQgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2Ygc2VnbWVudCAhPT0gJ251bWJlcicpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdCYWQgc2VnbWVudCAiJyArIHNlZ21lbnQgKyAnIiwgbXVzdCBiZSAwLWJhc2VkIGludGVnZXInKTsKICAgIH0KCiAgICBpZiAoYWJzb2x1dGUpIHsKICAgICAgc2VnbWVudHMuc2hpZnQoKTsKICAgIH0KCiAgICBpZiAoc2VnbWVudCA8IDApIHsKICAgICAgLy8gYWxsb3cgbmVnYXRpdmUgaW5kZXhlcyB0byBhZGRyZXNzIGZyb20gdGhlIGVuZAogICAgICBzZWdtZW50ID0gTWF0aC5tYXgoc2VnbWVudHMubGVuZ3RoICsgc2VnbWVudCwgMCk7CiAgICB9CgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICAvKmpzaGludCBsYXhicmVhazogdHJ1ZSAqLwogICAgICByZXR1cm4gc2VnbWVudCA9PT0gdW5kZWZpbmVkCiAgICAgICAgPyBzZWdtZW50cwogICAgICAgIDogc2VnbWVudHNbc2VnbWVudF07CiAgICAgIC8qanNoaW50IGxheGJyZWFrOiBmYWxzZSAqLwogICAgfSBlbHNlIGlmIChzZWdtZW50ID09PSBudWxsIHx8IHNlZ21lbnRzW3NlZ21lbnRdID09PSB1bmRlZmluZWQpIHsKICAgICAgaWYgKGlzQXJyYXkodikpIHsKICAgICAgICBzZWdtZW50cyA9IFtdOwogICAgICAgIC8vIGNvbGxhcHNlIGVtcHR5IGVsZW1lbnRzIHdpdGhpbiBhcnJheQogICAgICAgIGZvciAodmFyIGk9MCwgbD12Lmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAgaWYgKCF2W2ldLmxlbmd0aCAmJiAoIXNlZ21lbnRzLmxlbmd0aCB8fCAhc2VnbWVudHNbc2VnbWVudHMubGVuZ3RoIC0xXS5sZW5ndGgpKSB7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzZWdtZW50cy5sZW5ndGggJiYgIXNlZ21lbnRzW3NlZ21lbnRzLmxlbmd0aCAtMV0ubGVuZ3RoKSB7CiAgICAgICAgICAgIHNlZ21lbnRzLnBvcCgpOwogICAgICAgICAgfQoKICAgICAgICAgIHNlZ21lbnRzLnB1c2godHJpbVNsYXNoZXModltpXSkpOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmICh2IHx8IHR5cGVvZiB2ID09PSAnc3RyaW5nJykgewogICAgICAgIHYgPSB0cmltU2xhc2hlcyh2KTsKICAgICAgICBpZiAoc2VnbWVudHNbc2VnbWVudHMubGVuZ3RoIC0xXSA9PT0gJycpIHsKICAgICAgICAgIC8vIGVtcHR5IHRyYWlsaW5nIGVsZW1lbnRzIGhhdmUgdG8gYmUgb3ZlcndyaXR0ZW4KICAgICAgICAgIC8vIHRvIHByZXZlbnQgcmVzdWx0cyBzdWNoIGFzIC9mb28vL2JhcgogICAgICAgICAgc2VnbWVudHNbc2VnbWVudHMubGVuZ3RoIC0xXSA9IHY7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHNlZ21lbnRzLnB1c2godik7CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgewogICAgICBpZiAodikgewogICAgICAgIHNlZ21lbnRzW3NlZ21lbnRdID0gdHJpbVNsYXNoZXModik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2VnbWVudHMuc3BsaWNlKHNlZ21lbnQsIDEpOwogICAgICB9CiAgICB9CgogICAgaWYgKGFic29sdXRlKSB7CiAgICAgIHNlZ21lbnRzLnVuc2hpZnQoJycpOwogICAgfQoKICAgIHJldHVybiB0aGlzLnBhdGgoc2VnbWVudHMuam9pbihzZXBhcmF0b3IpLCBidWlsZCk7CiAgfTsKICBwLnNlZ21lbnRDb2RlZCA9IGZ1bmN0aW9uKHNlZ21lbnQsIHYsIGJ1aWxkKSB7CiAgICB2YXIgc2VnbWVudHMsIGksIGw7CgogICAgaWYgKHR5cGVvZiBzZWdtZW50ICE9PSAnbnVtYmVyJykgewogICAgICBidWlsZCA9IHY7CiAgICAgIHYgPSBzZWdtZW50OwogICAgICBzZWdtZW50ID0gdW5kZWZpbmVkOwogICAgfQoKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgc2VnbWVudHMgPSB0aGlzLnNlZ21lbnQoc2VnbWVudCwgdiwgYnVpbGQpOwogICAgICBpZiAoIWlzQXJyYXkoc2VnbWVudHMpKSB7CiAgICAgICAgc2VnbWVudHMgPSBzZWdtZW50cyAhPT0gdW5kZWZpbmVkID8gVVJJLmRlY29kZShzZWdtZW50cykgOiB1bmRlZmluZWQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZm9yIChpID0gMCwgbCA9IHNlZ21lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgICAgc2VnbWVudHNbaV0gPSBVUkkuZGVjb2RlKHNlZ21lbnRzW2ldKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzZWdtZW50czsKICAgIH0KCiAgICBpZiAoIWlzQXJyYXkodikpIHsKICAgICAgdiA9ICh0eXBlb2YgdiA9PT0gJ3N0cmluZycgfHwgdiBpbnN0YW5jZW9mIFN0cmluZykgPyBVUkkuZW5jb2RlKHYpIDogdjsKICAgIH0gZWxzZSB7CiAgICAgIGZvciAoaSA9IDAsIGwgPSB2Lmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgIHZbaV0gPSBVUkkuZW5jb2RlKHZbaV0pOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRoaXMuc2VnbWVudChzZWdtZW50LCB2LCBidWlsZCk7CiAgfTsKCiAgLy8gbXV0YXRpbmcgcXVlcnkgc3RyaW5nCiAgdmFyIHEgPSBwLnF1ZXJ5OwogIHAucXVlcnkgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHYgPT09IHRydWUpIHsKICAgICAgcmV0dXJuIFVSSS5wYXJzZVF1ZXJ5KHRoaXMuX3BhcnRzLnF1ZXJ5LCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKICAgIH0gZWxzZSBpZiAodHlwZW9mIHYgPT09ICdmdW5jdGlvbicpIHsKICAgICAgdmFyIGRhdGEgPSBVUkkucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICAgIHZhciByZXN1bHQgPSB2LmNhbGwodGhpcywgZGF0YSk7CiAgICAgIHRoaXMuX3BhcnRzLnF1ZXJ5ID0gVVJJLmJ1aWxkUXVlcnkocmVzdWx0IHx8IGRhdGEsIHRoaXMuX3BhcnRzLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycywgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9IGVsc2UgaWYgKHYgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgdiAhPT0gJ3N0cmluZycpIHsKICAgICAgdGhpcy5fcGFydHMucXVlcnkgPSBVUkkuYnVpbGRRdWVyeSh2LCB0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHEuY2FsbCh0aGlzLCB2LCBidWlsZCk7CiAgICB9CiAgfTsKICBwLnNldFF1ZXJ5ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIGJ1aWxkKSB7CiAgICB2YXIgZGF0YSA9IFVSSS5wYXJzZVF1ZXJ5KHRoaXMuX3BhcnRzLnF1ZXJ5LCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKCiAgICBpZiAodHlwZW9mIG5hbWUgPT09ICdzdHJpbmcnIHx8IG5hbWUgaW5zdGFuY2VvZiBTdHJpbmcpIHsKICAgICAgZGF0YVtuYW1lXSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IG51bGw7CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBuYW1lID09PSAnb2JqZWN0JykgewogICAgICBmb3IgKHZhciBrZXkgaW4gbmFtZSkgewogICAgICAgIGlmIChoYXNPd24uY2FsbChuYW1lLCBrZXkpKSB7CiAgICAgICAgICBkYXRhW2tleV0gPSBuYW1lW2tleV07CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVUkkuYWRkUXVlcnkoKSBhY2NlcHRzIGFuIG9iamVjdCwgc3RyaW5nIGFzIHRoZSBuYW1lIHBhcmFtZXRlcicpOwogICAgfQoKICAgIHRoaXMuX3BhcnRzLnF1ZXJ5ID0gVVJJLmJ1aWxkUXVlcnkoZGF0YSwgdGhpcy5fcGFydHMuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHsKICAgICAgYnVpbGQgPSB2YWx1ZTsKICAgIH0KCiAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICByZXR1cm4gdGhpczsKICB9OwogIHAuYWRkUXVlcnkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgYnVpbGQpIHsKICAgIHZhciBkYXRhID0gVVJJLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgVVJJLmFkZFF1ZXJ5KGRhdGEsIG5hbWUsIHZhbHVlID09PSB1bmRlZmluZWQgPyBudWxsIDogdmFsdWUpOwogICAgdGhpcy5fcGFydHMucXVlcnkgPSBVUkkuYnVpbGRRdWVyeShkYXRhLCB0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJykgewogICAgICBidWlsZCA9IHZhbHVlOwogICAgfQoKICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIHJldHVybiB0aGlzOwogIH07CiAgcC5yZW1vdmVRdWVyeSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBidWlsZCkgewogICAgdmFyIGRhdGEgPSBVUkkucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICBVUkkucmVtb3ZlUXVlcnkoZGF0YSwgbmFtZSwgdmFsdWUpOwogICAgdGhpcy5fcGFydHMucXVlcnkgPSBVUkkuYnVpbGRRdWVyeShkYXRhLCB0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJykgewogICAgICBidWlsZCA9IHZhbHVlOwogICAgfQoKICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIHJldHVybiB0aGlzOwogIH07CiAgcC5oYXNRdWVyeSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCB3aXRoaW5BcnJheSkgewogICAgdmFyIGRhdGEgPSBVUkkucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICByZXR1cm4gVVJJLmhhc1F1ZXJ5KGRhdGEsIG5hbWUsIHZhbHVlLCB3aXRoaW5BcnJheSk7CiAgfTsKICBwLnNldFNlYXJjaCA9IHAuc2V0UXVlcnk7CiAgcC5hZGRTZWFyY2ggPSBwLmFkZFF1ZXJ5OwogIHAucmVtb3ZlU2VhcmNoID0gcC5yZW1vdmVRdWVyeTsKICBwLmhhc1NlYXJjaCA9IHAuaGFzUXVlcnk7CgogIC8vIHNhbml0aXppbmcgVVJMcwogIHAubm9ybWFsaXplID0gZnVuY3Rpb24oKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB0aGlzCiAgICAgICAgLm5vcm1hbGl6ZVByb3RvY29sKGZhbHNlKQogICAgICAgIC5ub3JtYWxpemVQYXRoKGZhbHNlKQogICAgICAgIC5ub3JtYWxpemVRdWVyeShmYWxzZSkKICAgICAgICAubm9ybWFsaXplRnJhZ21lbnQoZmFsc2UpCiAgICAgICAgLmJ1aWxkKCk7CiAgICB9CgogICAgcmV0dXJuIHRoaXMKICAgICAgLm5vcm1hbGl6ZVByb3RvY29sKGZhbHNlKQogICAgICAubm9ybWFsaXplSG9zdG5hbWUoZmFsc2UpCiAgICAgIC5ub3JtYWxpemVQb3J0KGZhbHNlKQogICAgICAubm9ybWFsaXplUGF0aChmYWxzZSkKICAgICAgLm5vcm1hbGl6ZVF1ZXJ5KGZhbHNlKQogICAgICAubm9ybWFsaXplRnJhZ21lbnQoZmFsc2UpCiAgICAgIC5idWlsZCgpOwogIH07CiAgcC5ub3JtYWxpemVQcm90b2NvbCA9IGZ1bmN0aW9uKGJ1aWxkKSB7CiAgICBpZiAodHlwZW9mIHRoaXMuX3BhcnRzLnByb3RvY29sID09PSAnc3RyaW5nJykgewogICAgICB0aGlzLl9wYXJ0cy5wcm90b2NvbCA9IHRoaXMuX3BhcnRzLnByb3RvY29sLnRvTG93ZXJDYXNlKCk7CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9OwogIHAubm9ybWFsaXplSG9zdG5hbWUgPSBmdW5jdGlvbihidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLmhvc3RuYW1lKSB7CiAgICAgIGlmICh0aGlzLmlzKCdJRE4nKSAmJiBwdW55Y29kZSkgewogICAgICAgIHRoaXMuX3BhcnRzLmhvc3RuYW1lID0gcHVueWNvZGUudG9BU0NJSSh0aGlzLl9wYXJ0cy5ob3N0bmFtZSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5pcygnSVB2NicpICYmIElQdjYpIHsKICAgICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IElQdjYuYmVzdCh0aGlzLl9wYXJ0cy5ob3N0bmFtZSk7CiAgICAgIH0KCiAgICAgIHRoaXMuX3BhcnRzLmhvc3RuYW1lID0gdGhpcy5fcGFydHMuaG9zdG5hbWUudG9Mb3dlckNhc2UoKTsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgfQoKICAgIHJldHVybiB0aGlzOwogIH07CiAgcC5ub3JtYWxpemVQb3J0ID0gZnVuY3Rpb24oYnVpbGQpIHsKICAgIC8vIHJlbW92ZSBwb3J0IG9mIGl0J3MgdGhlIHByb3RvY29sJ3MgZGVmYXVsdAogICAgaWYgKHR5cGVvZiB0aGlzLl9wYXJ0cy5wcm90b2NvbCA9PT0gJ3N0cmluZycgJiYgdGhpcy5fcGFydHMucG9ydCA9PT0gVVJJLmRlZmF1bHRQb3J0c1t0aGlzLl9wYXJ0cy5wcm90b2NvbF0pIHsKICAgICAgdGhpcy5fcGFydHMucG9ydCA9IG51bGw7CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9OwogIHAubm9ybWFsaXplUGF0aCA9IGZ1bmN0aW9uKGJ1aWxkKSB7CiAgICB2YXIgX3BhdGggPSB0aGlzLl9wYXJ0cy5wYXRoOwogICAgaWYgKCFfcGF0aCkgewogICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHRoaXMuX3BhcnRzLnBhdGggPSBVUkkucmVjb2RlVXJuUGF0aCh0aGlzLl9wYXJ0cy5wYXRoKTsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBpZiAodGhpcy5fcGFydHMucGF0aCA9PT0gJy8nKSB7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQoKICAgIF9wYXRoID0gVVJJLnJlY29kZVBhdGgoX3BhdGgpOwoKICAgIHZhciBfd2FzX3JlbGF0aXZlOwogICAgdmFyIF9sZWFkaW5nUGFyZW50cyA9ICcnOwogICAgdmFyIF9wYXJlbnQsIF9wb3M7CgogICAgLy8gaGFuZGxlIHJlbGF0aXZlIHBhdGhzCiAgICBpZiAoX3BhdGguY2hhckF0KDApICE9PSAnLycpIHsKICAgICAgX3dhc19yZWxhdGl2ZSA9IHRydWU7CiAgICAgIF9wYXRoID0gJy8nICsgX3BhdGg7CiAgICB9CgogICAgLy8gaGFuZGxlIHJlbGF0aXZlIGZpbGVzIChhcyBvcHBvc2VkIHRvIGRpcmVjdG9yaWVzKQogICAgaWYgKF9wYXRoLnNsaWNlKC0zKSA9PT0gJy8uLicgfHwgX3BhdGguc2xpY2UoLTIpID09PSAnLy4nKSB7CiAgICAgIF9wYXRoICs9ICcvJzsKICAgIH0KCiAgICAvLyByZXNvbHZlIHNpbXBsZXMKICAgIF9wYXRoID0gX3BhdGgKICAgICAgLnJlcGxhY2UoLyhcLyhcLlwvKSspfChcL1wuJCkvZywgJy8nKQogICAgICAucmVwbGFjZSgvXC97Mix9L2csICcvJyk7CgogICAgLy8gcmVtZW1iZXIgbGVhZGluZyBwYXJlbnRzCiAgICBpZiAoX3dhc19yZWxhdGl2ZSkgewogICAgICBfbGVhZGluZ1BhcmVudHMgPSBfcGF0aC5zdWJzdHJpbmcoMSkubWF0Y2goL14oXC5cLlwvKSsvKSB8fCAnJzsKICAgICAgaWYgKF9sZWFkaW5nUGFyZW50cykgewogICAgICAgIF9sZWFkaW5nUGFyZW50cyA9IF9sZWFkaW5nUGFyZW50c1swXTsKICAgICAgfQogICAgfQoKICAgIC8vIHJlc29sdmUgcGFyZW50cwogICAgd2hpbGUgKHRydWUpIHsKICAgICAgX3BhcmVudCA9IF9wYXRoLnNlYXJjaCgvXC9cLlwuKFwvfCQpLyk7CiAgICAgIGlmIChfcGFyZW50ID09PSAtMSkgewogICAgICAgIC8vIG5vIG1vcmUgLi4vIHRvIHJlc29sdmUKICAgICAgICBicmVhazsKICAgICAgfSBlbHNlIGlmIChfcGFyZW50ID09PSAwKSB7CiAgICAgICAgLy8gdG9wIGxldmVsIGNhbm5vdCBiZSByZWxhdGl2ZSwgc2tpcCBpdAogICAgICAgIF9wYXRoID0gX3BhdGguc3Vic3RyaW5nKDMpOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICBfcG9zID0gX3BhdGguc3Vic3RyaW5nKDAsIF9wYXJlbnQpLmxhc3RJbmRleE9mKCcvJyk7CiAgICAgIGlmIChfcG9zID09PSAtMSkgewogICAgICAgIF9wb3MgPSBfcGFyZW50OwogICAgICB9CiAgICAgIF9wYXRoID0gX3BhdGguc3Vic3RyaW5nKDAsIF9wb3MpICsgX3BhdGguc3Vic3RyaW5nKF9wYXJlbnQgKyAzKTsKICAgIH0KCiAgICAvLyByZXZlcnQgdG8gcmVsYXRpdmUKICAgIGlmIChfd2FzX3JlbGF0aXZlICYmIHRoaXMuaXMoJ3JlbGF0aXZlJykpIHsKICAgICAgX3BhdGggPSBfbGVhZGluZ1BhcmVudHMgKyBfcGF0aC5zdWJzdHJpbmcoMSk7CiAgICB9CgogICAgdGhpcy5fcGFydHMucGF0aCA9IF9wYXRoOwogICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgcmV0dXJuIHRoaXM7CiAgfTsKICBwLm5vcm1hbGl6ZVBhdGhuYW1lID0gcC5ub3JtYWxpemVQYXRoOwogIHAubm9ybWFsaXplUXVlcnkgPSBmdW5jdGlvbihidWlsZCkgewogICAgaWYgKHR5cGVvZiB0aGlzLl9wYXJ0cy5xdWVyeSA9PT0gJ3N0cmluZycpIHsKICAgICAgaWYgKCF0aGlzLl9wYXJ0cy5xdWVyeS5sZW5ndGgpIHsKICAgICAgICB0aGlzLl9wYXJ0cy5xdWVyeSA9IG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5xdWVyeShVUkkucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSkpOwogICAgICB9CgogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfTsKICBwLm5vcm1hbGl6ZUZyYWdtZW50ID0gZnVuY3Rpb24oYnVpbGQpIHsKICAgIGlmICghdGhpcy5fcGFydHMuZnJhZ21lbnQpIHsKICAgICAgdGhpcy5fcGFydHMuZnJhZ21lbnQgPSBudWxsOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfTsKICBwLm5vcm1hbGl6ZVNlYXJjaCA9IHAubm9ybWFsaXplUXVlcnk7CiAgcC5ub3JtYWxpemVIYXNoID0gcC5ub3JtYWxpemVGcmFnbWVudDsKCiAgcC5pc284ODU5ID0gZnVuY3Rpb24oKSB7CiAgICAvLyBleHBlY3QgdW5pY29kZSBpbnB1dCwgaXNvODg1OSBvdXRwdXQKICAgIHZhciBlID0gVVJJLmVuY29kZTsKICAgIHZhciBkID0gVVJJLmRlY29kZTsKCiAgICBVUkkuZW5jb2RlID0gZXNjYXBlOwogICAgVVJJLmRlY29kZSA9IGRlY29kZVVSSUNvbXBvbmVudDsKICAgIHRyeSB7CiAgICAgIHRoaXMubm9ybWFsaXplKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBVUkkuZW5jb2RlID0gZTsKICAgICAgVVJJLmRlY29kZSA9IGQ7CiAgICB9CiAgICByZXR1cm4gdGhpczsKICB9OwoKICBwLnVuaWNvZGUgPSBmdW5jdGlvbigpIHsKICAgIC8vIGV4cGVjdCBpc284ODU5IGlucHV0LCB1bmljb2RlIG91dHB1dAogICAgdmFyIGUgPSBVUkkuZW5jb2RlOwogICAgdmFyIGQgPSBVUkkuZGVjb2RlOwoKICAgIFVSSS5lbmNvZGUgPSBzdHJpY3RFbmNvZGVVUklDb21wb25lbnQ7CiAgICBVUkkuZGVjb2RlID0gdW5lc2NhcGU7CiAgICB0cnkgewogICAgICB0aGlzLm5vcm1hbGl6ZSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgVVJJLmVuY29kZSA9IGU7CiAgICAgIFVSSS5kZWNvZGUgPSBkOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfTsKCiAgcC5yZWFkYWJsZSA9IGZ1bmN0aW9uKCkgewogICAgdmFyIHVyaSA9IHRoaXMuY2xvbmUoKTsKICAgIC8vIHJlbW92aW5nIHVzZXJuYW1lLCBwYXNzd29yZCwgYmVjYXVzZSB0aGV5IHNob3VsZG4ndCBiZSBkaXNwbGF5ZWQgYWNjb3JkaW5nIHRvIFJGQyAzOTg2CiAgICB1cmkudXNlcm5hbWUoJycpLnBhc3N3b3JkKCcnKS5ub3JtYWxpemUoKTsKICAgIHZhciB0ID0gJyc7CiAgICBpZiAodXJpLl9wYXJ0cy5wcm90b2NvbCkgewogICAgICB0ICs9IHVyaS5fcGFydHMucHJvdG9jb2wgKyAnOi8vJzsKICAgIH0KCiAgICBpZiAodXJpLl9wYXJ0cy5ob3N0bmFtZSkgewogICAgICBpZiAodXJpLmlzKCdwdW55Y29kZScpICYmIHB1bnljb2RlKSB7CiAgICAgICAgdCArPSBwdW55Y29kZS50b1VuaWNvZGUodXJpLl9wYXJ0cy5ob3N0bmFtZSk7CiAgICAgICAgaWYgKHVyaS5fcGFydHMucG9ydCkgewogICAgICAgICAgdCArPSAnOicgKyB1cmkuX3BhcnRzLnBvcnQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHQgKz0gdXJpLmhvc3QoKTsKICAgICAgfQogICAgfQoKICAgIGlmICh1cmkuX3BhcnRzLmhvc3RuYW1lICYmIHVyaS5fcGFydHMucGF0aCAmJiB1cmkuX3BhcnRzLnBhdGguY2hhckF0KDApICE9PSAnLycpIHsKICAgICAgdCArPSAnLyc7CiAgICB9CgogICAgdCArPSB1cmkucGF0aCh0cnVlKTsKICAgIGlmICh1cmkuX3BhcnRzLnF1ZXJ5KSB7CiAgICAgIHZhciBxID0gJyc7CiAgICAgIGZvciAodmFyIGkgPSAwLCBxcCA9IHVyaS5fcGFydHMucXVlcnkuc3BsaXQoJyYnKSwgbCA9IHFwLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgIHZhciBrdiA9IChxcFtpXSB8fCAnJykuc3BsaXQoJz0nKTsKICAgICAgICBxICs9ICcmJyArIFVSSS5kZWNvZGVRdWVyeShrdlswXSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSkKICAgICAgICAgIC5yZXBsYWNlKC8mL2csICclMjYnKTsKCiAgICAgICAgaWYgKGt2WzFdICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHEgKz0gJz0nICsgVVJJLmRlY29kZVF1ZXJ5KGt2WzFdLCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKQogICAgICAgICAgICAucmVwbGFjZSgvJi9nLCAnJTI2Jyk7CiAgICAgICAgfQogICAgICB9CiAgICAgIHQgKz0gJz8nICsgcS5zdWJzdHJpbmcoMSk7CiAgICB9CgogICAgdCArPSBVUkkuZGVjb2RlUXVlcnkodXJpLmhhc2goKSwgdHJ1ZSk7CiAgICByZXR1cm4gdDsKICB9OwoKICAvLyByZXNvbHZpbmcgcmVsYXRpdmUgYW5kIGFic29sdXRlIFVSTHMKICBwLmFic29sdXRlVG8gPSBmdW5jdGlvbihiYXNlKSB7CiAgICB2YXIgcmVzb2x2ZWQgPSB0aGlzLmNsb25lKCk7CiAgICB2YXIgcHJvcGVydGllcyA9IFsncHJvdG9jb2wnLCAndXNlcm5hbWUnLCAncGFzc3dvcmQnLCAnaG9zdG5hbWUnLCAncG9ydCddOwogICAgdmFyIGJhc2VkaXIsIGksIHA7CgogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VSTnMgZG8gbm90IGhhdmUgYW55IGdlbmVyYWxseSBkZWZpbmVkIGhpZXJhcmNoaWNhbCBjb21wb25lbnRzJyk7CiAgICB9CgogICAgaWYgKCEoYmFzZSBpbnN0YW5jZW9mIFVSSSkpIHsKICAgICAgYmFzZSA9IG5ldyBVUkkoYmFzZSk7CiAgICB9CgogICAgaWYgKCFyZXNvbHZlZC5fcGFydHMucHJvdG9jb2wpIHsKICAgICAgcmVzb2x2ZWQuX3BhcnRzLnByb3RvY29sID0gYmFzZS5fcGFydHMucHJvdG9jb2w7CiAgICB9CgogICAgaWYgKHRoaXMuX3BhcnRzLmhvc3RuYW1lKSB7CiAgICAgIHJldHVybiByZXNvbHZlZDsKICAgIH0KCiAgICBmb3IgKGkgPSAwOyAocCA9IHByb3BlcnRpZXNbaV0pOyBpKyspIHsKICAgICAgcmVzb2x2ZWQuX3BhcnRzW3BdID0gYmFzZS5fcGFydHNbcF07CiAgICB9CgogICAgaWYgKCFyZXNvbHZlZC5fcGFydHMucGF0aCkgewogICAgICByZXNvbHZlZC5fcGFydHMucGF0aCA9IGJhc2UuX3BhcnRzLnBhdGg7CiAgICAgIGlmICghcmVzb2x2ZWQuX3BhcnRzLnF1ZXJ5KSB7CiAgICAgICAgcmVzb2x2ZWQuX3BhcnRzLnF1ZXJ5ID0gYmFzZS5fcGFydHMucXVlcnk7CiAgICAgIH0KICAgIH0gZWxzZSBpZiAocmVzb2x2ZWQuX3BhcnRzLnBhdGguc3Vic3RyaW5nKC0yKSA9PT0gJy4uJykgewogICAgICByZXNvbHZlZC5fcGFydHMucGF0aCArPSAnLyc7CiAgICB9CgogICAgaWYgKHJlc29sdmVkLnBhdGgoKS5jaGFyQXQoMCkgIT09ICcvJykgewogICAgICBiYXNlZGlyID0gYmFzZS5kaXJlY3RvcnkoKTsKICAgICAgYmFzZWRpciA9IGJhc2VkaXIgPyBiYXNlZGlyIDogYmFzZS5wYXRoKCkuaW5kZXhPZignLycpID09PSAwID8gJy8nIDogJyc7CiAgICAgIHJlc29sdmVkLl9wYXJ0cy5wYXRoID0gKGJhc2VkaXIgPyAoYmFzZWRpciArICcvJykgOiAnJykgKyByZXNvbHZlZC5fcGFydHMucGF0aDsKICAgICAgcmVzb2x2ZWQubm9ybWFsaXplUGF0aCgpOwogICAgfQoKICAgIHJlc29sdmVkLmJ1aWxkKCk7CiAgICByZXR1cm4gcmVzb2x2ZWQ7CiAgfTsKICBwLnJlbGF0aXZlVG8gPSBmdW5jdGlvbihiYXNlKSB7CiAgICB2YXIgcmVsYXRpdmUgPSB0aGlzLmNsb25lKCkubm9ybWFsaXplKCk7CiAgICB2YXIgcmVsYXRpdmVQYXJ0cywgYmFzZVBhcnRzLCBjb21tb24sIHJlbGF0aXZlUGF0aCwgYmFzZVBhdGg7CgogICAgaWYgKHJlbGF0aXZlLl9wYXJ0cy51cm4pIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdVUk5zIGRvIG5vdCBoYXZlIGFueSBnZW5lcmFsbHkgZGVmaW5lZCBoaWVyYXJjaGljYWwgY29tcG9uZW50cycpOwogICAgfQoKICAgIGJhc2UgPSBuZXcgVVJJKGJhc2UpLm5vcm1hbGl6ZSgpOwogICAgcmVsYXRpdmVQYXJ0cyA9IHJlbGF0aXZlLl9wYXJ0czsKICAgIGJhc2VQYXJ0cyA9IGJhc2UuX3BhcnRzOwogICAgcmVsYXRpdmVQYXRoID0gcmVsYXRpdmUucGF0aCgpOwogICAgYmFzZVBhdGggPSBiYXNlLnBhdGgoKTsKCiAgICBpZiAocmVsYXRpdmVQYXRoLmNoYXJBdCgwKSAhPT0gJy8nKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcignVVJJIGlzIGFscmVhZHkgcmVsYXRpdmUnKTsKICAgIH0KCiAgICBpZiAoYmFzZVBhdGguY2hhckF0KDApICE9PSAnLycpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY2FsY3VsYXRlIGEgVVJJIHJlbGF0aXZlIHRvIGFub3RoZXIgcmVsYXRpdmUgVVJJJyk7CiAgICB9CgogICAgaWYgKHJlbGF0aXZlUGFydHMucHJvdG9jb2wgPT09IGJhc2VQYXJ0cy5wcm90b2NvbCkgewogICAgICByZWxhdGl2ZVBhcnRzLnByb3RvY29sID0gbnVsbDsKICAgIH0KCiAgICBpZiAocmVsYXRpdmVQYXJ0cy51c2VybmFtZSAhPT0gYmFzZVBhcnRzLnVzZXJuYW1lIHx8IHJlbGF0aXZlUGFydHMucGFzc3dvcmQgIT09IGJhc2VQYXJ0cy5wYXNzd29yZCkgewogICAgICByZXR1cm4gcmVsYXRpdmUuYnVpbGQoKTsKICAgIH0KCiAgICBpZiAocmVsYXRpdmVQYXJ0cy5wcm90b2NvbCAhPT0gbnVsbCB8fCByZWxhdGl2ZVBhcnRzLnVzZXJuYW1lICE9PSBudWxsIHx8IHJlbGF0aXZlUGFydHMucGFzc3dvcmQgIT09IG51bGwpIHsKICAgICAgcmV0dXJuIHJlbGF0aXZlLmJ1aWxkKCk7CiAgICB9CgogICAgaWYgKHJlbGF0aXZlUGFydHMuaG9zdG5hbWUgPT09IGJhc2VQYXJ0cy5ob3N0bmFtZSAmJiByZWxhdGl2ZVBhcnRzLnBvcnQgPT09IGJhc2VQYXJ0cy5wb3J0KSB7CiAgICAgIHJlbGF0aXZlUGFydHMuaG9zdG5hbWUgPSBudWxsOwogICAgICByZWxhdGl2ZVBhcnRzLnBvcnQgPSBudWxsOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHJlbGF0aXZlLmJ1aWxkKCk7CiAgICB9CgogICAgaWYgKHJlbGF0aXZlUGF0aCA9PT0gYmFzZVBhdGgpIHsKICAgICAgcmVsYXRpdmVQYXJ0cy5wYXRoID0gJyc7CiAgICAgIHJldHVybiByZWxhdGl2ZS5idWlsZCgpOwogICAgfQoKICAgIC8vIGRldGVybWluZSBjb21tb24gc3ViIHBhdGgKICAgIGNvbW1vbiA9IFVSSS5jb21tb25QYXRoKHJlbGF0aXZlUGF0aCwgYmFzZVBhdGgpOwoKICAgIC8vIElmIHRoZSBwYXRocyBoYXZlIG5vdGhpbmcgaW4gY29tbW9uLCByZXR1cm4gYSByZWxhdGl2ZSBVUkwgd2l0aCB0aGUgYWJzb2x1dGUgcGF0aC4KICAgIGlmICghY29tbW9uKSB7CiAgICAgIHJldHVybiByZWxhdGl2ZS5idWlsZCgpOwogICAgfQoKICAgIHZhciBwYXJlbnRzID0gYmFzZVBhcnRzLnBhdGgKICAgICAgLnN1YnN0cmluZyhjb21tb24ubGVuZ3RoKQogICAgICAucmVwbGFjZSgvW15cL10qJC8sICcnKQogICAgICAucmVwbGFjZSgvLio/XC8vZywgJy4uLycpOwoKICAgIHJlbGF0aXZlUGFydHMucGF0aCA9IChwYXJlbnRzICsgcmVsYXRpdmVQYXJ0cy5wYXRoLnN1YnN0cmluZyhjb21tb24ubGVuZ3RoKSkgfHwgJy4vJzsKCiAgICByZXR1cm4gcmVsYXRpdmUuYnVpbGQoKTsKICB9OwoKICAvLyBjb21wYXJpbmcgVVJJcwogIHAuZXF1YWxzID0gZnVuY3Rpb24odXJpKSB7CiAgICB2YXIgb25lID0gdGhpcy5jbG9uZSgpOwogICAgdmFyIHR3byA9IG5ldyBVUkkodXJpKTsKICAgIHZhciBvbmVfbWFwID0ge307CiAgICB2YXIgdHdvX21hcCA9IHt9OwogICAgdmFyIGNoZWNrZWQgPSB7fTsKICAgIHZhciBvbmVfcXVlcnksIHR3b19xdWVyeSwga2V5OwoKICAgIG9uZS5ub3JtYWxpemUoKTsKICAgIHR3by5ub3JtYWxpemUoKTsKCiAgICAvLyBleGFjdCBtYXRjaAogICAgaWYgKG9uZS50b1N0cmluZygpID09PSB0d28udG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICAvLyBleHRyYWN0IHF1ZXJ5IHN0cmluZwogICAgb25lX3F1ZXJ5ID0gb25lLnF1ZXJ5KCk7CiAgICB0d29fcXVlcnkgPSB0d28ucXVlcnkoKTsKICAgIG9uZS5xdWVyeSgnJyk7CiAgICB0d28ucXVlcnkoJycpOwoKICAgIC8vIGRlZmluaXRlbHkgbm90IGVxdWFsIGlmIG5vdCBldmVuIG5vbi1xdWVyeSBwYXJ0cyBtYXRjaAogICAgaWYgKG9uZS50b1N0cmluZygpICE9PSB0d28udG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgLy8gcXVlcnkgcGFyYW1ldGVycyBoYXZlIHRoZSBzYW1lIGxlbmd0aCwgZXZlbiBpZiB0aGV5J3JlIHBlcm11dGVkCiAgICBpZiAob25lX3F1ZXJ5Lmxlbmd0aCAhPT0gdHdvX3F1ZXJ5Lmxlbmd0aCkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgb25lX21hcCA9IFVSSS5wYXJzZVF1ZXJ5KG9uZV9xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICB0d29fbWFwID0gVVJJLnBhcnNlUXVlcnkodHdvX3F1ZXJ5LCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKCiAgICBmb3IgKGtleSBpbiBvbmVfbWFwKSB7CiAgICAgIGlmIChoYXNPd24uY2FsbChvbmVfbWFwLCBrZXkpKSB7CiAgICAgICAgaWYgKCFpc0FycmF5KG9uZV9tYXBba2V5XSkpIHsKICAgICAgICAgIGlmIChvbmVfbWFwW2tleV0gIT09IHR3b19tYXBba2V5XSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICghYXJyYXlzRXF1YWwob25lX21hcFtrZXldLCB0d29fbWFwW2tleV0pKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBjaGVja2VkW2tleV0gPSB0cnVlOwogICAgICB9CiAgICB9CgogICAgZm9yIChrZXkgaW4gdHdvX21hcCkgewogICAgICBpZiAoaGFzT3duLmNhbGwodHdvX21hcCwga2V5KSkgewogICAgICAgIGlmICghY2hlY2tlZFtrZXldKSB7CiAgICAgICAgICAvLyB0d28gY29udGFpbnMgYSBwYXJhbWV0ZXIgbm90IHByZXNlbnQgaW4gb25lCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRydWU7CiAgfTsKCiAgLy8gc3RhdGUKICBwLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycyA9IGZ1bmN0aW9uKHYpIHsKICAgIHRoaXMuX3BhcnRzLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycyA9ICEhdjsKICAgIHJldHVybiB0aGlzOwogIH07CgogIHAuZXNjYXBlUXVlcnlTcGFjZSA9IGZ1bmN0aW9uKHYpIHsKICAgIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UgPSAhIXY7CiAgICByZXR1cm4gdGhpczsKICB9OwoKICByZXR1cm4gVVJJOwp9KSk7Cgp9LHsiLi9JUHY2IjozLCIuL1NlY29uZExldmVsRG9tYWlucyI6NCwiLi9wdW55Y29kZSI6Nn1dLDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewooZnVuY3Rpb24gKGdsb2JhbCl7Ci8qISBodHRwczovL210aHMuYmUvcHVueWNvZGUgdjEuNC4wIGJ5IEBtYXRoaWFzICovCjsoZnVuY3Rpb24ocm9vdCkgewoKCS8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZXMgKi8KCXZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYKCQkhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzOwoJdmFyIGZyZWVNb2R1bGUgPSB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJgoJCSFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlOwoJdmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbDsKCWlmICgKCQlmcmVlR2xvYmFsLmdsb2JhbCA9PT0gZnJlZUdsb2JhbCB8fAoJCWZyZWVHbG9iYWwud2luZG93ID09PSBmcmVlR2xvYmFsIHx8CgkJZnJlZUdsb2JhbC5zZWxmID09PSBmcmVlR2xvYmFsCgkpIHsKCQlyb290ID0gZnJlZUdsb2JhbDsKCX0KCgkvKioKCSAqIFRoZSBgcHVueWNvZGVgIG9iamVjdC4KCSAqIEBuYW1lIHB1bnljb2RlCgkgKiBAdHlwZSBPYmplY3QKCSAqLwoJdmFyIHB1bnljb2RlLAoKCS8qKiBIaWdoZXN0IHBvc2l0aXZlIHNpZ25lZCAzMi1iaXQgZmxvYXQgdmFsdWUgKi8KCW1heEludCA9IDIxNDc0ODM2NDcsIC8vIGFrYS4gMHg3RkZGRkZGRiBvciAyXjMxLTEKCgkvKiogQm9vdHN0cmluZyBwYXJhbWV0ZXJzICovCgliYXNlID0gMzYsCgl0TWluID0gMSwKCXRNYXggPSAyNiwKCXNrZXcgPSAzOCwKCWRhbXAgPSA3MDAsCglpbml0aWFsQmlhcyA9IDcyLAoJaW5pdGlhbE4gPSAxMjgsIC8vIDB4ODAKCWRlbGltaXRlciA9ICctJywgLy8gJ1x4MkQnCgoJLyoqIFJlZ3VsYXIgZXhwcmVzc2lvbnMgKi8KCXJlZ2V4UHVueWNvZGUgPSAvXnhuLS0vLAoJcmVnZXhOb25BU0NJSSA9IC9bXlx4MjAtXHg3RV0vLCAvLyB1bnByaW50YWJsZSBBU0NJSSBjaGFycyArIG5vbi1BU0NJSSBjaGFycwoJcmVnZXhTZXBhcmF0b3JzID0gL1tceDJFXHUzMDAyXHVGRjBFXHVGRjYxXS9nLCAvLyBSRkMgMzQ5MCBzZXBhcmF0b3JzCgoJLyoqIEVycm9yIG1lc3NhZ2VzICovCgllcnJvcnMgPSB7CgkJJ292ZXJmbG93JzogJ092ZXJmbG93OiBpbnB1dCBuZWVkcyB3aWRlciBpbnRlZ2VycyB0byBwcm9jZXNzJywKCQknbm90LWJhc2ljJzogJ0lsbGVnYWwgaW5wdXQgPj0gMHg4MCAobm90IGEgYmFzaWMgY29kZSBwb2ludCknLAoJCSdpbnZhbGlkLWlucHV0JzogJ0ludmFsaWQgaW5wdXQnCgl9LAoKCS8qKiBDb252ZW5pZW5jZSBzaG9ydGN1dHMgKi8KCWJhc2VNaW51c1RNaW4gPSBiYXNlIC0gdE1pbiwKCWZsb29yID0gTWF0aC5mbG9vciwKCXN0cmluZ0Zyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGUsCgoJLyoqIFRlbXBvcmFyeSB2YXJpYWJsZSAqLwoJa2V5OwoKCS8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKCS8qKgoJICogQSBnZW5lcmljIGVycm9yIHV0aWxpdHkgZnVuY3Rpb24uCgkgKiBAcHJpdmF0ZQoJICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgVGhlIGVycm9yIHR5cGUuCgkgKiBAcmV0dXJucyB7RXJyb3J9IFRocm93cyBhIGBSYW5nZUVycm9yYCB3aXRoIHRoZSBhcHBsaWNhYmxlIGVycm9yIG1lc3NhZ2UuCgkgKi8KCWZ1bmN0aW9uIGVycm9yKHR5cGUpIHsKCQl0aHJvdyBuZXcgUmFuZ2VFcnJvcihlcnJvcnNbdHlwZV0pOwoJfQoKCS8qKgoJICogQSBnZW5lcmljIGBBcnJheSNtYXBgIHV0aWxpdHkgZnVuY3Rpb24uCgkgKiBAcHJpdmF0ZQoJICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci4KCSAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIGZvciBldmVyeSBhcnJheQoJICogaXRlbS4KCSAqIEByZXR1cm5zIHtBcnJheX0gQSBuZXcgYXJyYXkgb2YgdmFsdWVzIHJldHVybmVkIGJ5IHRoZSBjYWxsYmFjayBmdW5jdGlvbi4KCSAqLwoJZnVuY3Rpb24gbWFwKGFycmF5LCBmbikgewoJCXZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7CgkJdmFyIHJlc3VsdCA9IFtdOwoJCXdoaWxlIChsZW5ndGgtLSkgewoJCQlyZXN1bHRbbGVuZ3RoXSA9IGZuKGFycmF5W2xlbmd0aF0pOwoJCX0KCQlyZXR1cm4gcmVzdWx0OwoJfQoKCS8qKgoJICogQSBzaW1wbGUgYEFycmF5I21hcGAtbGlrZSB3cmFwcGVyIHRvIHdvcmsgd2l0aCBkb21haW4gbmFtZSBzdHJpbmdzIG9yIGVtYWlsCgkgKiBhZGRyZXNzZXMuCgkgKiBAcHJpdmF0ZQoJICogQHBhcmFtIHtTdHJpbmd9IGRvbWFpbiBUaGUgZG9tYWluIG5hbWUgb3IgZW1haWwgYWRkcmVzcy4KCSAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIGZvciBldmVyeQoJICogY2hhcmFjdGVyLgoJICogQHJldHVybnMge0FycmF5fSBBIG5ldyBzdHJpbmcgb2YgY2hhcmFjdGVycyByZXR1cm5lZCBieSB0aGUgY2FsbGJhY2sKCSAqIGZ1bmN0aW9uLgoJICovCglmdW5jdGlvbiBtYXBEb21haW4oc3RyaW5nLCBmbikgewoJCXZhciBwYXJ0cyA9IHN0cmluZy5zcGxpdCgnQCcpOwoJCXZhciByZXN1bHQgPSAnJzsKCQlpZiAocGFydHMubGVuZ3RoID4gMSkgewoJCQkvLyBJbiBlbWFpbCBhZGRyZXNzZXMsIG9ubHkgdGhlIGRvbWFpbiBuYW1lIHNob3VsZCBiZSBwdW55Y29kZWQuIExlYXZlCgkJCS8vIHRoZSBsb2NhbCBwYXJ0IChpLmUuIGV2ZXJ5dGhpbmcgdXAgdG8gYEBgKSBpbnRhY3QuCgkJCXJlc3VsdCA9IHBhcnRzWzBdICsgJ0AnOwoJCQlzdHJpbmcgPSBwYXJ0c1sxXTsKCQl9CgkJLy8gQXZvaWQgYHNwbGl0KHJlZ2V4KWAgZm9yIElFOCBjb21wYXRpYmlsaXR5LiBTZWUgIzE3LgoJCXN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJlZ2V4U2VwYXJhdG9ycywgJ1x4MkUnKTsKCQl2YXIgbGFiZWxzID0gc3RyaW5nLnNwbGl0KCcuJyk7CgkJdmFyIGVuY29kZWQgPSBtYXAobGFiZWxzLCBmbikuam9pbignLicpOwoJCXJldHVybiByZXN1bHQgKyBlbmNvZGVkOwoJfQoKCS8qKgoJICogQ3JlYXRlcyBhbiBhcnJheSBjb250YWluaW5nIHRoZSBudW1lcmljIGNvZGUgcG9pbnRzIG9mIGVhY2ggVW5pY29kZQoJICogY2hhcmFjdGVyIGluIHRoZSBzdHJpbmcuIFdoaWxlIEphdmFTY3JpcHQgdXNlcyBVQ1MtMiBpbnRlcm5hbGx5LAoJICogdGhpcyBmdW5jdGlvbiB3aWxsIGNvbnZlcnQgYSBwYWlyIG9mIHN1cnJvZ2F0ZSBoYWx2ZXMgKGVhY2ggb2Ygd2hpY2gKCSAqIFVDUy0yIGV4cG9zZXMgYXMgc2VwYXJhdGUgY2hhcmFjdGVycykgaW50byBhIHNpbmdsZSBjb2RlIHBvaW50LAoJICogbWF0Y2hpbmcgVVRGLTE2LgoJICogQHNlZSBgcHVueWNvZGUudWNzMi5lbmNvZGVgCgkgKiBAc2VlIDxodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC1lbmNvZGluZz4KCSAqIEBtZW1iZXJPZiBwdW55Y29kZS51Y3MyCgkgKiBAbmFtZSBkZWNvZGUKCSAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmcgVGhlIFVuaWNvZGUgaW5wdXQgc3RyaW5nIChVQ1MtMikuCgkgKiBAcmV0dXJucyB7QXJyYXl9IFRoZSBuZXcgYXJyYXkgb2YgY29kZSBwb2ludHMuCgkgKi8KCWZ1bmN0aW9uIHVjczJkZWNvZGUoc3RyaW5nKSB7CgkJdmFyIG91dHB1dCA9IFtdLAoJCSAgICBjb3VudGVyID0gMCwKCQkgICAgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aCwKCQkgICAgdmFsdWUsCgkJICAgIGV4dHJhOwoJCXdoaWxlIChjb3VudGVyIDwgbGVuZ3RoKSB7CgkJCXZhbHVlID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTsKCQkJaWYgKHZhbHVlID49IDB4RDgwMCAmJiB2YWx1ZSA8PSAweERCRkYgJiYgY291bnRlciA8IGxlbmd0aCkgewoJCQkJLy8gaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyCgkJCQlleHRyYSA9IHN0cmluZy5jaGFyQ29kZUF0KGNvdW50ZXIrKyk7CgkJCQlpZiAoKGV4dHJhICYgMHhGQzAwKSA9PSAweERDMDApIHsgLy8gbG93IHN1cnJvZ2F0ZQoJCQkJCW91dHB1dC5wdXNoKCgodmFsdWUgJiAweDNGRikgPDwgMTApICsgKGV4dHJhICYgMHgzRkYpICsgMHgxMDAwMCk7CgkJCQl9IGVsc2UgewoJCQkJCS8vIHVubWF0Y2hlZCBzdXJyb2dhdGU7IG9ubHkgYXBwZW5kIHRoaXMgY29kZSB1bml0LCBpbiBjYXNlIHRoZSBuZXh0CgkJCQkJLy8gY29kZSB1bml0IGlzIHRoZSBoaWdoIHN1cnJvZ2F0ZSBvZiBhIHN1cnJvZ2F0ZSBwYWlyCgkJCQkJb3V0cHV0LnB1c2godmFsdWUpOwoJCQkJCWNvdW50ZXItLTsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCW91dHB1dC5wdXNoKHZhbHVlKTsKCQkJfQoJCX0KCQlyZXR1cm4gb3V0cHV0OwoJfQoKCS8qKgoJICogQ3JlYXRlcyBhIHN0cmluZyBiYXNlZCBvbiBhbiBhcnJheSBvZiBudW1lcmljIGNvZGUgcG9pbnRzLgoJICogQHNlZSBgcHVueWNvZGUudWNzMi5kZWNvZGVgCgkgKiBAbWVtYmVyT2YgcHVueWNvZGUudWNzMgoJICogQG5hbWUgZW5jb2RlCgkgKiBAcGFyYW0ge0FycmF5fSBjb2RlUG9pbnRzIFRoZSBhcnJheSBvZiBudW1lcmljIGNvZGUgcG9pbnRzLgoJICogQHJldHVybnMge1N0cmluZ30gVGhlIG5ldyBVbmljb2RlIHN0cmluZyAoVUNTLTIpLgoJICovCglmdW5jdGlvbiB1Y3MyZW5jb2RlKGFycmF5KSB7CgkJcmV0dXJuIG1hcChhcnJheSwgZnVuY3Rpb24odmFsdWUpIHsKCQkJdmFyIG91dHB1dCA9ICcnOwoJCQlpZiAodmFsdWUgPiAweEZGRkYpIHsKCQkJCXZhbHVlIC09IDB4MTAwMDA7CgkJCQlvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlID4+PiAxMCAmIDB4M0ZGIHwgMHhEODAwKTsKCQkJCXZhbHVlID0gMHhEQzAwIHwgdmFsdWUgJiAweDNGRjsKCQkJfQoJCQlvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlKTsKCQkJcmV0dXJuIG91dHB1dDsKCQl9KS5qb2luKCcnKTsKCX0KCgkvKioKCSAqIENvbnZlcnRzIGEgYmFzaWMgY29kZSBwb2ludCBpbnRvIGEgZGlnaXQvaW50ZWdlci4KCSAqIEBzZWUgYGRpZ2l0VG9CYXNpYygpYAoJICogQHByaXZhdGUKCSAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlUG9pbnQgVGhlIGJhc2ljIG51bWVyaWMgY29kZSBwb2ludCB2YWx1ZS4KCSAqIEByZXR1cm5zIHtOdW1iZXJ9IFRoZSBudW1lcmljIHZhbHVlIG9mIGEgYmFzaWMgY29kZSBwb2ludCAoZm9yIHVzZSBpbgoJICogcmVwcmVzZW50aW5nIGludGVnZXJzKSBpbiB0aGUgcmFuZ2UgYDBgIHRvIGBiYXNlIC0gMWAsIG9yIGBiYXNlYCBpZgoJICogdGhlIGNvZGUgcG9pbnQgZG9lcyBub3QgcmVwcmVzZW50IGEgdmFsdWUuCgkgKi8KCWZ1bmN0aW9uIGJhc2ljVG9EaWdpdChjb2RlUG9pbnQpIHsKCQlpZiAoY29kZVBvaW50IC0gNDggPCAxMCkgewoJCQlyZXR1cm4gY29kZVBvaW50IC0gMjI7CgkJfQoJCWlmIChjb2RlUG9pbnQgLSA2NSA8IDI2KSB7CgkJCXJldHVybiBjb2RlUG9pbnQgLSA2NTsKCQl9CgkJaWYgKGNvZGVQb2ludCAtIDk3IDwgMjYpIHsKCQkJcmV0dXJuIGNvZGVQb2ludCAtIDk3OwoJCX0KCQlyZXR1cm4gYmFzZTsKCX0KCgkvKioKCSAqIENvbnZlcnRzIGEgZGlnaXQvaW50ZWdlciBpbnRvIGEgYmFzaWMgY29kZSBwb2ludC4KCSAqIEBzZWUgYGJhc2ljVG9EaWdpdCgpYAoJICogQHByaXZhdGUKCSAqIEBwYXJhbSB7TnVtYmVyfSBkaWdpdCBUaGUgbnVtZXJpYyB2YWx1ZSBvZiBhIGJhc2ljIGNvZGUgcG9pbnQuCgkgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgYmFzaWMgY29kZSBwb2ludCB3aG9zZSB2YWx1ZSAod2hlbiB1c2VkIGZvcgoJICogcmVwcmVzZW50aW5nIGludGVnZXJzKSBpcyBgZGlnaXRgLCB3aGljaCBuZWVkcyB0byBiZSBpbiB0aGUgcmFuZ2UKCSAqIGAwYCB0byBgYmFzZSAtIDFgLiBJZiBgZmxhZ2AgaXMgbm9uLXplcm8sIHRoZSB1cHBlcmNhc2UgZm9ybSBpcwoJICogdXNlZDsgZWxzZSwgdGhlIGxvd2VyY2FzZSBmb3JtIGlzIHVzZWQuIFRoZSBiZWhhdmlvciBpcyB1bmRlZmluZWQKCSAqIGlmIGBmbGFnYCBpcyBub24temVybyBhbmQgYGRpZ2l0YCBoYXMgbm8gdXBwZXJjYXNlIGZvcm0uCgkgKi8KCWZ1bmN0aW9uIGRpZ2l0VG9CYXNpYyhkaWdpdCwgZmxhZykgewoJCS8vICAwLi4yNSBtYXAgdG8gQVNDSUkgYS4ueiBvciBBLi5aCgkJLy8gMjYuLjM1IG1hcCB0byBBU0NJSSAwLi45CgkJcmV0dXJuIGRpZ2l0ICsgMjIgKyA3NSAqIChkaWdpdCA8IDI2KSAtICgoZmxhZyAhPSAwKSA8PCA1KTsKCX0KCgkvKioKCSAqIEJpYXMgYWRhcHRhdGlvbiBmdW5jdGlvbiBhcyBwZXIgc2VjdGlvbiAzLjQgb2YgUkZDIDM0OTIuCgkgKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzQ5MiNzZWN0aW9uLTMuNAoJICogQHByaXZhdGUKCSAqLwoJZnVuY3Rpb24gYWRhcHQoZGVsdGEsIG51bVBvaW50cywgZmlyc3RUaW1lKSB7CgkJdmFyIGsgPSAwOwoJCWRlbHRhID0gZmlyc3RUaW1lID8gZmxvb3IoZGVsdGEgLyBkYW1wKSA6IGRlbHRhID4+IDE7CgkJZGVsdGEgKz0gZmxvb3IoZGVsdGEgLyBudW1Qb2ludHMpOwoJCWZvciAoLyogbm8gaW5pdGlhbGl6YXRpb24gKi87IGRlbHRhID4gYmFzZU1pbnVzVE1pbiAqIHRNYXggPj4gMTsgayArPSBiYXNlKSB7CgkJCWRlbHRhID0gZmxvb3IoZGVsdGEgLyBiYXNlTWludXNUTWluKTsKCQl9CgkJcmV0dXJuIGZsb29yKGsgKyAoYmFzZU1pbnVzVE1pbiArIDEpICogZGVsdGEgLyAoZGVsdGEgKyBza2V3KSk7Cgl9CgoJLyoqCgkgKiBDb252ZXJ0cyBhIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMgdG8gYSBzdHJpbmcgb2YgVW5pY29kZQoJICogc3ltYm9scy4KCSAqIEBtZW1iZXJPZiBwdW55Y29kZQoJICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzLgoJICogQHJldHVybnMge1N0cmluZ30gVGhlIHJlc3VsdGluZyBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzLgoJICovCglmdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHsKCQkvLyBEb24ndCB1c2UgVUNTLTIKCQl2YXIgb3V0cHV0ID0gW10sCgkJICAgIGlucHV0TGVuZ3RoID0gaW5wdXQubGVuZ3RoLAoJCSAgICBvdXQsCgkJICAgIGkgPSAwLAoJCSAgICBuID0gaW5pdGlhbE4sCgkJICAgIGJpYXMgPSBpbml0aWFsQmlhcywKCQkgICAgYmFzaWMsCgkJICAgIGosCgkJICAgIGluZGV4LAoJCSAgICBvbGRpLAoJCSAgICB3LAoJCSAgICBrLAoJCSAgICBkaWdpdCwKCQkgICAgdCwKCQkgICAgLyoqIENhY2hlZCBjYWxjdWxhdGlvbiByZXN1bHRzICovCgkJICAgIGJhc2VNaW51c1Q7CgoJCS8vIEhhbmRsZSB0aGUgYmFzaWMgY29kZSBwb2ludHM6IGxldCBgYmFzaWNgIGJlIHRoZSBudW1iZXIgb2YgaW5wdXQgY29kZQoJCS8vIHBvaW50cyBiZWZvcmUgdGhlIGxhc3QgZGVsaW1pdGVyLCBvciBgMGAgaWYgdGhlcmUgaXMgbm9uZSwgdGhlbiBjb3B5CgkJLy8gdGhlIGZpcnN0IGJhc2ljIGNvZGUgcG9pbnRzIHRvIHRoZSBvdXRwdXQuCgoJCWJhc2ljID0gaW5wdXQubGFzdEluZGV4T2YoZGVsaW1pdGVyKTsKCQlpZiAoYmFzaWMgPCAwKSB7CgkJCWJhc2ljID0gMDsKCQl9CgoJCWZvciAoaiA9IDA7IGogPCBiYXNpYzsgKytqKSB7CgkJCS8vIGlmIGl0J3Mgbm90IGEgYmFzaWMgY29kZSBwb2ludAoJCQlpZiAoaW5wdXQuY2hhckNvZGVBdChqKSA+PSAweDgwKSB7CgkJCQllcnJvcignbm90LWJhc2ljJyk7CgkJCX0KCQkJb3V0cHV0LnB1c2goaW5wdXQuY2hhckNvZGVBdChqKSk7CgkJfQoKCQkvLyBNYWluIGRlY29kaW5nIGxvb3A6IHN0YXJ0IGp1c3QgYWZ0ZXIgdGhlIGxhc3QgZGVsaW1pdGVyIGlmIGFueSBiYXNpYyBjb2RlCgkJLy8gcG9pbnRzIHdlcmUgY29waWVkOyBzdGFydCBhdCB0aGUgYmVnaW5uaW5nIG90aGVyd2lzZS4KCgkJZm9yIChpbmRleCA9IGJhc2ljID4gMCA/IGJhc2ljICsgMSA6IDA7IGluZGV4IDwgaW5wdXRMZW5ndGg7IC8qIG5vIGZpbmFsIGV4cHJlc3Npb24gKi8pIHsKCgkJCS8vIGBpbmRleGAgaXMgdGhlIGluZGV4IG9mIHRoZSBuZXh0IGNoYXJhY3RlciB0byBiZSBjb25zdW1lZC4KCQkJLy8gRGVjb2RlIGEgZ2VuZXJhbGl6ZWQgdmFyaWFibGUtbGVuZ3RoIGludGVnZXIgaW50byBgZGVsdGFgLAoJCQkvLyB3aGljaCBnZXRzIGFkZGVkIHRvIGBpYC4gVGhlIG92ZXJmbG93IGNoZWNraW5nIGlzIGVhc2llcgoJCQkvLyBpZiB3ZSBpbmNyZWFzZSBgaWAgYXMgd2UgZ28sIHRoZW4gc3VidHJhY3Qgb2ZmIGl0cyBzdGFydGluZwoJCQkvLyB2YWx1ZSBhdCB0aGUgZW5kIHRvIG9idGFpbiBgZGVsdGFgLgoJCQlmb3IgKG9sZGkgPSBpLCB3ID0gMSwgayA9IGJhc2U7IC8qIG5vIGNvbmRpdGlvbiAqLzsgayArPSBiYXNlKSB7CgoJCQkJaWYgKGluZGV4ID49IGlucHV0TGVuZ3RoKSB7CgkJCQkJZXJyb3IoJ2ludmFsaWQtaW5wdXQnKTsKCQkJCX0KCgkJCQlkaWdpdCA9IGJhc2ljVG9EaWdpdChpbnB1dC5jaGFyQ29kZUF0KGluZGV4KyspKTsKCgkJCQlpZiAoZGlnaXQgPj0gYmFzZSB8fCBkaWdpdCA+IGZsb29yKChtYXhJbnQgLSBpKSAvIHcpKSB7CgkJCQkJZXJyb3IoJ292ZXJmbG93Jyk7CgkJCQl9CgoJCQkJaSArPSBkaWdpdCAqIHc7CgkJCQl0ID0gayA8PSBiaWFzID8gdE1pbiA6IChrID49IGJpYXMgKyB0TWF4ID8gdE1heCA6IGsgLSBiaWFzKTsKCgkJCQlpZiAoZGlnaXQgPCB0KSB7CgkJCQkJYnJlYWs7CgkJCQl9CgoJCQkJYmFzZU1pbnVzVCA9IGJhc2UgLSB0OwoJCQkJaWYgKHcgPiBmbG9vcihtYXhJbnQgLyBiYXNlTWludXNUKSkgewoJCQkJCWVycm9yKCdvdmVyZmxvdycpOwoJCQkJfQoKCQkJCXcgKj0gYmFzZU1pbnVzVDsKCgkJCX0KCgkJCW91dCA9IG91dHB1dC5sZW5ndGggKyAxOwoJCQliaWFzID0gYWRhcHQoaSAtIG9sZGksIG91dCwgb2xkaSA9PSAwKTsKCgkJCS8vIGBpYCB3YXMgc3VwcG9zZWQgdG8gd3JhcCBhcm91bmQgZnJvbSBgb3V0YCB0byBgMGAsCgkJCS8vIGluY3JlbWVudGluZyBgbmAgZWFjaCB0aW1lLCBzbyB3ZSdsbCBmaXggdGhhdCBub3c6CgkJCWlmIChmbG9vcihpIC8gb3V0KSA+IG1heEludCAtIG4pIHsKCQkJCWVycm9yKCdvdmVyZmxvdycpOwoJCQl9CgoJCQluICs9IGZsb29yKGkgLyBvdXQpOwoJCQlpICU9IG91dDsKCgkJCS8vIEluc2VydCBgbmAgYXQgcG9zaXRpb24gYGlgIG9mIHRoZSBvdXRwdXQKCQkJb3V0cHV0LnNwbGljZShpKyssIDAsIG4pOwoKCQl9CgoJCXJldHVybiB1Y3MyZW5jb2RlKG91dHB1dCk7Cgl9CgoJLyoqCgkgKiBDb252ZXJ0cyBhIHN0cmluZyBvZiBVbmljb2RlIHN5bWJvbHMgKGUuZy4gYSBkb21haW4gbmFtZSBsYWJlbCkgdG8gYQoJICogUHVueWNvZGUgc3RyaW5nIG9mIEFTQ0lJLW9ubHkgc3ltYm9scy4KCSAqIEBtZW1iZXJPZiBwdW55Y29kZQoJICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzLgoJICogQHJldHVybnMge1N0cmluZ30gVGhlIHJlc3VsdGluZyBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzLgoJICovCglmdW5jdGlvbiBlbmNvZGUoaW5wdXQpIHsKCQl2YXIgbiwKCQkgICAgZGVsdGEsCgkJICAgIGhhbmRsZWRDUENvdW50LAoJCSAgICBiYXNpY0xlbmd0aCwKCQkgICAgYmlhcywKCQkgICAgaiwKCQkgICAgbSwKCQkgICAgcSwKCQkgICAgaywKCQkgICAgdCwKCQkgICAgY3VycmVudFZhbHVlLAoJCSAgICBvdXRwdXQgPSBbXSwKCQkgICAgLyoqIGBpbnB1dExlbmd0aGAgd2lsbCBob2xkIHRoZSBudW1iZXIgb2YgY29kZSBwb2ludHMgaW4gYGlucHV0YC4gKi8KCQkgICAgaW5wdXRMZW5ndGgsCgkJICAgIC8qKiBDYWNoZWQgY2FsY3VsYXRpb24gcmVzdWx0cyAqLwoJCSAgICBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsCgkJICAgIGJhc2VNaW51c1QsCgkJICAgIHFNaW51c1Q7CgoJCS8vIENvbnZlcnQgdGhlIGlucHV0IGluIFVDUy0yIHRvIFVuaWNvZGUKCQlpbnB1dCA9IHVjczJkZWNvZGUoaW5wdXQpOwoKCQkvLyBDYWNoZSB0aGUgbGVuZ3RoCgkJaW5wdXRMZW5ndGggPSBpbnB1dC5sZW5ndGg7CgoJCS8vIEluaXRpYWxpemUgdGhlIHN0YXRlCgkJbiA9IGluaXRpYWxOOwoJCWRlbHRhID0gMDsKCQliaWFzID0gaW5pdGlhbEJpYXM7CgoJCS8vIEhhbmRsZSB0aGUgYmFzaWMgY29kZSBwb2ludHMKCQlmb3IgKGogPSAwOyBqIDwgaW5wdXRMZW5ndGg7ICsraikgewoJCQljdXJyZW50VmFsdWUgPSBpbnB1dFtqXTsKCQkJaWYgKGN1cnJlbnRWYWx1ZSA8IDB4ODApIHsKCQkJCW91dHB1dC5wdXNoKHN0cmluZ0Zyb21DaGFyQ29kZShjdXJyZW50VmFsdWUpKTsKCQkJfQoJCX0KCgkJaGFuZGxlZENQQ291bnQgPSBiYXNpY0xlbmd0aCA9IG91dHB1dC5sZW5ndGg7CgoJCS8vIGBoYW5kbGVkQ1BDb3VudGAgaXMgdGhlIG51bWJlciBvZiBjb2RlIHBvaW50cyB0aGF0IGhhdmUgYmVlbiBoYW5kbGVkOwoJCS8vIGBiYXNpY0xlbmd0aGAgaXMgdGhlIG51bWJlciBvZiBiYXNpYyBjb2RlIHBvaW50cy4KCgkJLy8gRmluaXNoIHRoZSBiYXNpYyBzdHJpbmcgLSBpZiBpdCBpcyBub3QgZW1wdHkgLSB3aXRoIGEgZGVsaW1pdGVyCgkJaWYgKGJhc2ljTGVuZ3RoKSB7CgkJCW91dHB1dC5wdXNoKGRlbGltaXRlcik7CgkJfQoKCQkvLyBNYWluIGVuY29kaW5nIGxvb3A6CgkJd2hpbGUgKGhhbmRsZWRDUENvdW50IDwgaW5wdXRMZW5ndGgpIHsKCgkJCS8vIEFsbCBub24tYmFzaWMgY29kZSBwb2ludHMgPCBuIGhhdmUgYmVlbiBoYW5kbGVkIGFscmVhZHkuIEZpbmQgdGhlIG5leHQKCQkJLy8gbGFyZ2VyIG9uZToKCQkJZm9yIChtID0gbWF4SW50LCBqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHsKCQkJCWN1cnJlbnRWYWx1ZSA9IGlucHV0W2pdOwoJCQkJaWYgKGN1cnJlbnRWYWx1ZSA+PSBuICYmIGN1cnJlbnRWYWx1ZSA8IG0pIHsKCQkJCQltID0gY3VycmVudFZhbHVlOwoJCQkJfQoJCQl9CgoJCQkvLyBJbmNyZWFzZSBgZGVsdGFgIGVub3VnaCB0byBhZHZhbmNlIHRoZSBkZWNvZGVyJ3MgPG4saT4gc3RhdGUgdG8gPG0sMD4sCgkJCS8vIGJ1dCBndWFyZCBhZ2FpbnN0IG92ZXJmbG93CgkJCWhhbmRsZWRDUENvdW50UGx1c09uZSA9IGhhbmRsZWRDUENvdW50ICsgMTsKCQkJaWYgKG0gLSBuID4gZmxvb3IoKG1heEludCAtIGRlbHRhKSAvIGhhbmRsZWRDUENvdW50UGx1c09uZSkpIHsKCQkJCWVycm9yKCdvdmVyZmxvdycpOwoJCQl9CgoJCQlkZWx0YSArPSAobSAtIG4pICogaGFuZGxlZENQQ291bnRQbHVzT25lOwoJCQluID0gbTsKCgkJCWZvciAoaiA9IDA7IGogPCBpbnB1dExlbmd0aDsgKytqKSB7CgkJCQljdXJyZW50VmFsdWUgPSBpbnB1dFtqXTsKCgkJCQlpZiAoY3VycmVudFZhbHVlIDwgbiAmJiArK2RlbHRhID4gbWF4SW50KSB7CgkJCQkJZXJyb3IoJ292ZXJmbG93Jyk7CgkJCQl9CgoJCQkJaWYgKGN1cnJlbnRWYWx1ZSA9PSBuKSB7CgkJCQkJLy8gUmVwcmVzZW50IGRlbHRhIGFzIGEgZ2VuZXJhbGl6ZWQgdmFyaWFibGUtbGVuZ3RoIGludGVnZXIKCQkJCQlmb3IgKHEgPSBkZWx0YSwgayA9IGJhc2U7IC8qIG5vIGNvbmRpdGlvbiAqLzsgayArPSBiYXNlKSB7CgkJCQkJCXQgPSBrIDw9IGJpYXMgPyB0TWluIDogKGsgPj0gYmlhcyArIHRNYXggPyB0TWF4IDogayAtIGJpYXMpOwoJCQkJCQlpZiAocSA8IHQpIHsKCQkJCQkJCWJyZWFrOwoJCQkJCQl9CgkJCQkJCXFNaW51c1QgPSBxIC0gdDsKCQkJCQkJYmFzZU1pbnVzVCA9IGJhc2UgLSB0OwoJCQkJCQlvdXRwdXQucHVzaCgKCQkJCQkJCXN0cmluZ0Zyb21DaGFyQ29kZShkaWdpdFRvQmFzaWModCArIHFNaW51c1QgJSBiYXNlTWludXNULCAwKSkKCQkJCQkJKTsKCQkJCQkJcSA9IGZsb29yKHFNaW51c1QgLyBiYXNlTWludXNUKTsKCQkJCQl9CgoJCQkJCW91dHB1dC5wdXNoKHN0cmluZ0Zyb21DaGFyQ29kZShkaWdpdFRvQmFzaWMocSwgMCkpKTsKCQkJCQliaWFzID0gYWRhcHQoZGVsdGEsIGhhbmRsZWRDUENvdW50UGx1c09uZSwgaGFuZGxlZENQQ291bnQgPT0gYmFzaWNMZW5ndGgpOwoJCQkJCWRlbHRhID0gMDsKCQkJCQkrK2hhbmRsZWRDUENvdW50OwoJCQkJfQoJCQl9CgoJCQkrK2RlbHRhOwoJCQkrK247CgoJCX0KCQlyZXR1cm4gb3V0cHV0LmpvaW4oJycpOwoJfQoKCS8qKgoJICogQ29udmVydHMgYSBQdW55Y29kZSBzdHJpbmcgcmVwcmVzZW50aW5nIGEgZG9tYWluIG5hbWUgb3IgYW4gZW1haWwgYWRkcmVzcwoJICogdG8gVW5pY29kZS4gT25seSB0aGUgUHVueWNvZGVkIHBhcnRzIG9mIHRoZSBpbnB1dCB3aWxsIGJlIGNvbnZlcnRlZCwgaS5lLgoJICogaXQgZG9lc24ndCBtYXR0ZXIgaWYgeW91IGNhbGwgaXQgb24gYSBzdHJpbmcgdGhhdCBoYXMgYWxyZWFkeSBiZWVuCgkgKiBjb252ZXJ0ZWQgdG8gVW5pY29kZS4KCSAqIEBtZW1iZXJPZiBwdW55Y29kZQoJICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBQdW55Y29kZWQgZG9tYWluIG5hbWUgb3IgZW1haWwgYWRkcmVzcyB0bwoJICogY29udmVydCB0byBVbmljb2RlLgoJICogQHJldHVybnMge1N0cmluZ30gVGhlIFVuaWNvZGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIGdpdmVuIFB1bnljb2RlCgkgKiBzdHJpbmcuCgkgKi8KCWZ1bmN0aW9uIHRvVW5pY29kZShpbnB1dCkgewoJCXJldHVybiBtYXBEb21haW4oaW5wdXQsIGZ1bmN0aW9uKHN0cmluZykgewoJCQlyZXR1cm4gcmVnZXhQdW55Y29kZS50ZXN0KHN0cmluZykKCQkJCT8gZGVjb2RlKHN0cmluZy5zbGljZSg0KS50b0xvd2VyQ2FzZSgpKQoJCQkJOiBzdHJpbmc7CgkJfSk7Cgl9CgoJLyoqCgkgKiBDb252ZXJ0cyBhIFVuaWNvZGUgc3RyaW5nIHJlcHJlc2VudGluZyBhIGRvbWFpbiBuYW1lIG9yIGFuIGVtYWlsIGFkZHJlc3MgdG8KCSAqIFB1bnljb2RlLiBPbmx5IHRoZSBub24tQVNDSUkgcGFydHMgb2YgdGhlIGRvbWFpbiBuYW1lIHdpbGwgYmUgY29udmVydGVkLAoJICogaS5lLiBpdCBkb2Vzbid0IG1hdHRlciBpZiB5b3UgY2FsbCBpdCB3aXRoIGEgZG9tYWluIHRoYXQncyBhbHJlYWR5IGluCgkgKiBBU0NJSS4KCSAqIEBtZW1iZXJPZiBwdW55Y29kZQoJICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBkb21haW4gbmFtZSBvciBlbWFpbCBhZGRyZXNzIHRvIGNvbnZlcnQsIGFzIGEKCSAqIFVuaWNvZGUgc3RyaW5nLgoJICogQHJldHVybnMge1N0cmluZ30gVGhlIFB1bnljb2RlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBnaXZlbiBkb21haW4gbmFtZSBvcgoJICogZW1haWwgYWRkcmVzcy4KCSAqLwoJZnVuY3Rpb24gdG9BU0NJSShpbnB1dCkgewoJCXJldHVybiBtYXBEb21haW4oaW5wdXQsIGZ1bmN0aW9uKHN0cmluZykgewoJCQlyZXR1cm4gcmVnZXhOb25BU0NJSS50ZXN0KHN0cmluZykKCQkJCT8gJ3huLS0nICsgZW5jb2RlKHN0cmluZykKCQkJCTogc3RyaW5nOwoJCX0pOwoJfQoKCS8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKCS8qKiBEZWZpbmUgdGhlIHB1YmxpYyBBUEkgKi8KCXB1bnljb2RlID0gewoJCS8qKgoJCSAqIEEgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgY3VycmVudCBQdW55Y29kZS5qcyB2ZXJzaW9uIG51bWJlci4KCQkgKiBAbWVtYmVyT2YgcHVueWNvZGUKCQkgKiBAdHlwZSBTdHJpbmcKCQkgKi8KCQkndmVyc2lvbic6ICcxLjMuMicsCgkJLyoqCgkJICogQW4gb2JqZWN0IG9mIG1ldGhvZHMgdG8gY29udmVydCBmcm9tIEphdmFTY3JpcHQncyBpbnRlcm5hbCBjaGFyYWN0ZXIKCQkgKiByZXByZXNlbnRhdGlvbiAoVUNTLTIpIHRvIFVuaWNvZGUgY29kZSBwb2ludHMsIGFuZCBiYWNrLgoJCSAqIEBzZWUgPGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9qYXZhc2NyaXB0LWVuY29kaW5nPgoJCSAqIEBtZW1iZXJPZiBwdW55Y29kZQoJCSAqIEB0eXBlIE9iamVjdAoJCSAqLwoJCSd1Y3MyJzogewoJCQknZGVjb2RlJzogdWNzMmRlY29kZSwKCQkJJ2VuY29kZSc6IHVjczJlbmNvZGUKCQl9LAoJCSdkZWNvZGUnOiBkZWNvZGUsCgkJJ2VuY29kZSc6IGVuY29kZSwKCQkndG9BU0NJSSc6IHRvQVNDSUksCgkJJ3RvVW5pY29kZSc6IHRvVW5pY29kZQoJfTsKCgkvKiogRXhwb3NlIGBwdW55Y29kZWAgKi8KCS8vIFNvbWUgQU1EIGJ1aWxkIG9wdGltaXplcnMsIGxpa2Ugci5qcywgY2hlY2sgZm9yIHNwZWNpZmljIGNvbmRpdGlvbiBwYXR0ZXJucwoJLy8gbGlrZSB0aGUgZm9sbG93aW5nOgoJaWYgKAoJCXR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJgoJCXR5cGVvZiBkZWZpbmUuYW1kID09ICdvYmplY3QnICYmCgkJZGVmaW5lLmFtZAoJKSB7CgkJZGVmaW5lKCdwdW55Y29kZScsIGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gcHVueWNvZGU7CgkJfSk7Cgl9IGVsc2UgaWYgKGZyZWVFeHBvcnRzICYmIGZyZWVNb2R1bGUpIHsKCQlpZiAobW9kdWxlLmV4cG9ydHMgPT0gZnJlZUV4cG9ydHMpIHsKCQkJLy8gaW4gTm9kZS5qcywgaW8uanMsIG9yIFJpbmdvSlMgdjAuOC4wKwoJCQlmcmVlTW9kdWxlLmV4cG9ydHMgPSBwdW55Y29kZTsKCQl9IGVsc2UgewoJCQkvLyBpbiBOYXJ3aGFsIG9yIFJpbmdvSlMgdjAuNy4wLQoJCQlmb3IgKGtleSBpbiBwdW55Y29kZSkgewoJCQkJcHVueWNvZGUuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAoZnJlZUV4cG9ydHNba2V5XSA9IHB1bnljb2RlW2tleV0pOwoJCQl9CgkJfQoJfSBlbHNlIHsKCQkvLyBpbiBSaGlubyBvciBhIHdlYiBicm93c2VyCgkJcm9vdC5wdW55Y29kZSA9IHB1bnljb2RlOwoJfQoKfSh0aGlzKSk7Cgp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkKfSx7fV0sNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Cid1c2Ugc3RyaWN0JzsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICAgIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSBhY3RpdmF0ZTsKCnZhciBfdXJpanMgPSByZXF1aXJlKCd1cmlqcycpOwoKdmFyIF91cmlqczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91cmlqcyk7Cgp2YXIgX0h5cGVydHlEaXNjb3ZlcnkgPSByZXF1aXJlKCdzZXJ2aWNlLWZyYW1ld29yay9kaXN0L0h5cGVydHlEaXNjb3ZlcnknKTsKCnZhciBfSHlwZXJ0eURpc2NvdmVyeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9IeXBlcnR5RGlzY292ZXJ5KTsKCnZhciBfU3luY2hlciA9IHJlcXVpcmUoJ3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlcicpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCnZhciBTdXJ2ZXkgPSB7CiAgICByZXN1bHRzOiBbXSwKCiAgICBfYWRkUmVzcG9uc2U6IGZ1bmN0aW9uIF9hZGRSZXNwb25zZShyZXN1bHQpIHsKICAgICAgICB0aGlzLnJlc3VsdHMgPSB0aGlzLnJlc3VsdHMuY29uY2F0KFtyZXN1bHRdKTsKICAgIH0KfTsKCnZhciBTdXJ2ZXlSZXBvcnRlciA9IHsKICAgIF9nZXRIeUZvcjogZnVuY3Rpb24gX2dldEh5Rm9yKHBhcnRpY2lwYW50cykgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwYXJ0aWNpcGFudHMubWFwKGZ1bmN0aW9uIChwKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5oeXBlcnR5RGlzY292ZXJ5U2VydmljZS5kaXNjb3Zlckh5cGVydGllc1BlclVzZXIocC5lbWFpbCwgcC5kb21haW4pLnRoZW4oZnVuY3Rpb24gKGh5cGVydGllcykgewogICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGh5cGVydGllcykubWFwKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBrZXk6IGtleSwgZGVzY3JpcHRvcjogaHlwZXJ0aWVzW2tleV0uZGVzY3JpcHRvciwgbGFzdE1vZGlmaWVkOiBoeXBlcnRpZXNba2V5XS5sYXN0TW9kaWZpZWQgfTsKICAgICAgICAgICAgICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoZGVzYykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBkZXNjLmRlc2NyaXB0b3IuZW5kc1dpdGgoJ1N1cnZleU9ic2VydmVyJyk7CiAgICAgICAgICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGEubGFzdE1vZGlmaWVkKSA8IG5ldyBEYXRlKGIubGFzdE1vZGlmaWVkKSA/IDEgOiAtMTsKICAgICAgICAgICAgICAgIH0pLnNoaWZ0KCkua2V5OwogICAgICAgICAgICB9KTsKICAgICAgICB9KSk7CiAgICB9LAogICAgX2NyZWF0ZVN5bmNoZXI6IGZ1bmN0aW9uIF9jcmVhdGVTeW5jaGVyKHN1cnZleSwgaHlwZXJ0aWVzKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3luY2hlci5jcmVhdGUodGhpcy5vYmplY3REZXNjVVJMLCBoeXBlcnRpZXMsIHsgc3VydmV5OiBzdXJ2ZXkgfSk7CiAgICB9LAogICAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoc3VydmV5LCBwYXJ0aWNpcGFudHMpIHsKICAgICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgICAgcmV0dXJuIHRoaXMuX2dldEh5Rm9yKHBhcnRpY2lwYW50cykudGhlbihmdW5jdGlvbiAoaHlwZXJ0aWVzKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIuX2NyZWF0ZVN5bmNoZXIoc3VydmV5LCBoeXBlcnRpZXMpOwogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGFPYmplY3RSZXBvcnRlcikgewogICAgICAgICAgICBkYXRhT2JqZWN0UmVwb3J0ZXIub25TdWJzY3JpcHRpb24oZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZXZlbnQuYWNjZXB0KCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBkYXRhT2JqZWN0UmVwb3J0ZXIub25BZGRDaGlsZChmdW5jdGlvbiAoZGF0YUNoaWxkKSB7CiAgICAgICAgICAgICAgICBTdXJ2ZXkuX2FkZFJlc3BvbnNlKGRhdGFDaGlsZC52YWx1ZS5yZXNwb25zZSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBTdXJ2ZXkuY29uZmlnID0gc3VydmV5OwogICAgICAgICAgICByZXR1cm4gU3VydmV5OwogICAgICAgIH0pOwogICAgfQp9OwoKdmFyIFN1cnZleVJlcG9ydGVyRmFjdG9yeSA9IGZ1bmN0aW9uIFN1cnZleVJlcG9ydGVyRmFjdG9yeShoeXBlcnR5VVJMLCBidXMsIGNvbmZpZykgewogICAgdmFyIHVyaSA9IG5ldyBfdXJpanMyLmRlZmF1bHQoaHlwZXJ0eVVSTCk7CiAgICB2YXIgaHlwZXJ0eURpc2NvdmVyeSA9IG5ldyBfSHlwZXJ0eURpc2NvdmVyeTIuZGVmYXVsdChoeXBlcnR5VVJMLCBidXMpOwogICAgdmFyIHN5bmNoZXIgPSBuZXcgX1N5bmNoZXIuU3luY2hlcihoeXBlcnR5VVJMLCBidXMsIGNvbmZpZyk7CiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKFN1cnZleVJlcG9ydGVyKSwgewogICAgICAgIGh5cGVydHlEaXNjb3ZlcnlTZXJ2aWNlOiBoeXBlcnR5RGlzY292ZXJ5LAogICAgICAgIG9iamVjdERlc2NVUkw6ICdoeXBlcnR5LWNhdGFsb2d1ZTovL2NhdGFsb2d1ZS4nICsgdXJpLmhvc3RuYW1lKCkgKyAnLy53ZWxsLWtub3duL2RhdGFzY2hlbWEvQ29tbXVuaWNhdGlvbicsCiAgICAgICAgaHlwZXJ0eVVSTDogaHlwZXJ0eVVSTCwKICAgICAgICBzeW5jaGVyOiBzeW5jaGVyCiAgICB9KTsKfTsKCmZ1bmN0aW9uIGFjdGl2YXRlKGh5cGVydHlVUkwsIGJ1cywgY29uZmlnKSB7CiAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICdTdXJ2ZXlSZXBvcnRlcicsCiAgICAgICAgaW5zdGFuY2U6IFN1cnZleVJlcG9ydGVyRmFjdG9yeShoeXBlcnR5VVJMLCBidXMsIGNvbmZpZykKICAgIH07Cn0KbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Cgp9LHsic2VydmljZS1mcmFtZXdvcmsvZGlzdC9IeXBlcnR5RGlzY292ZXJ5IjoxLCJzZXJ2aWNlLWZyYW1ld29yay9kaXN0L1N5bmNoZXIiOjIsInVyaWpzIjo1fV19LHt9LFs3XSkoNykKfSk7",
      "sourceCodeClassname": "SurveyReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10015,
    "version": "0.1",
    "description": "Description of SurveyReporter",
    "objectName": "SurveyReporter",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HelloWorldDiscoveryObserver": {
    "sourcePackage": {
      "sourceCode": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuYWN0aXZhdGUgPSBmKCl9fSkoZnVuY3Rpb24oKXt2YXIgZGVmaW5lLG1vZHVsZSxleHBvcnRzO3JldHVybiAoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitvKyInIik7dGhyb3cgZi5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKKGZ1bmN0aW9uIChnbG9iYWwpewovKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi8NCg0KLy8gRGlzdHJpYnV0aW9uIGZpbGUgZm9yIERpc2NvdmVyeS5qcyANCi8vIHZlcnNpb246IDAuMy4wDQovLyBMYXN0IGJ1aWxkOiBUaHUgSnVsIDIxIDIwMTYgMTU6MzE6MjAgR01UKzAxMDAgKFdFU1QpDQoNCiFmdW5jdGlvbihlKXtpZigib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlKW1vZHVsZS5leHBvcnRzPWUoKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7dmFyIHQ7dD0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsdC5EaXNjb3Zlcnk9ZSgpfX0oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24gZSh0LHIsbil7ZnVuY3Rpb24gbyhzLGMpe2lmKCFyW3NdKXtpZighdFtzXSl7dmFyIHU9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWMmJnUpcmV0dXJuIHUocywhMCk7aWYoaSlyZXR1cm4gaShzLCEwKTt2YXIgYT1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitzKyInIik7dGhyb3cgYS5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixhfXZhciBmPXJbc109e2V4cG9ydHM6e319O3Rbc11bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIHI9dFtzXVsxXVtlXTtyZXR1cm4gbyhyP3I6ZSl9LGYsZi5leHBvcnRzLGUsdCxyLG4pfXJldHVybiByW3NdLmV4cG9ydHN9Zm9yKHZhciBpPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLHM9MDtzPG4ubGVuZ3RoO3MrKylvKG5bc10pO3JldHVybiBvfSh7MTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSI6N31dLDI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5Ijo4fV0sMzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cyIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cyI6OX1dLDQ6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIjoxMH1dLDU6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ci5fX2VzTW9kdWxlPSEwLHJbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0se31dLDY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG89ZSgiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksaT1uKG8pO3JbImRlZmF1bHQiXT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG49dFtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbiYmKG4ud3JpdGFibGU9ITApLCgwLGlbImRlZmF1bHQiXSkoZSxuLmtleSxuKX19cmV0dXJuIGZ1bmN0aW9uKHQscixuKXtyZXR1cm4gciYmZSh0LnByb3RvdHlwZSxyKSxuJiZlKHQsbiksdH19KCl9LHsiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5IjoyfV0sNzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKSxvPW4uSlNPTnx8KG4uSlNPTj17c3RyaW5naWZ5OkpTT04uc3RyaW5naWZ5fSk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvLnN0cmluZ2lmeS5hcHBseShvLGFyZ3VtZW50cyl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjE4fV0sODpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiKTt2YXIgbj1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZGVmaW5lUHJvcGVydHkoZSx0LHIpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxOCwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSI6NzR9XSw5OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5rZXlzfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjE4LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI6NzV9XSwxMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciKSxlKCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiKSxlKCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiKSxlKCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIiksdC5leHBvcnRzPWUoIi4uL21vZHVsZXMvX2NvcmUiKS5Qcm9taXNlfSx7Ii4uL21vZHVsZXMvX2NvcmUiOjE4LCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjo3NiwiLi4vbW9kdWxlcy9lczYucHJvbWlzZSI6NzcsIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6NzgsIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI6Nzl9XSwxMTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIGZ1bmN0aW9uISIpO3JldHVybiBlfX0se31dLDEyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKCl7fX0se31dLDEzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCEoZSBpbnN0YW5jZW9mIHQpfHx2b2lkIDAhPT1uJiZuIGluIGUpdGhyb3cgVHlwZUVycm9yKHIrIjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIGV9fSx7fV0sMTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIW4oZSkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYW4gb2JqZWN0ISIpO3JldHVybiBlfX0seyIuL19pcy1vYmplY3QiOjM1fV0sMTU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pb2JqZWN0Iiksbz1lKCIuL190by1sZW5ndGgiKSxpPWUoIi4vX3RvLWluZGV4Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGMsdT1uKHQpLGE9byh1Lmxlbmd0aCksZj1pKHMsYSk7aWYoZSYmciE9cil7Zm9yKDthPmY7KWlmKGM9dVtmKytdLGMhPWMpcmV0dXJuITB9ZWxzZSBmb3IoO2E+ZjtmKyspaWYoKGV8fGYgaW4gdSkmJnVbZl09PT1yKXJldHVybiBlfHxmfHwwO3JldHVybiFlJiYtMX19fSx7Ii4vX3RvLWluZGV4Ijo2NCwiLi9fdG8taW9iamVjdCI6NjYsIi4vX3RvLWxlbmd0aCI6Njd9XSwxNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2NvZiIpLG89ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIiksaT0iQXJndW1lbnRzIj09bihmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpLHM9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2gocil7fX07dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0LHIsYztyZXR1cm4gdm9pZCAwPT09ZT8iVW5kZWZpbmVkIjpudWxsPT09ZT8iTnVsbCI6InN0cmluZyI9PXR5cGVvZihyPXModD1PYmplY3QoZSksbykpP3I6aT9uKHQpOiJPYmplY3QiPT0oYz1uKHQpKSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuY2FsbGVlPyJBcmd1bWVudHMiOmN9fSx7Ii4vX2NvZiI6MTcsIi4vX3drcyI6NzF9XSwxNzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXt9LnRvU3RyaW5nO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbi5jYWxsKGUpLnNsaWNlKDgsLTEpfX0se31dLDE4OltmdW5jdGlvbihlLHQscil7dmFyIG49dC5leHBvcnRzPXt2ZXJzaW9uOiIyLjQuMCJ9OyJudW1iZXIiPT10eXBlb2YgX19lJiYoX19lPW4pfSx7fV0sMTk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hLWZ1bmN0aW9uIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGUuY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsbil7cmV0dXJuIGUuY2FsbCh0LHIsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixuLG8pe3JldHVybiBlLmNhbGwodCxyLG4sbyl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSx7Ii4vX2EtZnVuY3Rpb24iOjExfV0sMjA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gICIrZSk7cmV0dXJuIGV9fSx7fV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9IWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2ZhaWxzIjoyNX1dLDIyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iiksbz1lKCIuL19nbG9iYWwiKS5kb2N1bWVudCxpPW4obykmJm4oby5jcmVhdGVFbGVtZW50KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/by5jcmVhdGVFbGVtZW50KGUpOnt9fX0seyIuL19nbG9iYWwiOjI3LCIuL19pcy1vYmplY3QiOjM1fV0sMjM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZiIuc3BsaXQoIiwiKX0se31dLDI0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19jdHgiKSxzPWUoIi4vX2hpZGUiKSxjPSJwcm90b3R5cGUiLHU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhLGYsXyxsPWUmdS5GLGQ9ZSZ1LkcscD1lJnUuUyx2PWUmdS5QLHk9ZSZ1LkIsaD1lJnUuVyxiPWQ/bzpvW3RdfHwob1t0XT17fSksbT1iW2NdLGc9ZD9uOnA/blt0XTooblt0XXx8e30pW2NdO2QmJihyPXQpO2ZvcihhIGluIHIpZj0hbCYmZyYmdm9pZCAwIT09Z1thXSxmJiZhIGluIGJ8fChfPWY/Z1thXTpyW2FdLGJbYV09ZCYmImZ1bmN0aW9uIiE9dHlwZW9mIGdbYV0/clthXTp5JiZmP2koXyxuKTpoJiZnW2FdPT1fP2Z1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKHQscixuKXtpZih0aGlzIGluc3RhbmNlb2YgZSl7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IGU7Y2FzZSAxOnJldHVybiBuZXcgZSh0KTtjYXNlIDI6cmV0dXJuIG5ldyBlKHQscil9cmV0dXJuIG5ldyBlKHQscixuKX1yZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiB0W2NdPWVbY10sdH0oXyk6diYmImZ1bmN0aW9uIj09dHlwZW9mIF8/aShGdW5jdGlvbi5jYWxsLF8pOl8sdiYmKChiLnZpcnR1YWx8fChiLnZpcnR1YWw9e30pKVthXT1fLGUmdS5SJiZtJiYhbVthXSYmcyhtLGEsXykpKX07dS5GPTEsdS5HPTIsdS5TPTQsdS5QPTgsdS5CPTE2LHUuVz0zMix1LlU9NjQsdS5SPTEyOCx0LmV4cG9ydHM9dX0seyIuL19jb3JlIjoxOCwiLi9fY3R4IjoxOSwiLi9fZ2xvYmFsIjoyNywiLi9faGlkZSI6Mjl9XSwyNTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuISFlKCl9Y2F0Y2godCl7cmV0dXJuITB9fX0se31dLDI2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fY3R4Iiksbz1lKCIuL19pdGVyLWNhbGwiKSxpPWUoIi4vX2lzLWFycmF5LWl0ZXIiKSxzPWUoIi4vX2FuLW9iamVjdCIpLGM9ZSgiLi9fdG8tbGVuZ3RoIiksdT1lKCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCIpLGE9e30sZj17fSxyPXQuZXhwb3J0cz1mdW5jdGlvbihlLHQscixfLGwpe3ZhciBkLHAsdix5LGg9bD9mdW5jdGlvbigpe3JldHVybiBlfTp1KGUpLGI9bihyLF8sdD8yOjEpLG09MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgaCl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBpdGVyYWJsZSEiKTtpZihpKGgpKXtmb3IoZD1jKGUubGVuZ3RoKTtkPm07bSsrKWlmKHk9dD9iKHMocD1lW21dKVswXSxwWzFdKTpiKGVbbV0pLHk9PT1hfHx5PT09ZilyZXR1cm4geX1lbHNlIGZvcih2PWguY2FsbChlKTshKHA9di5uZXh0KCkpLmRvbmU7KWlmKHk9byh2LGIscC52YWx1ZSx0KSx5PT09YXx8eT09PWYpcmV0dXJuIHl9O3IuQlJFQUs9YSxyLlJFVFVSTj1mfSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2N0eCI6MTksIi4vX2lzLWFycmF5LWl0ZXIiOjM0LCIuL19pdGVyLWNhbGwiOjM2LCIuL190by1sZW5ndGgiOjY3LCIuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCI6NzJ9XSwyNzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXQuZXhwb3J0cz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93Lk1hdGg9PU1hdGg/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZi5NYXRoPT1NYXRoP3NlbGY6RnVuY3Rpb24oInJldHVybiB0aGlzIikoKTsibnVtYmVyIj09dHlwZW9mIF9fZyYmKF9fZz1uKX0se31dLDI4OltmdW5jdGlvbihlLHQscil7dmFyIG49e30uaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY2FsbChlLHQpfX0se31dLDI5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWRwIiksbz1lKCIuL19wcm9wZXJ0eS1kZXNjIik7dC5leHBvcnRzPWUoIi4vX2Rlc2NyaXB0b3JzIik/ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmYoZSx0LG8oMSxyKSl9OmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZVt0XT1yLGV9fSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fb2JqZWN0LWRwIjo0NSwiLi9fcHJvcGVydHktZGVzYyI6NTN9XSwzMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKCIuL19nbG9iYWwiKS5kb2N1bWVudCYmZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fSx7Ii4vX2dsb2JhbCI6Mjd9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZGVzY3JpcHRvcnMiKSYmIWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KGUoIi4vX2RvbS1jcmVhdGUiKSgiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19kb20tY3JlYXRlIjoyMiwiLi9fZmFpbHMiOjI1fV0sMzI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXZvaWQgMD09PXI7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG4/ZSgpOmUuY2FsbChyKTtjYXNlIDE6cmV0dXJuIG4/ZSh0WzBdKTplLmNhbGwocix0WzBdKTtjYXNlIDI6cmV0dXJuIG4/ZSh0WzBdLHRbMV0pOmUuY2FsbChyLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSx0WzNdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSx0WzNdKX1yZXR1cm4gZS5hcHBseShyLHQpfX0se31dLDMzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fY29mIik7dC5leHBvcnRzPU9iamVjdCgieiIpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApP09iamVjdDpmdW5jdGlvbihlKXtyZXR1cm4iU3RyaW5nIj09bihlKT9lLnNwbGl0KCIiKTpPYmplY3QoZSl9fSx7Ii4vX2NvZiI6MTd9XSwzNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2l0ZXJhdG9ycyIpLG89ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksaT1BcnJheS5wcm90b3R5cGU7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT1lJiYobi5BcnJheT09PWV8fGlbb109PT1lKX19LHsiLi9faXRlcmF0b3JzIjo0MSwiLi9fd2tzIjo3MX1dLDM1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJvYmplY3QiPT10eXBlb2YgZT9udWxsIT09ZToiZnVuY3Rpb24iPT10eXBlb2YgZX19LHt9XSwzNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixvKXt0cnl7cmV0dXJuIG8/dChuKHIpWzBdLHJbMV0pOnQocil9Y2F0Y2goaSl7dmFyIHM9ZVsicmV0dXJuIl07dGhyb3cgdm9pZCAwIT09cyYmbihzLmNhbGwoZSkpLGl9fX0seyIuL19hbi1vYmplY3QiOjE0fV0sMzc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpLG89ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxzPXt9O2UoIi4vX2hpZGUiKShzLGUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UucHJvdG90eXBlPW4ocyx7bmV4dDpvKDEscil9KSxpKGUsdCsiIEl0ZXJhdG9yIil9fSx7Ii4vX2hpZGUiOjI5LCIuL19vYmplY3QtY3JlYXRlIjo0NCwiLi9fcHJvcGVydHktZGVzYyI6NTMsIi4vX3NldC10by1zdHJpbmctdGFnIjo1OCwiLi9fd2tzIjo3MX1dLDM4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX2xpYnJhcnkiKSxvPWUoIi4vX2V4cG9ydCIpLGk9ZSgiLi9fcmVkZWZpbmUiKSxzPWUoIi4vX2hpZGUiKSxjPWUoIi4vX2hhcyIpLHU9ZSgiLi9faXRlcmF0b3JzIiksYT1lKCIuL19pdGVyLWNyZWF0ZSIpLGY9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxfPWUoIi4vX29iamVjdC1ncG8iKSxsPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGQ9IShbXS5rZXlzJiYibmV4dCJpbltdLmtleXMoKSkscD0iQEBpdGVyYXRvciIsdj0ia2V5cyIseT0idmFsdWVzIixoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixiLG0sZyxqKXthKHIsdCxiKTt2YXIgeCx3LGssTz1mdW5jdGlvbihlKXtpZighZCYmZSBpbiBTKXJldHVybiBTW2VdO3N3aXRjaChlKXtjYXNlIHY6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9O2Nhc2UgeTpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fSxNPXQrIiBJdGVyYXRvciIsUD1tPT15LFU9ITEsUz1lLnByb3RvdHlwZSxSPVNbbF18fFNbcF18fG0mJlNbbV0sRT1SfHxPKG0pLEw9bT9QP08oImVudHJpZXMiKTpFOnZvaWQgMCxUPSJBcnJheSI9PXQ/Uy5lbnRyaWVzfHxSOlI7aWYoVCYmKGs9XyhULmNhbGwobmV3IGUpKSxrIT09T2JqZWN0LnByb3RvdHlwZSYmKGYoayxNLCEwKSxufHxjKGssbCl8fHMoayxsLGgpKSksUCYmUiYmUi5uYW1lIT09eSYmKFU9ITAsRT1mdW5jdGlvbigpe3JldHVybiBSLmNhbGwodGhpcyl9KSxuJiYhanx8IWQmJiFVJiZTW2xdfHxzKFMsbCxFKSx1W3RdPUUsdVtNXT1oLG0paWYoeD17dmFsdWVzOlA/RTpPKHkpLGtleXM6Zz9FOk8odiksZW50cmllczpMfSxqKWZvcih3IGluIHgpdyBpbiBTfHxpKFMsdyx4W3ddKTtlbHNlIG8oby5QK28uRiooZHx8VSksdCx4KTtyZXR1cm4geH19LHsiLi9fZXhwb3J0IjoyNCwiLi9faGFzIjoyOCwiLi9faGlkZSI6MjksIi4vX2l0ZXItY3JlYXRlIjozNywiLi9faXRlcmF0b3JzIjo0MSwiLi9fbGlicmFyeSI6NDIsIi4vX29iamVjdC1ncG8iOjQ4LCIuL19yZWRlZmluZSI6NTUsIi4vX3NldC10by1zdHJpbmctdGFnIjo1OCwiLi9fd2tzIjo3MX1dLDM5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksbz0hMTt0cnl7dmFyIGk9WzddW25dKCk7aVsicmV0dXJuIl09ZnVuY3Rpb24oKXtvPSEwfSxBcnJheS5mcm9tKGksZnVuY3Rpb24oKXt0aHJvdyAyfSl9Y2F0Y2gocyl7fXQuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCF0JiYhbylyZXR1cm4hMTt2YXIgcj0hMTt0cnl7dmFyIGk9WzddLHM9aVtuXSgpO3MubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9ITB9fSxpW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGUoaSl9Y2F0Y2goYyl7fXJldHVybiByfX0seyIuL193a3MiOjcxfV0sNDA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSx7fV0sNDE6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e319LHt9XSw0MjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hMH0se31dLDQzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL190YXNrIikuc2V0LGk9bi5NdXRhdGlvbk9ic2VydmVyfHxuLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIscz1uLnByb2Nlc3MsYz1uLlByb21pc2UsdT0icHJvY2VzcyI9PWUoIi4vX2NvZiIpKHMpO3QuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBlLHQscixhPWZ1bmN0aW9uKCl7dmFyIG4sbztmb3IodSYmKG49cy5kb21haW4pJiZuLmV4aXQoKTtlOyl7bz1lLmZuLGU9ZS5uZXh0O3RyeXtvKCl9Y2F0Y2goaSl7dGhyb3cgZT9yKCk6dD12b2lkIDAsaX19dD12b2lkIDAsbiYmbi5lbnRlcigpfTtpZih1KXI9ZnVuY3Rpb24oKXtzLm5leHRUaWNrKGEpfTtlbHNlIGlmKGkpe3ZhciBmPSEwLF89ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpO25ldyBpKGEpLm9ic2VydmUoXyx7Y2hhcmFjdGVyRGF0YTohMH0pLHI9ZnVuY3Rpb24oKXtfLmRhdGE9Zj0hZn19ZWxzZSBpZihjJiZjLnJlc29sdmUpe3ZhciBsPWMucmVzb2x2ZSgpO3I9ZnVuY3Rpb24oKXtsLnRoZW4oYSl9fWVsc2Ugcj1mdW5jdGlvbigpe28uY2FsbChuLGEpfTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIG89e2ZuOm4sbmV4dDp2b2lkIDB9O3QmJih0Lm5leHQ9byksZXx8KGU9byxyKCkpLHQ9b319fSx7Ii4vX2NvZiI6MTcsIi4vX2dsb2JhbCI6MjcsIi4vX3Rhc2siOjYzfV0sNDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX29iamVjdC1kcHMiKSxpPWUoIi4vX2VudW0tYnVnLWtleXMiKSxzPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxjPWZ1bmN0aW9uKCl7fSx1PSJwcm90b3R5cGUiLGE9ZnVuY3Rpb24oKXt2YXIgdCxyPWUoIi4vX2RvbS1jcmVhdGUiKSgiaWZyYW1lIiksbj1pLmxlbmd0aCxvPSI+Ijtmb3Ioci5zdHlsZS5kaXNwbGF5PSJub25lIixlKCIuL19odG1sIikuYXBwZW5kQ2hpbGQociksci5zcmM9ImphdmFzY3JpcHQ6Iix0PXIuY29udGVudFdpbmRvdy5kb2N1bWVudCx0Lm9wZW4oKSx0LndyaXRlKCI8c2NyaXB0PmRvY3VtZW50LkY9T2JqZWN0PC9zY3JpcHQiK28pLHQuY2xvc2UoKSxhPXQuRjtuLS07KWRlbGV0ZSBhW3VdW2lbbl1dO3JldHVybiBhKCl9O3QuZXhwb3J0cz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBudWxsIT09ZT8oY1t1XT1uKGUpLHI9bmV3IGMsY1t1XT1udWxsLHJbc109ZSk6cj1hKCksdm9pZCAwPT09dD9yOm8ocix0KX19LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fZG9tLWNyZWF0ZSI6MjIsIi4vX2VudW0tYnVnLWtleXMiOjIzLCIuL19odG1sIjozMCwiLi9fb2JqZWN0LWRwcyI6NDYsIi4vX3NoYXJlZC1rZXkiOjU5fV0sNDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX2llOC1kb20tZGVmaW5lIiksaT1lKCIuL190by1wcmltaXRpdmUiKSxzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTtyLmY9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdD1pKHQsITApLG4ociksbyl0cnl7cmV0dXJuIHMoZSx0LHIpfWNhdGNoKGMpe31pZigiZ2V0ImluIHJ8fCJzZXQiaW4gcil0aHJvdyBUeXBlRXJyb3IoIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkISIpO3JldHVybiJ2YWx1ZSJpbiByJiYoZVt0XT1yLnZhbHVlKSxlfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2llOC1kb20tZGVmaW5lIjozMSwiLi9fdG8tcHJpbWl0aXZlIjo2OX1dLDQ2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWRwIiksbz1lKCIuL19hbi1vYmplY3QiKSxpPWUoIi4vX29iamVjdC1rZXlzIik7dC5leHBvcnRzPWUoIi4vX2Rlc2NyaXB0b3JzIik/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXtvKGUpO2Zvcih2YXIgcixzPWkodCksYz1zLmxlbmd0aCx1PTA7Yz51OyluLmYoZSxyPXNbdSsrXSx0W3JdKTtyZXR1cm4gZX19LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19vYmplY3QtZHAiOjQ1LCIuL19vYmplY3Qta2V5cyI6NTB9XSw0NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1waWUiKSxvPWUoIi4vX3Byb3BlcnR5LWRlc2MiKSxpPWUoIi4vX3RvLWlvYmplY3QiKSxzPWUoIi4vX3RvLXByaW1pdGl2ZSIpLGM9ZSgiLi9faGFzIiksdT1lKCIuL19pZTgtZG9tLWRlZmluZSIpLGE9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtyLmY9ZSgiLi9fZGVzY3JpcHRvcnMiKT9hOmZ1bmN0aW9uKGUsdCl7aWYoZT1pKGUpLHQ9cyh0LCEwKSx1KXRyeXtyZXR1cm4gYShlLHQpfWNhdGNoKHIpe31pZihjKGUsdCkpcmV0dXJuIG8oIW4uZi5jYWxsKGUsdCksZVt0XSl9fSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9faGFzIjoyOCwiLi9faWU4LWRvbS1kZWZpbmUiOjMxLCIuL19vYmplY3QtcGllIjo1MSwiLi9fcHJvcGVydHktZGVzYyI6NTMsIi4vX3RvLWlvYmplY3QiOjY2LCIuL190by1wcmltaXRpdmUiOjY5fV0sNDg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19oYXMiKSxvPWUoIi4vX3RvLW9iamVjdCIpLGk9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLHM9T2JqZWN0LnByb3RvdHlwZTt0LmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1vKGUpLG4oZSxpKT9lW2ldOiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P3M6bnVsbH19LHsiLi9faGFzIjoyOCwiLi9fc2hhcmVkLWtleSI6NTksIi4vX3RvLW9iamVjdCI6Njh9XSw0OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hhcyIpLG89ZSgiLi9fdG8taW9iamVjdCIpLGk9ZSgiLi9fYXJyYXktaW5jbHVkZXMiKSghMSkscz1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYz1vKGUpLHU9MCxhPVtdO2ZvcihyIGluIGMpciE9cyYmbihjLHIpJiZhLnB1c2gocik7Zm9yKDt0Lmxlbmd0aD51OyluKGMscj10W3UrK10pJiYofmkoYSxyKXx8YS5wdXNoKHIpKTtyZXR1cm4gYX19LHsiLi9fYXJyYXktaW5jbHVkZXMiOjE1LCIuL19oYXMiOjI4LCIuL19zaGFyZWQta2V5Ijo1OSwiLi9fdG8taW9iamVjdCI6NjZ9XSw1MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1rZXlzLWludGVybmFsIiksbz1lKCIuL19lbnVtLWJ1Zy1rZXlzIik7dC5leHBvcnRzPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXtyZXR1cm4gbihlLG8pfX0seyIuL19lbnVtLWJ1Zy1rZXlzIjoyMywiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjQ5fV0sNTE6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9e30ucHJvcGVydHlJc0VudW1lcmFibGV9LHt9XSw1MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2V4cG9ydCIpLG89ZSgiLi9fY29yZSIpLGk9ZSgiLi9fZmFpbHMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0oby5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLHM9e307c1tlXT10KHIpLG4obi5TK24uRippKGZ1bmN0aW9uKCl7cigxKX0pLCJPYmplY3QiLHMpfX0seyIuL19jb3JlIjoxOCwiLi9fZXhwb3J0IjoyNCwiLi9fZmFpbHMiOjI1fV0sNTM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSx7fV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19oaWRlIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG8gaW4gdClyJiZlW29dP2Vbb109dFtvXTpuKGUsbyx0W29dKTtyZXR1cm4gZX19LHsiLi9faGlkZSI6Mjl9XSw1NTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKCIuL19oaWRlIil9LHsiLi9faGlkZSI6Mjl9XSw1NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lzLW9iamVjdCIpLG89ZSgiLi9fYW4tb2JqZWN0IiksaT1mdW5jdGlvbihlLHQpe2lmKG8oZSksIW4odCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcih0KyI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhIil9O3QuZXhwb3J0cz17c2V0Ok9iamVjdC5zZXRQcm90b3R5cGVPZnx8KCJfX3Byb3RvX18iaW57fT9mdW5jdGlvbih0LHIsbil7dHJ5e249ZSgiLi9fY3R4IikoRnVuY3Rpb24uY2FsbCxlKCIuL19vYmplY3QtZ29wZCIpLmYoT2JqZWN0LnByb3RvdHlwZSwiX19wcm90b19fIikuc2V0LDIpLG4odCxbXSkscj0hKHQgaW5zdGFuY2VvZiBBcnJheSl9Y2F0Y2gobyl7cj0hMH1yZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gaShlLHQpLHI/ZS5fX3Byb3RvX189dDpuKGUsdCksZX19KHt9LCExKTp2b2lkIDApLGNoZWNrOml9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2N0eCI6MTksIi4vX2lzLW9iamVjdCI6MzUsIi4vX29iamVjdC1nb3BkIjo0N31dLDU3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX2dsb2JhbCIpLG89ZSgiLi9fY29yZSIpLGk9ZSgiLi9fb2JqZWN0LWRwIikscz1lKCIuL19kZXNjcmlwdG9ycyIpLGM9ZSgiLi9fd2tzIikoInNwZWNpZXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIG9bZV0/b1tlXTpuW2VdO3MmJnQmJiF0W2NdJiZpLmYodCxjLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSl9fSx7Ii4vX2NvcmUiOjE4LCIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2dsb2JhbCI6MjcsIi4vX29iamVjdC1kcCI6NDUsIi4vX3drcyI6NzF9XSw1ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1kcCIpLmYsbz1lKCIuL19oYXMiKSxpPWUoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZSYmIW8oZT1yP2U6ZS5wcm90b3R5cGUsaSkmJm4oZSxpLHtjb25maWd1cmFibGU6ITAsdmFsdWU6dH0pfX0seyIuL19oYXMiOjI4LCIuL19vYmplY3QtZHAiOjQ1LCIuL193a3MiOjcxfV0sNTk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19zaGFyZWQiKSgia2V5cyIpLG89ZSgiLi9fdWlkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1vKGUpKX19LHsiLi9fc2hhcmVkIjo2MCwiLi9fdWlkIjo3MH1dLDYwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz0iX19jb3JlLWpzX3NoYXJlZF9fIixpPW5bb118fChuW29dPXt9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlbZV18fChpW2VdPXt9KX19LHsiLi9fZ2xvYmFsIjoyN31dLDYxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fYW4tb2JqZWN0Iiksbz1lKCIuL19hLWZ1bmN0aW9uIiksaT1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLHM9bihlKS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09c3x8dm9pZCAwPT0ocj1uKHMpW2ldKT90Om8ocil9fSx7Ii4vX2EtZnVuY3Rpb24iOjExLCIuL19hbi1vYmplY3QiOjE0LCIuL193a3MiOjcxfV0sNjI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pbnRlZ2VyIiksbz1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIpe3ZhciBpLHMsYz1TdHJpbmcobyh0KSksdT1uKHIpLGE9Yy5sZW5ndGg7cmV0dXJuIHU8MHx8dT49YT9lPyIiOnZvaWQgMDooaT1jLmNoYXJDb2RlQXQodSksaTw1NTI5Nnx8aT41NjMxOXx8dSsxPT09YXx8KHM9Yy5jaGFyQ29kZUF0KHUrMSkpPDU2MzIwfHxzPjU3MzQzP2U/Yy5jaGFyQXQodSk6aTplP2Muc2xpY2UodSx1KzIpOihpLTU1Mjk2PDwxMCkrKHMtNTYzMjApKzY1NTM2KX19fSx7Ii4vX2RlZmluZWQiOjIwLCIuL190by1pbnRlZ2VyIjo2NX1dLDYzOltmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLHM9ZSgiLi9fY3R4IiksYz1lKCIuL19pbnZva2UiKSx1PWUoIi4vX2h0bWwiKSxhPWUoIi4vX2RvbS1jcmVhdGUiKSxmPWUoIi4vX2dsb2JhbCIpLF89Zi5wcm9jZXNzLGw9Zi5zZXRJbW1lZGlhdGUsZD1mLmNsZWFySW1tZWRpYXRlLHA9Zi5NZXNzYWdlQ2hhbm5lbCx2PTAseT17fSxoPSJvbnJlYWR5c3RhdGVjaGFuZ2UiLGI9ZnVuY3Rpb24oKXt2YXIgZT0rdGhpcztpZih5Lmhhc093blByb3BlcnR5KGUpKXt2YXIgdD15W2VdO2RlbGV0ZSB5W2VdLHQoKX19LG09ZnVuY3Rpb24oZSl7Yi5jYWxsKGUuZGF0YSl9O2wmJmR8fChsPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTE7YXJndW1lbnRzLmxlbmd0aD5yOyl0LnB1c2goYXJndW1lbnRzW3IrK10pO3JldHVybiB5Wysrdl09ZnVuY3Rpb24oKXtjKCJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6RnVuY3Rpb24oZSksdCl9LG4odiksdn0sZD1mdW5jdGlvbihlKXtkZWxldGUgeVtlXX0sInByb2Nlc3MiPT1lKCIuL19jb2YiKShfKT9uPWZ1bmN0aW9uKGUpe18ubmV4dFRpY2socyhiLGUsMSkpfTpwPyhvPW5ldyBwLGk9by5wb3J0MixvLnBvcnQxLm9ubWVzc2FnZT1tLG49cyhpLnBvc3RNZXNzYWdlLGksMSkpOmYuYWRkRXZlbnRMaXN0ZW5lciYmImZ1bmN0aW9uIj09dHlwZW9mIHBvc3RNZXNzYWdlJiYhZi5pbXBvcnRTY3JpcHRzPyhuPWZ1bmN0aW9uKGUpe2YucG9zdE1lc3NhZ2UoZSsiIiwiKiIpfSxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLG0sITEpKTpuPWggaW4gYSgic2NyaXB0Iik/ZnVuY3Rpb24oZSl7dS5hcHBlbmRDaGlsZChhKCJzY3JpcHQiKSlbaF09ZnVuY3Rpb24oKXt1LnJlbW92ZUNoaWxkKHRoaXMpLGIuY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQocyhiLGUsMSksMCl9KSx0LmV4cG9ydHM9e3NldDpsLGNsZWFyOmR9fSx7Ii4vX2NvZiI6MTcsIi4vX2N0eCI6MTksIi4vX2RvbS1jcmVhdGUiOjIyLCIuL19nbG9iYWwiOjI3LCIuL19odG1sIjozMCwiLi9faW52b2tlIjozMn1dLDY0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8taW50ZWdlciIpLG89TWF0aC5tYXgsaT1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1uKGUpLGU8MD9vKGUrdCwwKTppKGUsdCl9fSx7Ii4vX3RvLWludGVnZXIiOjY1fV0sNjU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1NYXRoLmNlaWwsbz1NYXRoLmZsb29yO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooZT4wP286bikoZSl9fSx7fV0sNjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pb2JqZWN0Iiksbz1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0seyIuL19kZWZpbmVkIjoyMCwiLi9faW9iamVjdCI6MzN9XSw2NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWludGVnZXIiKSxvPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP28obihlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0seyIuL190by1pbnRlZ2VyIjo2NX1dLDY4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KG4oZSkpfX0seyIuL19kZWZpbmVkIjoyMH1dLDY5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIW4oZSkpcmV0dXJuIGU7dmFyIHIsbztpZih0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCJmdW5jdGlvbiI9PXR5cGVvZihyPWUudmFsdWVPZikmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZighdCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbzt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfX0seyIuL19pcy1vYmplY3QiOjM1fV0sNzA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj0wLG89TWF0aC5yYW5kb20oKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIlN5bWJvbCgiLmNvbmNhdCh2b2lkIDA9PT1lPyIiOmUsIilfIiwoKytuK28pLnRvU3RyaW5nKDM2KSl9fSx7fV0sNzE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19zaGFyZWQiKSgid2tzIiksbz1lKCIuL191aWQiKSxpPWUoIi4vX2dsb2JhbCIpLlN5bWJvbCxzPSJmdW5jdGlvbiI9PXR5cGVvZiBpLGM9dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1zJiZpW2VdfHwocz9pOm8pKCJTeW1ib2wuIitlKSl9O2Muc3RvcmU9bn0seyIuL19nbG9iYWwiOjI3LCIuL19zaGFyZWQiOjYwLCIuL191aWQiOjcwfV0sNzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jbGFzc29mIiksbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpO3QuZXhwb3J0cz1lKCIuL19jb3JlIikuZ2V0SXRlcmF0b3JNZXRob2Q9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT1lKXJldHVybiBlW29dfHxlWyJAQGl0ZXJhdG9yIl18fGlbbihlKV19fSx7Ii4vX2NsYXNzb2YiOjE2LCIuL19jb3JlIjoxOCwiLi9faXRlcmF0b3JzIjo0MSwiLi9fd2tzIjo3MX1dLDczOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX2FkZC10by11bnNjb3BhYmxlcyIpLG89ZSgiLi9faXRlci1zdGVwIiksaT1lKCIuL19pdGVyYXRvcnMiKSxzPWUoIi4vX3RvLWlvYmplY3QiKTt0LmV4cG9ydHM9ZSgiLi9faXRlci1kZWZpbmUiKShBcnJheSwiQXJyYXkiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1zKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2sscj10aGlzLl9pKys7cmV0dXJuIWV8fHI+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxvKDEpKToia2V5cyI9PXQ/bygwLHIpOiJ2YWx1ZXMiPT10P28oMCxlW3JdKTpvKDAsW3IsZVtyXV0pfSwidmFsdWVzIiksaS5Bcmd1bWVudHM9aS5BcnJheSxuKCJrZXlzIiksbigidmFsdWVzIiksbigiZW50cmllcyIpfSx7Ii4vX2FkZC10by11bnNjb3BhYmxlcyI6MTIsIi4vX2l0ZXItZGVmaW5lIjozOCwiLi9faXRlci1zdGVwIjo0MCwiLi9faXRlcmF0b3JzIjo0MSwiLi9fdG8taW9iamVjdCI6NjZ9XSw3NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2V4cG9ydCIpO24obi5TK24uRiohZSgiLi9fZGVzY3JpcHRvcnMiKSwiT2JqZWN0Iix7ZGVmaW5lUHJvcGVydHk6ZSgiLi9fb2JqZWN0LWRwIikuZn0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fZXhwb3J0IjoyNCwiLi9fb2JqZWN0LWRwIjo0NX1dLDc1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8tb2JqZWN0Iiksbz1lKCIuL19vYmplY3Qta2V5cyIpO2UoIi4vX29iamVjdC1zYXAiKSgia2V5cyIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LHsiLi9fb2JqZWN0LWtleXMiOjUwLCIuL19vYmplY3Qtc2FwIjo1MiwiLi9fdG8tb2JqZWN0Ijo2OH1dLDc2OltmdW5jdGlvbihlLHQscil7fSx7fV0sNzc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG4sbyxpLHM9ZSgiLi9fbGlicmFyeSIpLGM9ZSgiLi9fZ2xvYmFsIiksdT1lKCIuL19jdHgiKSxhPWUoIi4vX2NsYXNzb2YiKSxmPWUoIi4vX2V4cG9ydCIpLF89ZSgiLi9faXMtb2JqZWN0IiksbD0oZSgiLi9fYW4tb2JqZWN0IiksZSgiLi9fYS1mdW5jdGlvbiIpKSxkPWUoIi4vX2FuLWluc3RhbmNlIikscD1lKCIuL19mb3Itb2YiKSx2PShlKCIuL19zZXQtcHJvdG8iKS5zZXQsZSgiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciIpKSx5PWUoIi4vX3Rhc2siKS5zZXQsaD1lKCIuL19taWNyb3Rhc2siKSgpLGI9IlByb21pc2UiLG09Yy5UeXBlRXJyb3IsZz1jLnByb2Nlc3Msaj1jW2JdLGc9Yy5wcm9jZXNzLHg9InByb2Nlc3MiPT1hKGcpLHc9ZnVuY3Rpb24oKXt9LGs9ISFmdW5jdGlvbigpe3RyeXt2YXIgdD1qLnJlc29sdmUoMSkscj0odC5jb25zdHJ1Y3Rvcj17fSlbZSgiLi9fd2tzIikoInNwZWNpZXMiKV09ZnVuY3Rpb24oZSl7ZSh3LHcpfTtyZXR1cm4oeHx8ImZ1bmN0aW9uIj09dHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCkmJnQudGhlbih3KWluc3RhbmNlb2Ygcn1jYXRjaChuKXt9fSgpLE89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXR8fGU9PT1qJiZ0PT09aX0sTT1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4hKCFfKGUpfHwiZnVuY3Rpb24iIT10eXBlb2YodD1lLnRoZW4pKSYmdH0sUD1mdW5jdGlvbihlKXtyZXR1cm4gTyhqLGUpP25ldyBVKGUpOm5ldyBvKGUpfSxVPW89ZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IG0oIkJhZCBQcm9taXNlIGNvbnN0cnVjdG9yIik7dD1lLHI9bn0pLHRoaXMucmVzb2x2ZT1sKHQpLHRoaXMucmVqZWN0PWwocil9LFM9ZnVuY3Rpb24oZSl7dHJ5e2UoKX1jYXRjaCh0KXtyZXR1cm57ZXJyb3I6dH19fSxSPWZ1bmN0aW9uKGUsdCl7aWYoIWUuX24pe2UuX249ITA7dmFyIHI9ZS5fYztoKGZ1bmN0aW9uKCl7Zm9yKHZhciBuPWUuX3Ysbz0xPT1lLl9zLGk9MCxzPWZ1bmN0aW9uKHQpe3ZhciByLGkscz1vP3Qub2s6dC5mYWlsLGM9dC5yZXNvbHZlLHU9dC5yZWplY3QsYT10LmRvbWFpbjt0cnl7cz8ob3x8KDI9PWUuX2gmJlQoZSksZS5faD0xKSxzPT09ITA/cj1uOihhJiZhLmVudGVyKCkscj1zKG4pLGEmJmEuZXhpdCgpKSxyPT09dC5wcm9taXNlP3UobSgiUHJvbWlzZS1jaGFpbiBjeWNsZSIpKTooaT1NKHIpKT9pLmNhbGwocixjLHUpOmMocikpOnUobil9Y2F0Y2goZil7dShmKX19O3IubGVuZ3RoPmk7KXMocltpKytdKTtlLl9jPVtdLGUuX249ITEsdCYmIWUuX2gmJkUoZSl9KX19LEU9ZnVuY3Rpb24oZSl7eS5jYWxsKGMsZnVuY3Rpb24oKXt2YXIgdCxyLG4sbz1lLl92O2lmKEwoZSkmJih0PVMoZnVuY3Rpb24oKXt4P2cuZW1pdCgidW5oYW5kbGVkUmVqZWN0aW9uIixvLGUpOihyPWMub251bmhhbmRsZWRyZWplY3Rpb24pP3Ioe3Byb21pc2U6ZSxyZWFzb246b30pOihuPWMuY29uc29sZSkmJm4uZXJyb3ImJm4uZXJyb3IoIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiIsbyl9KSxlLl9oPXh8fEwoZSk/MjoxKSxlLl9hPXZvaWQgMCx0KXRocm93IHQuZXJyb3J9KX0sTD1mdW5jdGlvbihlKXtpZigxPT1lLl9oKXJldHVybiExO2Zvcih2YXIgdCxyPWUuX2F8fGUuX2Msbj0wO3IubGVuZ3RoPm47KWlmKHQ9cltuKytdLHQuZmFpbHx8IUwodC5wcm9taXNlKSlyZXR1cm4hMTtyZXR1cm4hMH0sVD1mdW5jdGlvbihlKXt5LmNhbGwoYyxmdW5jdGlvbigpe3ZhciB0O3g/Zy5lbWl0KCJyZWplY3Rpb25IYW5kbGVkIixlKToodD1jLm9ucmVqZWN0aW9uaGFuZGxlZCkmJnQoe3Byb21pc2U6ZSxyZWFzb246ZS5fdn0pfSl9LEE9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9kfHwodC5fZD0hMCx0PXQuX3d8fHQsdC5fdj1lLHQuX3M9Mix0Ll9hfHwodC5fYT10Ll9jLnNsaWNlKCkpLFIodCwhMCkpfSxDPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcztpZighci5fZCl7ci5fZD0hMCxyPXIuX3d8fHI7dHJ5e2lmKHI9PT1lKXRocm93IG0oIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7KHQ9TShlKSk/aChmdW5jdGlvbigpe3ZhciBuPXtfdzpyLF9kOiExfTt0cnl7dC5jYWxsKGUsdShDLG4sMSksdShBLG4sMSkpfWNhdGNoKG8pe0EuY2FsbChuLG8pfX0pOihyLl92PWUsci5fcz0xLFIociwhMSkpfWNhdGNoKG4pe0EuY2FsbCh7X3c6cixfZDohMX0sbil9fX07a3x8KGo9ZnVuY3Rpb24oZSl7ZCh0aGlzLGosYiwiX2giKSxsKGUpLG4uY2FsbCh0aGlzKTt0cnl7ZSh1KEMsdGhpcywxKSx1KEEsdGhpcywxKSl9Y2F0Y2godCl7QS5jYWxsKHRoaXMsdCl9fSxuPWZ1bmN0aW9uKGUpe3RoaXMuX2M9W10sdGhpcy5fYT12b2lkIDAsdGhpcy5fcz0wLHRoaXMuX2Q9ITEsdGhpcy5fdj12b2lkIDAsdGhpcy5faD0wLHRoaXMuX249ITF9LG4ucHJvdG90eXBlPWUoIi4vX3JlZGVmaW5lLWFsbCIpKGoucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9UCh2KHRoaXMsaikpO3JldHVybiByLm9rPSJmdW5jdGlvbiIhPXR5cGVvZiBlfHxlLHIuZmFpbD0iZnVuY3Rpb24iPT10eXBlb2YgdCYmdCxyLmRvbWFpbj14P2cuZG9tYWluOnZvaWQgMCx0aGlzLl9jLnB1c2gociksdGhpcy5fYSYmdGhpcy5fYS5wdXNoKHIpLHRoaXMuX3MmJlIodGhpcywhMSksci5wcm9taXNlfSwiY2F0Y2giOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLGUpfX0pLFU9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgbjt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9dShDLGUsMSksdGhpcy5yZWplY3Q9dShBLGUsMSl9KSxmKGYuRytmLlcrZi5GKiFrLHtQcm9taXNlOmp9KSxlKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpKGosYiksZSgiLi9fc2V0LXNwZWNpZXMiKShiKSxpPWUoIi4vX2NvcmUiKVtiXSxmKGYuUytmLkYqIWssYix7cmVqZWN0OmZ1bmN0aW9uKGUpe3ZhciB0PVAodGhpcykscj10LnJlamVjdDtyZXR1cm4gcihlKSx0LnByb21pc2V9fSksZihmLlMrZi5GKihzfHwhayksYix7cmVzb2x2ZTpmdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgaiYmTyhlLmNvbnN0cnVjdG9yLHRoaXMpKXJldHVybiBlO3ZhciB0PVAodGhpcykscj10LnJlc29sdmU7cmV0dXJuIHIoZSksdC5wcm9taXNlfX0pLGYoZi5TK2YuRiohKGsmJmUoIi4vX2l0ZXItZGV0ZWN0IikoZnVuY3Rpb24oZSl7ai5hbGwoZSlbImNhdGNoIl0odyl9KSksYix7YWxsOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1QKHQpLG49ci5yZXNvbHZlLG89ci5yZWplY3QsaT1TKGZ1bmN0aW9uKCl7dmFyIHI9W10saT0wLHM9MTtwKGUsITEsZnVuY3Rpb24oZSl7dmFyIGM9aSsrLHU9ITE7ci5wdXNoKHZvaWQgMCkscysrLHQucmVzb2x2ZShlKS50aGVuKGZ1bmN0aW9uKGUpe3V8fCh1PSEwLHJbY109ZSwtLXN8fG4ocikpfSxvKX0pLC0tc3x8bihyKX0pO3JldHVybiBpJiZvKGkuZXJyb3IpLHIucHJvbWlzZX0scmFjZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9UCh0KSxuPXIucmVqZWN0LG89UyhmdW5jdGlvbigpe3AoZSwhMSxmdW5jdGlvbihlKXt0LnJlc29sdmUoZSkudGhlbihyLnJlc29sdmUsbil9KX0pO3JldHVybiBvJiZuKG8uZXJyb3IpLHIucHJvbWlzZX19KX0seyIuL19hLWZ1bmN0aW9uIjoxMSwiLi9fYW4taW5zdGFuY2UiOjEzLCIuL19hbi1vYmplY3QiOjE0LCIuL19jbGFzc29mIjoxNiwiLi9fY29yZSI6MTgsIi4vX2N0eCI6MTksIi4vX2V4cG9ydCI6MjQsIi4vX2Zvci1vZiI6MjYsIi4vX2dsb2JhbCI6MjcsIi4vX2lzLW9iamVjdCI6MzUsIi4vX2l0ZXItZGV0ZWN0IjozOSwiLi9fbGlicmFyeSI6NDIsIi4vX21pY3JvdGFzayI6NDMsIi4vX3JlZGVmaW5lLWFsbCI6NTQsIi4vX3NldC1wcm90byI6NTYsIi4vX3NldC1zcGVjaWVzIjo1NywiLi9fc2V0LXRvLXN0cmluZy10YWciOjU4LCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIjo2MSwiLi9fdGFzayI6NjMsIi4vX3drcyI6NzF9XSw3ODpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19zdHJpbmctYXQiKSghMCk7ZSgiLi9faXRlci1kZWZpbmUiKShTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxyPXRoaXMuX2k7cmV0dXJuIHI+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9bih0LHIpLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSx7Ii4vX2l0ZXItZGVmaW5lIjozOCwiLi9fc3RyaW5nLWF0Ijo2Mn1dLDc5OltmdW5jdGlvbihlLHQscil7ZSgiLi9lczYuYXJyYXkuaXRlcmF0b3IiKTtmb3IodmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL19oaWRlIiksaT1lKCIuL19pdGVyYXRvcnMiKSxzPWUoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpLGM9WyJOb2RlTGlzdCIsIkRPTVRva2VuTGlzdCIsIk1lZGlhTGlzdCIsIlN0eWxlU2hlZXRMaXN0IiwiQ1NTUnVsZUxpc3QiXSx1PTA7dTw1O3UrKyl7dmFyIGE9Y1t1XSxmPW5bYV0sXz1mJiZmLnByb3RvdHlwZTtfJiYhX1tzXSYmbyhfLHMsYSksaVthXT1pLkFycmF5fX0seyIuL19nbG9iYWwiOjI3LCIuL19oaWRlIjoyOSwiLi9faXRlcmF0b3JzIjo0MSwiLi9fd2tzIjo3MSwiLi9lczYuYXJyYXkuaXRlcmF0b3IiOjczfV0sODA6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxjPW4ocyksdT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxhPW4odSksZj1lKCIuLi91dGlscy91dGlscyIpLF89ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscil7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBuPXRoaXM7bi5tZXNzYWdlQnVzPXIsbi5kb21haW49KDAsZi5kaXZpZGVVUkwpKHQpLmRvbWFpbixuLmRpc2NvdmVyeVVSTD10fXJldHVybigwLGFbImRlZmF1bHQiXSkoZSxbe2tleToiZGlzY292ZXJEYXRhT2JqZWN0UGVyVVJMIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj12b2lkIDA7bj10P3Q6ci5kb21haW47dmFyIG89e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7cmVzb3VyY2U6ZSxzZWFyY2g6ImRhdGFPYmplY3RQZXJVUkwifX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24oZSx0KXtyLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobyxmdW5jdGlvbihyKXt2YXIgbj1yLmJvZHkudmFsdWU7bj9lKG4pOnQoIkRhdGFPYmplY3Qgbm90IGZvdW5kIil9KX0pfX0se2tleToiZGVsZXRlRGF0YU9iamVjdCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dm9pZCAwO249dD90OnIuZG9tYWluO3ZhciBvPXt0eXBlOiJkZWxldGUiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7dmFsdWU6e25hbWU6ZX19fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLHQpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKHIpe3ZhciBuPXIuYm9keS5jb2RlOzIwMD09PW4/ZShuKTp0KCJFcnJvciBvbiBkZWxldGluZyBkYXRhT2JqZWN0Iil9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0UGVyUmVwb3J0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXZvaWQgMDtuPXQ/dDpyLmRvbWFpbjt2YXIgbz17dHlwZToicmVhZCIsZnJvbTpyLmRpc2NvdmVyeVVSTCx0bzoiZG9tYWluOi8vcmVnaXN0cnkuIituKyIvIixib2R5OntyZXNvdXJjZTplLHNlYXJjaDoiZGF0YU9iamVjdFBlclJlcG9ydGVyIn19O3JldHVybiBuZXcgaVsiZGVmYXVsdCJdKGZ1bmN0aW9uKGUsdCl7ci5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24ocil7dmFyIG49ci5ib2R5LnZhbHVlO24/ZShuKTp0KCJObyBkYXRhT2JqZWN0IHdhcyBmb3VuZCIpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0eSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89dGhpcyxzPXZvaWQgMCxjPSgwLGYuY29udmVydFRvVXNlclVSTCkoZSk7cz1uP246by5kb21haW47dmFyIHU9e3R5cGU6InJlYWQiLGZyb206by5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrcysiLyIsYm9keTp7cmVzb3VyY2U6e3VzZXI6YyxyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0fSxzZWFyY2g6Imh5cGVydHlSZXNvdXJjZXNEYXRhU2NoZW1lcyJ9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLHQpe28ubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZSh1LGZ1bmN0aW9uKHIpe3ZhciBuPXIuYm9keS52YWx1ZTtuP2Uobik6dCgiTm8gSHlwZXJ0eSB3YXMgZm91bmQiKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydHlQZXJVc2VyIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj12b2lkIDA7bj10P3Q6ci5kb21haW47dmFyIG89InVzZXI6Ly8iK2Uuc3Vic3RyaW5nKGUuaW5kZXhPZigiQCIpKzEsZS5sZW5ndGgpKyIvIitlLnN1YnN0cmluZygwLGUuaW5kZXhPZigiQCIpKSxzPXt0eXBlOiJyZWFkIixmcm9tOnIuZGlzY292ZXJ5VVJMLHRvOiJkb21haW46Ly9yZWdpc3RyeS4iK24rIi8iLGJvZHk6e3Jlc291cmNlOm8sc2VhcmNoOiJIeXBlcnR5UGVyVXNlciJ9fTtyZXR1cm4gY29uc29sZS5sb2coIk1lc3NhZ2U6ICIscyxuLG8pLG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24odCxuKXtyLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UocyxmdW5jdGlvbihyKXtjb25zb2xlLmxvZygibWVzc2FnZSByZXBseSIscik7dmFyIG89dm9pZCAwLGk9dm9pZCAwLHM9dm9pZCAwLGM9ci5ib2R5LnZhbHVlO2ZvcihvIGluIGMpaWYodm9pZCAwIT09Y1tvXS5sYXN0TW9kaWZpZWQpaWYodm9pZCAwPT09aSlpPW5ldyBEYXRlKGNbb10ubGFzdE1vZGlmaWVkKSxzPW87ZWxzZXt2YXIgdT1uZXcgRGF0ZShjW29dLmxhc3RNb2RpZmllZCk7aS5nZXRUaW1lKCk8dS5nZXRUaW1lKCkmJihpPXUscz1vKX1jb25zb2xlLmxvZygiTGFzdCBIeXBlcnR5OiAiLHMsaSk7dmFyIGE9cztpZih2b2lkIDA9PT1hKXJldHVybiBuKCJVc2VyIEh5cGVydHkgbm90IGZvdW5kIik7dmFyIGY9e2lkOmUsZGVzY3JpcHRvcjpjW2FdLmRlc2NyaXB0b3IsaHlwZXJ0eVVSTDphfTtjb25zb2xlLmxvZygiPT09PiBoeXBlcnR5RGlzY292ZXJ5IG1lc3NhZ2VCdW5kbGU6ICIsZiksdChmKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydGllc1BlclVzZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXZvaWQgMDtuPXQ/dDpyLmRvbWFpbjt2YXIgbz0idXNlcjovLyIrZS5zdWJzdHJpbmcoZS5pbmRleE9mKCJAIikrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCJAIikpLHM9e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7cmVzb3VyY2U6byxzZWFyY2g6Ikh5cGVydHlQZXJVc2VyIn19O3JldHVybiBjb25zb2xlLmxvZygiTWVzc2FnZSBkaXNjb3Zlckh5cGVydGllc1BlclVzZXI6ICIscyxuLG8pLG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24oZSx0KXtyLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UocyxmdW5jdGlvbihyKXtjb25zb2xlLmxvZygiZGlzY292ZXJIeXBlcnRpZXNQZXJVc2VyIHJlcGx5IixyKTt2YXIgbj1yLmJvZHkudmFsdWU7cmV0dXJuIG4/dm9pZCBlKG4pOnQoIlVzZXIgSHlwZXJ0eSBub3QgZm91bmQiKX0pfSl9fSx7a2V5OiJkZWxldGVIeXBlcnR5Iix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcyxvPXZvaWQgMDtvPXI/cjpuLmRvbWFpbjt2YXIgcz17dHlwZToiZGVsZXRlIixmcm9tOm4uZGlzY292ZXJ5VVJMLHRvOiJkb21haW46Ly9yZWdpc3RyeS4iK28rIi8iLGJvZHk6e3ZhbHVlOnt1c2VyOmUsaHlwZXJ0eVVSTDp0fX19O3JldHVybiBuZXcgaVsiZGVmYXVsdCJdKGZ1bmN0aW9uKGUsdCl7bi5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKHMsZnVuY3Rpb24ocil7dmFyIG49ci5ib2R5LmNvZGU7bj9lKCJIeXBlcnR5IHN1Y2Nlc3NmdWxseSBkZWxldGVkIik6dCgiRXJyb3Igb24gZGVsZXRpbmcgaHlwZXJ0eSIpfSl9KX19XSksZX0oKTtyWyJkZWZhdWx0Il09Xyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzIjo4MSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6NSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjo2fV0sODE6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1mdW5jdGlvbiBvKGUpe2lmKCFlKXRocm93IEVycm9yKCJVUkwgaXMgbmVlZGVkIHRvIHNwbGl0Iik7dmFyIHQ9LyhbYS16QS1aLV0qKTpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2kscj0iJDEsJDIsJDMiLG49ZS5yZXBsYWNlKHQscikuc3BsaXQoIiwiKTtuWzBdPT09ZSYmKG5bMF09Imh0dHBzIixuWzFdPWUpO3ZhciBvPXt0eXBlOm5bMF0sZG9tYWluOm5bMV0saWRlbnRpdHk6blsyXX07cmV0dXJuIG99ZnVuY3Rpb24gaShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKSxyPXt1c2VybmFtZTplLnN1YnN0cmluZygwLHQpLGRvbWFpbjplLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpfTtyZXR1cm4gcn1mdW5jdGlvbiBzKGUpe3JldHVybiEoKDAscFsiZGVmYXVsdCJdKShlKS5sZW5ndGg+MCl9ZnVuY3Rpb24gYyhlKXtpZihlKXJldHVybiBKU09OLnBhcnNlKCgwLGxbImRlZmF1bHQiXSkoZSkpfWZ1bmN0aW9uIHUoZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJuInVzZXI6Ly8iK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsdCl9ZnVuY3Rpb24gYShlKXt2YXIgdD1vKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoIi8iLCIiKSsiQCIrdC5kb21haW59ZnVuY3Rpb24gZihlKXtpZigidXNlcjovLyI9PT1lLnN1YnN0cmluZygwLDcpKXt2YXIgdD1vKGUpO2lmKHQuZG9tYWluJiZ0LmlkZW50aXR5KXJldHVybiBlO3Rocm93InVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQifXJldHVybiB1KGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgXz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiKSxsPW4oXyksZD1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxwPW4oZCk7ci5kaXZpZGVVUkw9byxyLmRpdmlkZUVtYWlsPWksci5lbXB0eU9iamVjdD1zLHIuZGVlcENsb25lPWMsci5nZXRVc2VyVVJMRnJvbUVtYWlsPXUsci5nZXRVc2VyRW1haWxGcm9tVVJMPWEsci5jb252ZXJ0VG9Vc2VyVVJMPWZ9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoxLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjN9XX0se30sWzgwXSkoODApfSk7DQoNCgp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkKfSx7fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7CihmdW5jdGlvbiAoZ2xvYmFsKXsKLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovDQoNCi8vIERpc3RyaWJ1dGlvbiBmaWxlIGZvciBJZGVudGl0eU1hbmFnZXIuanMgDQovLyB2ZXJzaW9uOiAwLjMuMA0KLy8gTGFzdCBidWlsZDogVGh1IEp1bCAyMSAyMDE2IDE1OjMxOjIxIEdNVCswMTAwIChXRVNUKQ0KDQohZnVuY3Rpb24odCl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz10KCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSx0KTtlbHNle3ZhciBlO2U9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLGUuSWRlbnRpdHlNYW5hZ2VyPXQoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIHQoZSxyLG4pe2Z1bmN0aW9uIG8oYyxzKXtpZighcltjXSl7aWYoIWVbY10pe3ZhciB1PSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFzJiZ1KXJldHVybiB1KGMsITApO2lmKGkpcmV0dXJuIGkoYywhMCk7dmFyIGE9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrYysiJyIpO3Rocm93IGEuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsYX12YXIgZj1yW2NdPXtleHBvcnRzOnt9fTtlW2NdWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciByPWVbY11bMV1bdF07cmV0dXJuIG8ocj9yOnQpfSxmLGYuZXhwb3J0cyx0LGUscixuKX1yZXR1cm4gcltjXS5leHBvcnRzfWZvcih2YXIgaT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxjPTA7YzxuLmxlbmd0aDtjKyspbyhuW2NdKTtyZXR1cm4gb30oezE6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9eyJkZWZhdWx0Ijp0KCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiOjd9XSwyOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPXsiZGVmYXVsdCI6dCgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6OH1dLDM6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9eyJkZWZhdWx0Ijp0KCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiOjl9XSw0OltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPXsiZGVmYXVsdCI6dCgiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MTB9XSw1OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3IuX19lc01vZHVsZT0hMCxyWyJkZWZhdWx0Il09ZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX19LHt9XSw2OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OnsiZGVmYXVsdCI6dH19ci5fX2VzTW9kdWxlPSEwO3ZhciBvPXQoIi4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLGk9bihvKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG4mJihuLndyaXRhYmxlPSEwKSwoMCxpWyJkZWZhdWx0Il0pKHQsbi5rZXksbil9fXJldHVybiBmdW5jdGlvbihlLHIsbil7cmV0dXJuIHImJnQoZS5wcm90b3R5cGUsciksbiYmdChlLG4pLGV9fSgpfSx7Ii4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6Mn1dLDc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuLi8uLi9tb2R1bGVzL19jb3JlIiksbz1uLkpTT058fChuLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gby5zdHJpbmdpZnkuYXBwbHkobyxhcmd1bWVudHMpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxOH1dLDg6W2Z1bmN0aW9uKHQsZSxyKXt0KCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Iik7dmFyIG49dCgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIpe3JldHVybiBuLmRlZmluZVByb3BlcnR5KHQsZSxyKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTgsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOjc0fV0sOTpbZnVuY3Rpb24odCxlLHIpe3QoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIiksZS5leHBvcnRzPXQoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Qua2V5c30seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxOCwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOjc1fV0sMTA6W2Z1bmN0aW9uKHQsZSxyKXt0KCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksdCgiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksdCgiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksdCgiLi4vbW9kdWxlcy9lczYucHJvbWlzZSIpLGUuZXhwb3J0cz10KCIuLi9tb2R1bGVzL19jb3JlIikuUHJvbWlzZX0seyIuLi9tb2R1bGVzL19jb3JlIjoxOCwiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyI6NzYsIi4uL21vZHVsZXMvZXM2LnByb21pc2UiOjc3LCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjc4LCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjc5fV0sMTE6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBmdW5jdGlvbiEiKTtyZXR1cm4gdH19LHt9XSwxMjpbZnVuY3Rpb24odCxlLHIpe2UuZXhwb3J0cz1mdW5jdGlvbigpe319LHt9XSwxMzpbZnVuY3Rpb24odCxlLHIpe2UuZXhwb3J0cz1mdW5jdGlvbih0LGUscixuKXtpZighKHQgaW5zdGFuY2VvZiBlKXx8dm9pZCAwIT09biYmbiBpbiB0KXRocm93IFR5cGVFcnJvcihyKyI6IGluY29ycmVjdCBpbnZvY2F0aW9uISIpO3JldHVybiB0fX0se31dLDE0OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faXMtb2JqZWN0Iik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCFuKHQpKXRocm93IFR5cGVFcnJvcih0KyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gdH19LHsiLi9faXMtb2JqZWN0IjozNX1dLDE1OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fdG8taW9iamVjdCIpLG89dCgiLi9fdG8tbGVuZ3RoIiksaT10KCIuL190by1pbmRleCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxyLGMpe3ZhciBzLHU9bihlKSxhPW8odS5sZW5ndGgpLGY9aShjLGEpO2lmKHQmJnIhPXIpe2Zvcig7YT5mOylpZihzPXVbZisrXSxzIT1zKXJldHVybiEwfWVsc2UgZm9yKDthPmY7ZisrKWlmKCh0fHxmIGluIHUpJiZ1W2ZdPT09cilyZXR1cm4gdHx8Znx8MDtyZXR1cm4hdCYmLTF9fX0seyIuL190by1pbmRleCI6NjQsIi4vX3RvLWlvYmplY3QiOjY2LCIuL190by1sZW5ndGgiOjY3fV0sMTY6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19jb2YiKSxvPXQoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpLGk9IkFyZ3VtZW50cyI9PW4oZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKSxjPWZ1bmN0aW9uKHQsZSl7dHJ5e3JldHVybiB0W2VdfWNhdGNoKHIpe319O2UuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZSxyLHM7cmV0dXJuIHZvaWQgMD09PXQ/IlVuZGVmaW5lZCI6bnVsbD09PXQ/Ik51bGwiOiJzdHJpbmciPT10eXBlb2Yocj1jKGU9T2JqZWN0KHQpLG8pKT9yOmk/bihlKToiT2JqZWN0Ij09KHM9bihlKSkmJiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNhbGxlZT8iQXJndW1lbnRzIjpzfX0seyIuL19jb2YiOjE3LCIuL193a3MiOjcxfV0sMTc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj17fS50b1N0cmluZztlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG4uY2FsbCh0KS5zbGljZSg4LC0xKX19LHt9XSwxODpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPWUuZXhwb3J0cz17dmVyc2lvbjoiMi40LjAifTsibnVtYmVyIj09dHlwZW9mIF9fZSYmKF9fZT1uKX0se31dLDE5OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fYS1mdW5jdGlvbiIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUscil7aWYobih0KSx2b2lkIDA9PT1lKXJldHVybiB0O3N3aXRjaChyKXtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiB0LmNhbGwoZSxyKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiB0LmNhbGwoZSxyLG4pfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHIsbixvKXtyZXR1cm4gdC5jYWxsKGUscixuLG8pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9fX0seyIuL19hLWZ1bmN0aW9uIjoxMX1dLDIwOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09dCl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiK3QpO3JldHVybiB0fX0se31dLDIxOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPSF0KCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19mYWlscyI6MjV9XSwyMjpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2lzLW9iamVjdCIpLG89dCgiLi9fZ2xvYmFsIikuZG9jdW1lbnQsaT1uKG8pJiZuKG8uY3JlYXRlRWxlbWVudCk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBpP28uY3JlYXRlRWxlbWVudCh0KTp7fX19LHsiLi9fZ2xvYmFsIjoyNywiLi9faXMtb2JqZWN0IjozNX1dLDIzOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPSJjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YiLnNwbGl0KCIsIil9LHt9XSwyNDpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2dsb2JhbCIpLG89dCgiLi9fY29yZSIpLGk9dCgiLi9fY3R4IiksYz10KCIuL19oaWRlIikscz0icHJvdG90eXBlIix1PWZ1bmN0aW9uKHQsZSxyKXt2YXIgYSxmLF8sbD10JnUuRixwPXQmdS5HLGQ9dCZ1LlMsaD10JnUuUCx2PXQmdS5CLGI9dCZ1LlcseT1wP286b1tlXXx8KG9bZV09e30pLG09eVtzXSxqPXA/bjpkP25bZV06KG5bZV18fHt9KVtzXTtwJiYocj1lKTtmb3IoYSBpbiByKWY9IWwmJmomJnZvaWQgMCE9PWpbYV0sZiYmYSBpbiB5fHwoXz1mP2pbYV06clthXSx5W2FdPXAmJiJmdW5jdGlvbiIhPXR5cGVvZiBqW2FdP3JbYV06diYmZj9pKF8sbik6YiYmalthXT09Xz9mdW5jdGlvbih0KXt2YXIgZT1mdW5jdGlvbihlLHIsbil7aWYodGhpcyBpbnN0YW5jZW9mIHQpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyB0O2Nhc2UgMTpyZXR1cm4gbmV3IHQoZSk7Y2FzZSAyOnJldHVybiBuZXcgdChlLHIpfXJldHVybiBuZXcgdChlLHIsbil9cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gZVtzXT10W3NdLGV9KF8pOmgmJiJmdW5jdGlvbiI9PXR5cGVvZiBfP2koRnVuY3Rpb24uY2FsbCxfKTpfLGgmJigoeS52aXJ0dWFsfHwoeS52aXJ0dWFsPXt9KSlbYV09Xyx0JnUuUiYmbSYmIW1bYV0mJmMobSxhLF8pKSl9O3UuRj0xLHUuRz0yLHUuUz00LHUuUD04LHUuQj0xNix1Llc9MzIsdS5VPTY0LHUuUj0xMjgsZS5leHBvcnRzPXV9LHsiLi9fY29yZSI6MTgsIi4vX2N0eCI6MTksIi4vX2dsb2JhbCI6MjcsIi4vX2hpZGUiOjI5fV0sMjU6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiEhdCgpfWNhdGNoKGUpe3JldHVybiEwfX19LHt9XSwyNjpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2N0eCIpLG89dCgiLi9faXRlci1jYWxsIiksaT10KCIuL19pcy1hcnJheS1pdGVyIiksYz10KCIuL19hbi1vYmplY3QiKSxzPXQoIi4vX3RvLWxlbmd0aCIpLHU9dCgiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiKSxhPXt9LGY9e30scj1lLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIsXyxsKXt2YXIgcCxkLGgsdixiPWw/ZnVuY3Rpb24oKXtyZXR1cm4gdH06dSh0KSx5PW4ocixfLGU/MjoxKSxtPTA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGIpdGhyb3cgVHlwZUVycm9yKHQrIiBpcyBub3QgaXRlcmFibGUhIik7aWYoaShiKSl7Zm9yKHA9cyh0Lmxlbmd0aCk7cD5tO20rKylpZih2PWU/eShjKGQ9dFttXSlbMF0sZFsxXSk6eSh0W21dKSx2PT09YXx8dj09PWYpcmV0dXJuIHZ9ZWxzZSBmb3IoaD1iLmNhbGwodCk7IShkPWgubmV4dCgpKS5kb25lOylpZih2PW8oaCx5LGQudmFsdWUsZSksdj09PWF8fHY9PT1mKXJldHVybiB2fTtyLkJSRUFLPWEsci5SRVRVUk49Zn0seyIuL19hbi1vYmplY3QiOjE0LCIuL19jdHgiOjE5LCIuL19pcy1hcnJheS1pdGVyIjozNCwiLi9faXRlci1jYWxsIjozNiwiLi9fdG8tbGVuZ3RoIjo2NywiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiOjcyfV0sMjc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj1lLmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9bil9LHt9XSwyODpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXt9Lmhhc093blByb3BlcnR5O2UuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBuLmNhbGwodCxlKX19LHt9XSwyOTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX29iamVjdC1kcCIpLG89dCgiLi9fcHJvcGVydHktZGVzYyIpO2UuZXhwb3J0cz10KCIuL19kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKHQsZSxyKXtyZXR1cm4gbi5mKHQsZSxvKDEscikpfTpmdW5jdGlvbih0LGUscil7cmV0dXJuIHRbZV09cix0fX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX29iamVjdC1kcCI6NDUsIi4vX3Byb3BlcnR5LWRlc2MiOjUzfV0sMzA6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9dCgiLi9fZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuL19nbG9iYWwiOjI3fV0sMzE6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9IXQoIi4vX2Rlc2NyaXB0b3JzIikmJiF0KCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0KCIuL19kb20tY3JlYXRlIikoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fZG9tLWNyZWF0ZSI6MjIsIi4vX2ZhaWxzIjoyNX1dLDMyOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj12b2lkIDA9PT1yO3N3aXRjaChlLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuP3QoKTp0LmNhbGwocik7Y2FzZSAxOnJldHVybiBuP3QoZVswXSk6dC5jYWxsKHIsZVswXSk7Y2FzZSAyOnJldHVybiBuP3QoZVswXSxlWzFdKTp0LmNhbGwocixlWzBdLGVbMV0pO2Nhc2UgMzpyZXR1cm4gbj90KGVbMF0sZVsxXSxlWzJdKTp0LmNhbGwocixlWzBdLGVbMV0sZVsyXSk7Y2FzZSA0OnJldHVybiBuP3QoZVswXSxlWzFdLGVbMl0sZVszXSk6dC5jYWxsKHIsZVswXSxlWzFdLGVbMl0sZVszXSl9cmV0dXJuIHQuYXBwbHkocixlKX19LHt9XSwzMzpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2NvZiIpO2UuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24odCl7cmV0dXJuIlN0cmluZyI9PW4odCk/dC5zcGxpdCgiIik6T2JqZWN0KHQpfX0seyIuL19jb2YiOjE3fV0sMzQ6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19pdGVyYXRvcnMiKSxvPXQoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9QXJyYXkucHJvdG90eXBlO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dCYmKG4uQXJyYXk9PT10fHxpW29dPT09dCl9fSx7Ii4vX2l0ZXJhdG9ycyI6NDEsIi4vX3drcyI6NzF9XSwzNTpbZnVuY3Rpb24odCxlLHIpe2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIHQ/bnVsbCE9PXQ6ImZ1bmN0aW9uIj09dHlwZW9mIHR9fSx7fV0sMzY6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19hbi1vYmplY3QiKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIsbyl7dHJ5e3JldHVybiBvP2UobihyKVswXSxyWzFdKTplKHIpfWNhdGNoKGkpe3ZhciBjPXRbInJldHVybiJdO3Rocm93IHZvaWQgMCE9PWMmJm4oYy5jYWxsKHQpKSxpfX19LHsiLi9fYW4tb2JqZWN0IjoxNH1dLDM3OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3ZhciBuPXQoIi4vX29iamVjdC1jcmVhdGUiKSxvPXQoIi4vX3Byb3BlcnR5LWRlc2MiKSxpPXQoIi4vX3NldC10by1zdHJpbmctdGFnIiksYz17fTt0KCIuL19oaWRlIikoYyx0KCIuL193a3MiKSgiaXRlcmF0b3IiKSxmdW5jdGlvbigpe3JldHVybiB0aGlzfSksZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSxyKXt0LnByb3RvdHlwZT1uKGMse25leHQ6bygxLHIpfSksaSh0LGUrIiBJdGVyYXRvciIpfX0seyIuL19oaWRlIjoyOSwiLi9fb2JqZWN0LWNyZWF0ZSI6NDQsIi4vX3Byb3BlcnR5LWRlc2MiOjUzLCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6NTgsIi4vX3drcyI6NzF9XSwzODpbZnVuY3Rpb24odCxlLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj10KCIuL19saWJyYXJ5Iiksbz10KCIuL19leHBvcnQiKSxpPXQoIi4vX3JlZGVmaW5lIiksYz10KCIuL19oaWRlIikscz10KCIuL19oYXMiKSx1PXQoIi4vX2l0ZXJhdG9ycyIpLGE9dCgiLi9faXRlci1jcmVhdGUiKSxmPXQoIi4vX3NldC10by1zdHJpbmctdGFnIiksXz10KCIuL19vYmplY3QtZ3BvIiksbD10KCIuL193a3MiKSgiaXRlcmF0b3IiKSxwPSEoW10ua2V5cyYmIm5leHQiaW5bXS5rZXlzKCkpLGQ9IkBAaXRlcmF0b3IiLGg9ImtleXMiLHY9InZhbHVlcyIsYj1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIseSxtLGosZyl7YShyLGUseSk7dmFyIHgsdyxrLE89ZnVuY3Rpb24odCl7aWYoIXAmJnQgaW4gUClyZXR1cm4gUFt0XTtzd2l0Y2godCl7Y2FzZSBoOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLHQpfTtjYXNlIHY6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsdCl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLHQpfX0sTT1lKyIgSXRlcmF0b3IiLFM9bT09dixFPSExLFA9dC5wcm90b3R5cGUsVD1QW2xdfHxQW2RdfHxtJiZQW21dLFI9VHx8TyhtKSxVPW0/Uz9PKCJlbnRyaWVzIik6Ujp2b2lkIDAsQT0iQXJyYXkiPT1lP1AuZW50cmllc3x8VDpUO2lmKEEmJihrPV8oQS5jYWxsKG5ldyB0KSksayE9PU9iamVjdC5wcm90b3R5cGUmJihmKGssTSwhMCksbnx8cyhrLGwpfHxjKGssbCxiKSkpLFMmJlQmJlQubmFtZSE9PXYmJihFPSEwLFI9ZnVuY3Rpb24oKXtyZXR1cm4gVC5jYWxsKHRoaXMpfSksbiYmIWd8fCFwJiYhRSYmUFtsXXx8YyhQLGwsUiksdVtlXT1SLHVbTV09YixtKWlmKHg9e3ZhbHVlczpTP1I6Tyh2KSxrZXlzOmo/UjpPKGgpLGVudHJpZXM6VX0sZylmb3IodyBpbiB4KXcgaW4gUHx8aShQLHcseFt3XSk7ZWxzZSBvKG8uUCtvLkYqKHB8fEUpLGUseCk7cmV0dXJuIHh9fSx7Ii4vX2V4cG9ydCI6MjQsIi4vX2hhcyI6MjgsIi4vX2hpZGUiOjI5LCIuL19pdGVyLWNyZWF0ZSI6MzcsIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX2xpYnJhcnkiOjQyLCIuL19vYmplY3QtZ3BvIjo0OCwiLi9fcmVkZWZpbmUiOjU1LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6NTgsIi4vX3drcyI6NzF9XSwzOTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX3drcyIpKCJpdGVyYXRvciIpLG89ITE7dHJ5e3ZhciBpPVs3XVtuXSgpO2lbInJldHVybiJdPWZ1bmN0aW9uKCl7bz0hMH0sQXJyYXkuZnJvbShpLGZ1bmN0aW9uKCl7dGhyb3cgMn0pfWNhdGNoKGMpe31lLmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZighZSYmIW8pcmV0dXJuITE7dmFyIHI9ITE7dHJ5e3ZhciBpPVs3XSxjPWlbbl0oKTtjLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTpyPSEwfX0saVtuXT1mdW5jdGlvbigpe3JldHVybiBjfSx0KGkpfWNhdGNoKHMpe31yZXR1cm4gcn19LHsiLi9fd2tzIjo3MX1dLDQwOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJue3ZhbHVlOmUsZG9uZTohIXR9fX0se31dLDQxOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPXt9fSx7fV0sNDI6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9ITB9LHt9XSw0MzpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2dsb2JhbCIpLG89dCgiLi9fdGFzayIpLnNldCxpPW4uTXV0YXRpb25PYnNlcnZlcnx8bi5XZWJLaXRNdXRhdGlvbk9ic2VydmVyLGM9bi5wcm9jZXNzLHM9bi5Qcm9taXNlLHU9InByb2Nlc3MiPT10KCIuL19jb2YiKShjKTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgdCxlLHIsYT1mdW5jdGlvbigpe3ZhciBuLG87Zm9yKHUmJihuPWMuZG9tYWluKSYmbi5leGl0KCk7dDspe289dC5mbix0PXQubmV4dDt0cnl7bygpfWNhdGNoKGkpe3Rocm93IHQ/cigpOmU9dm9pZCAwLGl9fWU9dm9pZCAwLG4mJm4uZW50ZXIoKX07aWYodSlyPWZ1bmN0aW9uKCl7Yy5uZXh0VGljayhhKX07ZWxzZSBpZihpKXt2YXIgZj0hMCxfPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtuZXcgaShhKS5vYnNlcnZlKF8se2NoYXJhY3RlckRhdGE6ITB9KSxyPWZ1bmN0aW9uKCl7Xy5kYXRhPWY9IWZ9fWVsc2UgaWYocyYmcy5yZXNvbHZlKXt2YXIgbD1zLnJlc29sdmUoKTtyPWZ1bmN0aW9uKCl7bC50aGVuKGEpfX1lbHNlIHI9ZnVuY3Rpb24oKXtvLmNhbGwobixhKX07cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBvPXtmbjpuLG5leHQ6dm9pZCAwfTtlJiYoZS5uZXh0PW8pLHR8fCh0PW8scigpKSxlPW99fX0seyIuL19jb2YiOjE3LCIuL19nbG9iYWwiOjI3LCIuL190YXNrIjo2M31dLDQ0OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fYW4tb2JqZWN0Iiksbz10KCIuL19vYmplY3QtZHBzIiksaT10KCIuL19lbnVtLWJ1Zy1rZXlzIiksYz10KCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIikscz1mdW5jdGlvbigpe30sdT0icHJvdG90eXBlIixhPWZ1bmN0aW9uKCl7dmFyIGUscj10KCIuL19kb20tY3JlYXRlIikoImlmcmFtZSIpLG49aS5sZW5ndGgsbz0iPiI7Zm9yKHIuc3R5bGUuZGlzcGxheT0ibm9uZSIsdCgiLi9faHRtbCIpLmFwcGVuZENoaWxkKHIpLHIuc3JjPSJqYXZhc2NyaXB0OiIsZT1yLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQsZS5vcGVuKCksZS53cml0ZSgiPHNjcmlwdD5kb2N1bWVudC5GPU9iamVjdDwvc2NyaXB0IitvKSxlLmNsb3NlKCksYT1lLkY7bi0tOylkZWxldGUgYVt1XVtpW25dXTtyZXR1cm4gYSgpfTtlLmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24odCxlKXt2YXIgcjtyZXR1cm4gbnVsbCE9PXQ/KHNbdV09bih0KSxyPW5ldyBzLHNbdV09bnVsbCxyW2NdPXQpOnI9YSgpLHZvaWQgMD09PWU/cjpvKHIsZSl9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2RvbS1jcmVhdGUiOjIyLCIuL19lbnVtLWJ1Zy1rZXlzIjoyMywiLi9faHRtbCI6MzAsIi4vX29iamVjdC1kcHMiOjQ2LCIuL19zaGFyZWQta2V5Ijo1OX1dLDQ1OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fYW4tb2JqZWN0Iiksbz10KCIuL19pZTgtZG9tLWRlZmluZSIpLGk9dCgiLi9fdG8tcHJpbWl0aXZlIiksYz1PYmplY3QuZGVmaW5lUHJvcGVydHk7ci5mPXQoIi4vX2Rlc2NyaXB0b3JzIik/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKHQsZSxyKXtpZihuKHQpLGU9aShlLCEwKSxuKHIpLG8pdHJ5e3JldHVybiBjKHQsZSxyKX1jYXRjaChzKXt9aWYoImdldCJpbiByfHwic2V0ImluIHIpdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEiKTtyZXR1cm4idmFsdWUiaW4gciYmKHRbZV09ci52YWx1ZSksdH19LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19pZTgtZG9tLWRlZmluZSI6MzEsIi4vX3RvLXByaW1pdGl2ZSI6Njl9XSw0NjpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX29iamVjdC1kcCIpLG89dCgiLi9fYW4tb2JqZWN0IiksaT10KCIuL19vYmplY3Qta2V5cyIpO2UuZXhwb3J0cz10KCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzOmZ1bmN0aW9uKHQsZSl7byh0KTtmb3IodmFyIHIsYz1pKGUpLHM9Yy5sZW5ndGgsdT0wO3M+dTspbi5mKHQscj1jW3UrK10sZVtyXSk7cmV0dXJuIHR9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fb2JqZWN0LWRwIjo0NSwiLi9fb2JqZWN0LWtleXMiOjUwfV0sNDc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19vYmplY3QtcGllIiksbz10KCIuL19wcm9wZXJ0eS1kZXNjIiksaT10KCIuL190by1pb2JqZWN0IiksYz10KCIuL190by1wcmltaXRpdmUiKSxzPXQoIi4vX2hhcyIpLHU9dCgiLi9faWU4LWRvbS1kZWZpbmUiKSxhPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7ci5mPXQoIi4vX2Rlc2NyaXB0b3JzIik/YTpmdW5jdGlvbih0LGUpe2lmKHQ9aSh0KSxlPWMoZSwhMCksdSl0cnl7cmV0dXJuIGEodCxlKX1jYXRjaChyKXt9aWYocyh0LGUpKXJldHVybiBvKCFuLmYuY2FsbCh0LGUpLHRbZV0pfX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2hhcyI6MjgsIi4vX2llOC1kb20tZGVmaW5lIjozMSwiLi9fb2JqZWN0LXBpZSI6NTEsIi4vX3Byb3BlcnR5LWRlc2MiOjUzLCIuL190by1pb2JqZWN0Ijo2NiwiLi9fdG8tcHJpbWl0aXZlIjo2OX1dLDQ4OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faGFzIiksbz10KCIuL190by1vYmplY3QiKSxpPXQoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxjPU9iamVjdC5wcm90b3R5cGU7ZS5leHBvcnRzPU9iamVjdC5nZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCl7cmV0dXJuIHQ9byh0KSxuKHQsaSk/dFtpXToiZnVuY3Rpb24iPT10eXBlb2YgdC5jb25zdHJ1Y3RvciYmdCBpbnN0YW5jZW9mIHQuY29uc3RydWN0b3I/dC5jb25zdHJ1Y3Rvci5wcm90b3R5cGU6dCBpbnN0YW5jZW9mIE9iamVjdD9jOm51bGx9fSx7Ii4vX2hhcyI6MjgsIi4vX3NoYXJlZC1rZXkiOjU5LCIuL190by1vYmplY3QiOjY4fV0sNDk6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19oYXMiKSxvPXQoIi4vX3RvLWlvYmplY3QiKSxpPXQoIi4vX2FycmF5LWluY2x1ZGVzIikoITEpLGM9dCgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciByLHM9byh0KSx1PTAsYT1bXTtmb3IociBpbiBzKXIhPWMmJm4ocyxyKSYmYS5wdXNoKHIpO2Zvcig7ZS5sZW5ndGg+dTspbihzLHI9ZVt1KytdKSYmKH5pKGEscil8fGEucHVzaChyKSk7cmV0dXJuIGF9fSx7Ii4vX2FycmF5LWluY2x1ZGVzIjoxNSwiLi9faGFzIjoyOCwiLi9fc2hhcmVkLWtleSI6NTksIi4vX3RvLWlvYmplY3QiOjY2fV0sNTA6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCIpLG89dCgiLi9fZW51bS1idWcta2V5cyIpO2UuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7cmV0dXJuIG4odCxvKX19LHsiLi9fZW51bS1idWcta2V5cyI6MjMsIi4vX29iamVjdC1rZXlzLWludGVybmFsIjo0OX1dLDUxOltmdW5jdGlvbih0LGUscil7ci5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSx7fV0sNTI6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19leHBvcnQiKSxvPXQoIi4vX2NvcmUiKSxpPXQoIi4vX2ZhaWxzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIHI9KG8uT2JqZWN0fHx7fSlbdF18fE9iamVjdFt0XSxjPXt9O2NbdF09ZShyKSxuKG4uUytuLkYqaShmdW5jdGlvbigpe3IoMSl9KSwiT2JqZWN0IixjKX19LHsiLi9fY29yZSI6MTgsIi4vX2V4cG9ydCI6MjQsIi4vX2ZhaWxzIjoyNX1dLDUzOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJue2VudW1lcmFibGU6ISgxJnQpLGNvbmZpZ3VyYWJsZTohKDImdCksd3JpdGFibGU6ISg0JnQpLHZhbHVlOmV9fX0se31dLDU0OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faGlkZSIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUscil7Zm9yKHZhciBvIGluIGUpciYmdFtvXT90W29dPWVbb106bih0LG8sZVtvXSk7cmV0dXJuIHR9fSx7Ii4vX2hpZGUiOjI5fV0sNTU6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9dCgiLi9faGlkZSIpfSx7Ii4vX2hpZGUiOjI5fV0sNTY6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19pcy1vYmplY3QiKSxvPXQoIi4vX2FuLW9iamVjdCIpLGk9ZnVuY3Rpb24odCxlKXtpZihvKHQpLCFuKGUpJiZudWxsIT09ZSl0aHJvdyBUeXBlRXJyb3IoZSsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTtlLmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24oZSxyLG4pe3RyeXtuPXQoIi4vX2N0eCIpKEZ1bmN0aW9uLmNhbGwsdCgiLi9fb2JqZWN0LWdvcGQiKS5mKE9iamVjdC5wcm90b3R5cGUsIl9fcHJvdG9fXyIpLnNldCwyKSxuKGUsW10pLHI9IShlIGluc3RhbmNlb2YgQXJyYXkpfWNhdGNoKG8pe3I9ITB9cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkodCxlKSxyP3QuX19wcm90b19fPWU6bih0LGUpLHR9fSh7fSwhMSk6dm9pZCAwKSxjaGVjazppfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19jdHgiOjE5LCIuL19pcy1vYmplY3QiOjM1LCIuL19vYmplY3QtZ29wZCI6NDd9XSw1NzpbZnVuY3Rpb24odCxlLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj10KCIuL19nbG9iYWwiKSxvPXQoIi4vX2NvcmUiKSxpPXQoIi4vX29iamVjdC1kcCIpLGM9dCgiLi9fZGVzY3JpcHRvcnMiKSxzPXQoIi4vX3drcyIpKCJzcGVjaWVzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPSJmdW5jdGlvbiI9PXR5cGVvZiBvW3RdP29bdF06blt0XTtjJiZlJiYhZVtzXSYmaS5mKGUscyx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0seyIuL19jb3JlIjoxOCwiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19nbG9iYWwiOjI3LCIuL19vYmplY3QtZHAiOjQ1LCIuL193a3MiOjcxfV0sNTg6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19vYmplY3QtZHAiKS5mLG89dCgiLi9faGFzIiksaT10KCIuL193a3MiKSgidG9TdHJpbmdUYWciKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIpe3QmJiFvKHQ9cj90OnQucHJvdG90eXBlLGkpJiZuKHQsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOmV9KX19LHsiLi9faGFzIjoyOCwiLi9fb2JqZWN0LWRwIjo0NSwiLi9fd2tzIjo3MX1dLDU5OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fc2hhcmVkIikoImtleXMiKSxvPXQoIi4vX3VpZCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gblt0XXx8KG5bdF09byh0KSl9fSx7Ii4vX3NoYXJlZCI6NjAsIi4vX3VpZCI6NzB9XSw2MDpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2dsb2JhbCIpLG89Il9fY29yZS1qc19zaGFyZWRfXyIsaT1uW29dfHwobltvXT17fSk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBpW3RdfHwoaVt0XT17fSl9fSx7Ii4vX2dsb2JhbCI6Mjd9XSw2MTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2FuLW9iamVjdCIpLG89dCgiLi9fYS1mdW5jdGlvbiIpLGk9dCgiLi9fd2tzIikoInNwZWNpZXMiKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt2YXIgcixjPW4odCkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PWN8fHZvaWQgMD09KHI9bihjKVtpXSk/ZTpvKHIpfX0seyIuL19hLWZ1bmN0aW9uIjoxMSwiLi9fYW4tb2JqZWN0IjoxNCwiLi9fd2tzIjo3MX1dLDYyOltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fdG8taW50ZWdlciIpLG89dCgiLi9fZGVmaW5lZCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxyKXt2YXIgaSxjLHM9U3RyaW5nKG8oZSkpLHU9bihyKSxhPXMubGVuZ3RoO3JldHVybiB1PDB8fHU+PWE/dD8iIjp2b2lkIDA6KGk9cy5jaGFyQ29kZUF0KHUpLGk8NTUyOTZ8fGk+NTYzMTl8fHUrMT09PWF8fChjPXMuY2hhckNvZGVBdCh1KzEpKTw1NjMyMHx8Yz41NzM0Mz90P3MuY2hhckF0KHUpOmk6dD9zLnNsaWNlKHUsdSsyKTooaS01NTI5Njw8MTApKyhjLTU2MzIwKSs2NTUzNil9fX0seyIuL19kZWZpbmVkIjoyMCwiLi9fdG8taW50ZWdlciI6NjV9XSw2MzpbZnVuY3Rpb24odCxlLHIpe3ZhciBuLG8saSxjPXQoIi4vX2N0eCIpLHM9dCgiLi9faW52b2tlIiksdT10KCIuL19odG1sIiksYT10KCIuL19kb20tY3JlYXRlIiksZj10KCIuL19nbG9iYWwiKSxfPWYucHJvY2VzcyxsPWYuc2V0SW1tZWRpYXRlLHA9Zi5jbGVhckltbWVkaWF0ZSxkPWYuTWVzc2FnZUNoYW5uZWwsaD0wLHY9e30sYj0ib25yZWFkeXN0YXRlY2hhbmdlIix5PWZ1bmN0aW9uKCl7dmFyIHQ9K3RoaXM7aWYodi5oYXNPd25Qcm9wZXJ0eSh0KSl7dmFyIGU9dlt0XTtkZWxldGUgdlt0XSxlKCl9fSxtPWZ1bmN0aW9uKHQpe3kuY2FsbCh0LmRhdGEpfTtsJiZwfHwobD1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspZS5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gdlsrK2hdPWZ1bmN0aW9uKCl7cygiZnVuY3Rpb24iPT10eXBlb2YgdD90OkZ1bmN0aW9uKHQpLGUpfSxuKGgpLGh9LHA9ZnVuY3Rpb24odCl7ZGVsZXRlIHZbdF19LCJwcm9jZXNzIj09dCgiLi9fY29mIikoXyk/bj1mdW5jdGlvbih0KXtfLm5leHRUaWNrKGMoeSx0LDEpKX06ZD8obz1uZXcgZCxpPW8ucG9ydDIsby5wb3J0MS5vbm1lc3NhZ2U9bSxuPWMoaS5wb3N0TWVzc2FnZSxpLDEpKTpmLmFkZEV2ZW50TGlzdGVuZXImJiJmdW5jdGlvbiI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIWYuaW1wb3J0U2NyaXB0cz8obj1mdW5jdGlvbih0KXtmLnBvc3RNZXNzYWdlKHQrIiIsIioiKX0sZi5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixtLCExKSk6bj1iIGluIGEoInNjcmlwdCIpP2Z1bmN0aW9uKHQpe3UuYXBwZW5kQ2hpbGQoYSgic2NyaXB0IikpW2JdPWZ1bmN0aW9uKCl7dS5yZW1vdmVDaGlsZCh0aGlzKSx5LmNhbGwodCl9fTpmdW5jdGlvbih0KXtzZXRUaW1lb3V0KGMoeSx0LDEpLDApfSksZS5leHBvcnRzPXtzZXQ6bCxjbGVhcjpwfX0seyIuL19jb2YiOjE3LCIuL19jdHgiOjE5LCIuL19kb20tY3JlYXRlIjoyMiwiLi9fZ2xvYmFsIjoyNywiLi9faHRtbCI6MzAsIi4vX2ludm9rZSI6MzJ9XSw2NDpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX3RvLWludGVnZXIiKSxvPU1hdGgubWF4LGk9TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9bih0KSx0PDA/byh0K2UsMCk6aSh0LGUpfX0seyIuL190by1pbnRlZ2VyIjo2NX1dLDY1OltmdW5jdGlvbih0LGUscil7dmFyIG49TWF0aC5jZWlsLG89TWF0aC5mbG9vcjtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGlzTmFOKHQ9K3QpPzA6KHQ+MD9vOm4pKHQpfX0se31dLDY2OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faW9iamVjdCIpLG89dCgiLi9fZGVmaW5lZCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gbihvKHQpKX19LHsiLi9fZGVmaW5lZCI6MjAsIi4vX2lvYmplY3QiOjMzfV0sNjc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL190by1pbnRlZ2VyIiksbz1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ+MD9vKG4odCksOTAwNzE5OTI1NDc0MDk5MSk6MH19LHsiLi9fdG8taW50ZWdlciI6NjV9XSw2ODpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2RlZmluZWQiKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChuKHQpKX19LHsiLi9fZGVmaW5lZCI6MjB9XSw2OTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2lzLW9iamVjdCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2lmKCFuKHQpKXJldHVybiB0O3ZhciByLG87aWYoZSYmImZ1bmN0aW9uIj09dHlwZW9mKHI9dC50b1N0cmluZykmJiFuKG89ci5jYWxsKHQpKSlyZXR1cm4gbztpZigiZnVuY3Rpb24iPT10eXBlb2Yocj10LnZhbHVlT2YpJiYhbihvPXIuY2FsbCh0KSkpcmV0dXJuIG87aWYoIWUmJiJmdW5jdGlvbiI9PXR5cGVvZihyPXQudG9TdHJpbmcpJiYhbihvPXIuY2FsbCh0KSkpcmV0dXJuIG87dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LHsiLi9faXMtb2JqZWN0IjozNX1dLDcwOltmdW5jdGlvbih0LGUscil7dmFyIG49MCxvPU1hdGgucmFuZG9tKCk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiJTeW1ib2woIi5jb25jYXQodm9pZCAwPT09dD8iIjp0LCIpXyIsKCsrbitvKS50b1N0cmluZygzNikpfX0se31dLDcxOltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fc2hhcmVkIikoIndrcyIpLG89dCgiLi9fdWlkIiksaT10KCIuL19nbG9iYWwiKS5TeW1ib2wsYz0iZnVuY3Rpb24iPT10eXBlb2YgaSxzPWUuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gblt0XXx8KG5bdF09YyYmaVt0XXx8KGM/aTpvKSgiU3ltYm9sLiIrdCkpfTtzLnN0b3JlPW59LHsiLi9fZ2xvYmFsIjoyNywiLi9fc2hhcmVkIjo2MCwiLi9fdWlkIjo3MH1dLDcyOltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fY2xhc3NvZiIpLG89dCgiLi9fd2tzIikoIml0ZXJhdG9yIiksaT10KCIuL19pdGVyYXRvcnMiKTtlLmV4cG9ydHM9dCgiLi9fY29yZSIpLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMCE9dClyZXR1cm4gdFtvXXx8dFsiQEBpdGVyYXRvciJdfHxpW24odCldfX0seyIuL19jbGFzc29mIjoxNiwiLi9fY29yZSI6MTgsIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX3drcyI6NzF9XSw3MzpbZnVuY3Rpb24odCxlLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj10KCIuL19hZGQtdG8tdW5zY29wYWJsZXMiKSxvPXQoIi4vX2l0ZXItc3RlcCIpLGk9dCgiLi9faXRlcmF0b3JzIiksYz10KCIuL190by1pb2JqZWN0Iik7ZS5leHBvcnRzPXQoIi4vX2l0ZXItZGVmaW5lIikoQXJyYXksIkFycmF5IixmdW5jdGlvbih0LGUpe3RoaXMuX3Q9Yyh0KSx0aGlzLl9pPTAsdGhpcy5faz1lfSxmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3QsZT10aGlzLl9rLHI9dGhpcy5faSsrO3JldHVybiF0fHxyPj10Lmxlbmd0aD8odGhpcy5fdD12b2lkIDAsbygxKSk6ImtleXMiPT1lP28oMCxyKToidmFsdWVzIj09ZT9vKDAsdFtyXSk6bygwLFtyLHRbcl1dKX0sInZhbHVlcyIpLGkuQXJndW1lbnRzPWkuQXJyYXksbigia2V5cyIpLG4oInZhbHVlcyIpLG4oImVudHJpZXMiKX0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjEyLCIuL19pdGVyLWRlZmluZSI6MzgsIi4vX2l0ZXItc3RlcCI6NDAsIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX3RvLWlvYmplY3QiOjY2fV0sNzQ6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19leHBvcnQiKTtuKG4uUytuLkYqIXQoIi4vX2Rlc2NyaXB0b3JzIiksIk9iamVjdCIse2RlZmluZVByb3BlcnR5OnQoIi4vX29iamVjdC1kcCIpLmZ9KX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2V4cG9ydCI6MjQsIi4vX29iamVjdC1kcCI6NDV9XSw3NTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX3RvLW9iamVjdCIpLG89dCgiLi9fb2JqZWN0LWtleXMiKTt0KCIuL19vYmplY3Qtc2FwIikoImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBvKG4odCkpfX0pfSx7Ii4vX29iamVjdC1rZXlzIjo1MCwiLi9fb2JqZWN0LXNhcCI6NTIsIi4vX3RvLW9iamVjdCI6Njh9XSw3NjpbZnVuY3Rpb24odCxlLHIpe30se31dLDc3OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3ZhciBuLG8saSxjPXQoIi4vX2xpYnJhcnkiKSxzPXQoIi4vX2dsb2JhbCIpLHU9dCgiLi9fY3R4IiksYT10KCIuL19jbGFzc29mIiksZj10KCIuL19leHBvcnQiKSxfPXQoIi4vX2lzLW9iamVjdCIpLGw9KHQoIi4vX2FuLW9iamVjdCIpLHQoIi4vX2EtZnVuY3Rpb24iKSkscD10KCIuL19hbi1pbnN0YW5jZSIpLGQ9dCgiLi9fZm9yLW9mIiksaD0odCgiLi9fc2V0LXByb3RvIikuc2V0LHQoIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiKSksdj10KCIuL190YXNrIikuc2V0LGI9dCgiLi9fbWljcm90YXNrIikoKSx5PSJQcm9taXNlIixtPXMuVHlwZUVycm9yLGo9cy5wcm9jZXNzLGc9c1t5XSxqPXMucHJvY2Vzcyx4PSJwcm9jZXNzIj09YShqKSx3PWZ1bmN0aW9uKCl7fSxrPSEhZnVuY3Rpb24oKXt0cnl7dmFyIGU9Zy5yZXNvbHZlKDEpLHI9KGUuY29uc3RydWN0b3I9e30pW3QoIi4vX3drcyIpKCJzcGVjaWVzIildPWZ1bmN0aW9uKHQpe3Qodyx3KX07cmV0dXJuKHh8fCJmdW5jdGlvbiI9PXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpJiZlLnRoZW4odylpbnN0YW5jZW9mIHJ9Y2F0Y2gobil7fX0oKSxPPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9PT1lfHx0PT09ZyYmZT09PWl9LE09ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuISghXyh0KXx8ImZ1bmN0aW9uIiE9dHlwZW9mKGU9dC50aGVuKSkmJmV9LFM9ZnVuY3Rpb24odCl7cmV0dXJuIE8oZyx0KT9uZXcgRSh0KTpuZXcgbyh0KX0sRT1vPWZ1bmN0aW9uKHQpe3ZhciBlLHI7dGhpcy5wcm9taXNlPW5ldyB0KGZ1bmN0aW9uKHQsbil7aWYodm9pZCAwIT09ZXx8dm9pZCAwIT09cil0aHJvdyBtKCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvciIpO2U9dCxyPW59KSx0aGlzLnJlc29sdmU9bChlKSx0aGlzLnJlamVjdD1sKHIpfSxQPWZ1bmN0aW9uKHQpe3RyeXt0KCl9Y2F0Y2goZSl7cmV0dXJue2Vycm9yOmV9fX0sVD1mdW5jdGlvbih0LGUpe2lmKCF0Ll9uKXt0Ll9uPSEwO3ZhciByPXQuX2M7YihmdW5jdGlvbigpe2Zvcih2YXIgbj10Ll92LG89MT09dC5fcyxpPTAsYz1mdW5jdGlvbihlKXt2YXIgcixpLGM9bz9lLm9rOmUuZmFpbCxzPWUucmVzb2x2ZSx1PWUucmVqZWN0LGE9ZS5kb21haW47dHJ5e2M/KG98fCgyPT10Ll9oJiZBKHQpLHQuX2g9MSksYz09PSEwP3I9bjooYSYmYS5lbnRlcigpLHI9YyhuKSxhJiZhLmV4aXQoKSkscj09PWUucHJvbWlzZT91KG0oIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KGk9TShyKSk/aS5jYWxsKHIscyx1KTpzKHIpKTp1KG4pfWNhdGNoKGYpe3UoZil9fTtyLmxlbmd0aD5pOyljKHJbaSsrXSk7dC5fYz1bXSx0Ll9uPSExLGUmJiF0Ll9oJiZSKHQpfSl9fSxSPWZ1bmN0aW9uKHQpe3YuY2FsbChzLGZ1bmN0aW9uKCl7dmFyIGUscixuLG89dC5fdjtpZihVKHQpJiYoZT1QKGZ1bmN0aW9uKCl7eD9qLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbyx0KToocj1zLm9udW5oYW5kbGVkcmVqZWN0aW9uKT9yKHtwcm9taXNlOnQscmVhc29uOm99KToobj1zLmNvbnNvbGUpJiZuLmVycm9yJiZuLmVycm9yKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLG8pfSksdC5faD14fHxVKHQpPzI6MSksdC5fYT12b2lkIDAsZSl0aHJvdyBlLmVycm9yfSl9LFU9ZnVuY3Rpb24odCl7aWYoMT09dC5faClyZXR1cm4hMTtmb3IodmFyIGUscj10Ll9hfHx0Ll9jLG49MDtyLmxlbmd0aD5uOylpZihlPXJbbisrXSxlLmZhaWx8fCFVKGUucHJvbWlzZSkpcmV0dXJuITE7cmV0dXJuITB9LEE9ZnVuY3Rpb24odCl7di5jYWxsKHMsZnVuY3Rpb24oKXt2YXIgZTt4P2ouZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsdCk6KGU9cy5vbnJlamVjdGlvbmhhbmRsZWQpJiZlKHtwcm9taXNlOnQscmVhc29uOnQuX3Z9KX0pfSxMPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5fZHx8KGUuX2Q9ITAsZT1lLl93fHxlLGUuX3Y9dCxlLl9zPTIsZS5fYXx8KGUuX2E9ZS5fYy5zbGljZSgpKSxUKGUsITApKX0sQz1mdW5jdGlvbih0KXt2YXIgZSxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09dCl0aHJvdyBtKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyhlPU0odCkpP2IoZnVuY3Rpb24oKXt2YXIgbj17X3c6cixfZDohMX07dHJ5e2UuY2FsbCh0LHUoQyxuLDEpLHUoTCxuLDEpKX1jYXRjaChvKXtMLmNhbGwobixvKX19KTooci5fdj10LHIuX3M9MSxUKHIsITEpKX1jYXRjaChuKXtMLmNhbGwoe193OnIsX2Q6ITF9LG4pfX19O2t8fChnPWZ1bmN0aW9uKHQpe3AodGhpcyxnLHksIl9oIiksbCh0KSxuLmNhbGwodGhpcyk7dHJ5e3QodShDLHRoaXMsMSksdShMLHRoaXMsMSkpfWNhdGNoKGUpe0wuY2FsbCh0aGlzLGUpfX0sbj1mdW5jdGlvbih0KXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSxuLnByb3RvdHlwZT10KCIuL19yZWRlZmluZS1hbGwiKShnLnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbih0LGUpe3ZhciByPVMoaCh0aGlzLGcpKTtyZXR1cm4gci5vaz0iZnVuY3Rpb24iIT10eXBlb2YgdHx8dCxyLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIGUmJmUsci5kb21haW49eD9qLmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKHIpLHRoaXMuX2EmJnRoaXMuX2EucHVzaChyKSx0aGlzLl9zJiZUKHRoaXMsITEpLHIucHJvbWlzZX0sImNhdGNoIjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCx0KX19KSxFPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IG47dGhpcy5wcm9taXNlPXQsdGhpcy5yZXNvbHZlPXUoQyx0LDEpLHRoaXMucmVqZWN0PXUoTCx0LDEpfSksZihmLkcrZi5XK2YuRiohayx7UHJvbWlzZTpnfSksdCgiLi9fc2V0LXRvLXN0cmluZy10YWciKShnLHkpLHQoIi4vX3NldC1zcGVjaWVzIikoeSksaT10KCIuL19jb3JlIilbeV0sZihmLlMrZi5GKiFrLHkse3JlamVjdDpmdW5jdGlvbih0KXt2YXIgZT1TKHRoaXMpLHI9ZS5yZWplY3Q7cmV0dXJuIHIodCksZS5wcm9taXNlfX0pLGYoZi5TK2YuRiooY3x8IWspLHkse3Jlc29sdmU6ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIGcmJk8odC5jb25zdHJ1Y3Rvcix0aGlzKSlyZXR1cm4gdDt2YXIgZT1TKHRoaXMpLHI9ZS5yZXNvbHZlO3JldHVybiByKHQpLGUucHJvbWlzZX19KSxmKGYuUytmLkYqIShrJiZ0KCIuL19pdGVyLWRldGVjdCIpKGZ1bmN0aW9uKHQpe2cuYWxsKHQpWyJjYXRjaCJdKHcpfSkpLHkse2FsbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLHI9UyhlKSxuPXIucmVzb2x2ZSxvPXIucmVqZWN0LGk9UChmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxjPTE7ZCh0LCExLGZ1bmN0aW9uKHQpe3ZhciBzPWkrKyx1PSExO3IucHVzaCh2b2lkIDApLGMrKyxlLnJlc29sdmUodCkudGhlbihmdW5jdGlvbih0KXt1fHwodT0hMCxyW3NdPXQsLS1jfHxuKHIpKX0sbyl9KSwtLWN8fG4ocil9KTtyZXR1cm4gaSYmbyhpLmVycm9yKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxyPVMoZSksbj1yLnJlamVjdCxvPVAoZnVuY3Rpb24oKXtkKHQsITEsZnVuY3Rpb24odCl7ZS5yZXNvbHZlKHQpLnRoZW4oci5yZXNvbHZlLG4pfSl9KTtyZXR1cm4gbyYmbihvLmVycm9yKSxyLnByb21pc2V9fSl9LHsiLi9fYS1mdW5jdGlvbiI6MTEsIi4vX2FuLWluc3RhbmNlIjoxMywiLi9fYW4tb2JqZWN0IjoxNCwiLi9fY2xhc3NvZiI6MTYsIi4vX2NvcmUiOjE4LCIuL19jdHgiOjE5LCIuL19leHBvcnQiOjI0LCIuL19mb3Itb2YiOjI2LCIuL19nbG9iYWwiOjI3LCIuL19pcy1vYmplY3QiOjM1LCIuL19pdGVyLWRldGVjdCI6MzksIi4vX2xpYnJhcnkiOjQyLCIuL19taWNyb3Rhc2siOjQzLCIuL19yZWRlZmluZS1hbGwiOjU0LCIuL19zZXQtcHJvdG8iOjU2LCIuL19zZXQtc3BlY2llcyI6NTcsIi4vX3NldC10by1zdHJpbmctdGFnIjo1OCwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6NjEsIi4vX3Rhc2siOjYzLCIuL193a3MiOjcxfV0sNzg6W2Z1bmN0aW9uKHQsZSxyKXsidXNlIHN0cmljdCI7dmFyIG49dCgiLi9fc3RyaW5nLWF0IikoITApO3QoIi4vX2l0ZXItZGVmaW5lIikoU3RyaW5nLCJTdHJpbmciLGZ1bmN0aW9uKHQpe3RoaXMuX3Q9U3RyaW5nKHQpLHRoaXMuX2k9MH0sZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuX3Qscj10aGlzLl9pO3JldHVybiByPj1lLmxlbmd0aD97dmFsdWU6dm9pZCAwLGRvbmU6ITB9Oih0PW4oZSxyKSx0aGlzLl9pKz10Lmxlbmd0aCx7dmFsdWU6dCxkb25lOiExfSl9KX0seyIuL19pdGVyLWRlZmluZSI6MzgsIi4vX3N0cmluZy1hdCI6NjJ9XSw3OTpbZnVuY3Rpb24odCxlLHIpe3QoIi4vZXM2LmFycmF5Lml0ZXJhdG9yIik7Zm9yKHZhciBuPXQoIi4vX2dsb2JhbCIpLG89dCgiLi9faGlkZSIpLGk9dCgiLi9faXRlcmF0b3JzIiksYz10KCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxzPVsiTm9kZUxpc3QiLCJET01Ub2tlbkxpc3QiLCJNZWRpYUxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIkNTU1J1bGVMaXN0Il0sdT0wO3U8NTt1Kyspe3ZhciBhPXNbdV0sZj1uW2FdLF89ZiYmZi5wcm90b3R5cGU7XyYmIV9bY10mJm8oXyxjLGEpLGlbYV09aS5BcnJheX19LHsiLi9fZ2xvYmFsIjoyNywiLi9faGlkZSI6MjksIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX3drcyI6NzEsIi4vZXM2LmFycmF5Lml0ZXJhdG9yIjo3M31dLDgwOltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OnsiZGVmYXVsdCI6dH19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPXQoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1uKG8pLGM9dCgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIikscz1uKGMpLHU9dCgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksYT1uKHUpLGY9dCgiLi4vdXRpbHMvdXRpbHMiKSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlLHIsbil7KDAsc1siZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBvPXRoaXM7by5tZXNzYWdlQnVzPW4sby5kb21haW49KDAsZi5kaXZpZGVVUkwpKGUpLmRvbWFpbixvLmh5cGVydHlVUkw9ZSxvLnJ1bnRpbWVVUkw9cn1yZXR1cm4oMCxhWyJkZWZhdWx0Il0pKHQsW3trZXk6ImRpc2NvdmVyVXNlclJlZ2lzdGVyZWQiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcyxuPXZvaWQgMCxvPXQ/dDoiLiI7bj1lP2U6ci5oeXBlcnR5VVJMO3ZhciBjPXt0eXBlOiJyZWFkIixmcm9tOm4sdG86ci5ydW50aW1lVVJMKyIvcmVnaXN0cnkvIixib2R5OntyZXNvdXJjZTpvLGNyaXRlcmlhOm59fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbih0LGUpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKHIpe3ZhciBuPXIuYm9keS5yZXNvdXJjZTtuJiYyMDA9PT1yLmJvZHkuY29kZT90KG4pOmUoImNvZGU6ICIrci5ib2R5LmNvZGUrIiBObyB1c2VyIHdhcyBub3QgZm91bmQiKX0pfSl9fV0pLHR9KCk7clsiZGVmYXVsdCJdPV8sZS5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuLi91dGlscy91dGlscyI6ODEsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo0LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6Nn1dLDgxOltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OnsiZGVmYXVsdCI6dH19ZnVuY3Rpb24gbyh0KXtpZighdCl0aHJvdyBFcnJvcigiVVJMIGlzIG5lZWRlZCB0byBzcGxpdCIpO3ZhciBlPS8oW2EtekEtWi1dKik6XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn0pKFstYS16QS1aMC05QDolLl9cK34jPVwvXSopL2dpLHI9IiQxLCQyLCQzIixuPXQucmVwbGFjZShlLHIpLnNwbGl0KCIsIik7blswXT09PXQmJihuWzBdPSJodHRwcyIsblsxXT10KTt2YXIgbz17dHlwZTpuWzBdLGRvbWFpbjpuWzFdLGlkZW50aXR5Om5bMl19O3JldHVybiBvfWZ1bmN0aW9uIGkodCl7dmFyIGU9dC5pbmRleE9mKCJAIikscj17dXNlcm5hbWU6dC5zdWJzdHJpbmcoMCxlKSxkb21haW46dC5zdWJzdHJpbmcoZSsxLHQubGVuZ3RoKX07cmV0dXJuIHJ9ZnVuY3Rpb24gYyh0KXtyZXR1cm4hKCgwLGRbImRlZmF1bHQiXSkodCkubGVuZ3RoPjApfWZ1bmN0aW9uIHModCl7aWYodClyZXR1cm4gSlNPTi5wYXJzZSgoMCxsWyJkZWZhdWx0Il0pKHQpKX1mdW5jdGlvbiB1KHQpe3ZhciBlPXQuaW5kZXhPZigiQCIpO3JldHVybiJ1c2VyOi8vIit0LnN1YnN0cmluZyhlKzEsdC5sZW5ndGgpKyIvIit0LnN1YnN0cmluZygwLGUpfWZ1bmN0aW9uIGEodCl7dmFyIGU9byh0KTtyZXR1cm4gZS5pZGVudGl0eS5yZXBsYWNlKCIvIiwiIikrIkAiK2UuZG9tYWlufWZ1bmN0aW9uIGYodCl7aWYoInVzZXI6Ly8iPT09dC5zdWJzdHJpbmcoMCw3KSl7dmFyIGU9byh0KTtpZihlLmRvbWFpbiYmZS5pZGVudGl0eSlyZXR1cm4gdDt0aHJvdyJ1c2VyVVJMIHdpdGggd3JvbmcgZm9ybWF0In1yZXR1cm4gdSh0KX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIF89dCgiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IiksbD1uKF8pLHA9dCgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksZD1uKHApO3IuZGl2aWRlVVJMPW8sci5kaXZpZGVFbWFpbD1pLHIuZW1wdHlPYmplY3Q9YyxyLmRlZXBDbG9uZT1zLHIuZ2V0VXNlclVSTEZyb21FbWFpbD11LHIuZ2V0VXNlckVtYWlsRnJvbVVSTD1hLHIuY29udmVydFRvVXNlclVSTD1mfSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSI6MSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjozfV19LHt9LFs4MF0pKDgwKX0pOw0KDQoKfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pCn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewooZnVuY3Rpb24gKGdsb2JhbCl7Ci8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLw0KDQovLyBEaXN0cmlidXRpb24gZmlsZSBmb3IgU3luY2hlci5qcyANCi8vIHZlcnNpb246IDAuMy4wDQovLyBMYXN0IGJ1aWxkOiBUaHUgSnVsIDIxIDIwMTYgMTU6MzE6MzIgR01UKzAxMDAgKFdFU1QpDQoNCiFmdW5jdGlvbihlKXtpZigib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlKW1vZHVsZS5leHBvcnRzPWUoKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7dmFyIHQ7dD0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsdC5TeW5jaGVyPWUoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG8pe2Z1bmN0aW9uIG4ocyxjKXtpZighcltzXSl7aWYoIXRbc10pe3ZhciBhPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFjJiZhKXJldHVybiBhKHMsITApO2lmKGkpcmV0dXJuIGkocywhMCk7dmFyIHU9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrcysiJyIpO3Rocm93IHUuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsdX12YXIgbD1yW3NdPXtleHBvcnRzOnt9fTt0W3NdWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciByPXRbc11bMV1bZV07cmV0dXJuIG4ocj9yOmUpfSxsLGwuZXhwb3J0cyxlLHQscixvKX1yZXR1cm4gcltzXS5leHBvcnRzfWZvcih2YXIgaT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxzPTA7czxvLmxlbmd0aDtzKyspbihvW3NdKTtyZXR1cm4gbn0oezE6W2Z1bmN0aW9uKGUsdCxyKXtPYmplY3Qub2JzZXJ2ZSYmIUFycmF5Lm9ic2VydmUmJmZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciByPWUuZ2V0Tm90aWZpZXIsbz0icGVyZm9ybUNoYW5nZSIsbj0iX29yaWdpbmFsIixpPSJzcGxpY2UiLHM9e3B1c2g6ZnVuY3Rpb24gYShlKXt2YXIgdD1hcmd1bWVudHMscz1hW25dLmFwcGx5KHRoaXMsdCk7cmV0dXJuIHIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDpzLXQubGVuZ3RoLGFkZGVkQ291bnQ6dC5sZW5ndGgscmVtb3ZlZDpbXX19KSxzfSx1bnNoaWZ0OmZ1bmN0aW9uIHUoZSl7dmFyIHQ9YXJndW1lbnRzLHM9dVtuXS5hcHBseSh0aGlzLHQpO3JldHVybiByKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6MCxhZGRlZENvdW50OnQubGVuZ3RoLHJlbW92ZWQ6W119fSksc30scG9wOmZ1bmN0aW9uIGwoKXt2YXIgZT10aGlzLmxlbmd0aCx0PWxbbl0uY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5sZW5ndGghPT1lJiZyKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6dGhpcy5sZW5ndGgsYWRkZWRDb3VudDowLHJlbW92ZWQ6W3RdfX0sdGhpcyksdH0sc2hpZnQ6ZnVuY3Rpb24gZigpe3ZhciBlPXRoaXMubGVuZ3RoLHQ9ZltuXS5jYWxsKHRoaXMpO3JldHVybiB0aGlzLmxlbmd0aCE9PWUmJnIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDowLGFkZGVkQ291bnQ6MCxyZW1vdmVkOlt0XX19LHRoaXMpLHR9LHNwbGljZTpmdW5jdGlvbiBkKGUsdCl7dmFyIHM9YXJndW1lbnRzLGM9ZFtuXS5hcHBseSh0aGlzLHMpO3JldHVybihjLmxlbmd0aHx8cy5sZW5ndGg+MikmJnIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDplLGFkZGVkQ291bnQ6cy5sZW5ndGgtMixyZW1vdmVkOmN9fSx0aGlzKSxjfX07Zm9yKHZhciBjIGluIHMpc1tjXVtuXT10LnByb3RvdHlwZVtjXSx0LnByb3RvdHlwZVtjXT1zW2NdO3Qub2JzZXJ2ZT1mdW5jdGlvbih0LHIpe3JldHVybiBlLm9ic2VydmUodCxyLFsiYWRkIiwidXBkYXRlIiwiZGVsZXRlIixpXSl9LHQudW5vYnNlcnZlPWUudW5vYnNlcnZlfShPYmplY3QsQXJyYXkpfSx7fV0sMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSI6MTh9XSwzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZSI6MTl9XSw0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6MjB9XSw1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6MjF9XSw2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjoyMn1dLDc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiOjIzfV0sODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6MjR9XSw5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MjV9XSwxMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sIjoyNn1dLDExOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvciIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IiOjI3fV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ci5fX2VzTW9kdWxlPSEwLHJbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0se31dLDEzOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLGk9byhuKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPXRbcl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG8mJihvLndyaXRhYmxlPSEwKSwoMCxpWyJkZWZhdWx0Il0pKGUsby5rZXksbyl9fXJldHVybiBmdW5jdGlvbih0LHIsbyl7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbyYmZSh0LG8pLHR9fSgpfSx7Ii4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6NH1dLDE0OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxpPW8obikscz1lKCIuLi9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxjPW8ocyk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uIGEoZSx0LHIpe251bGw9PT1lJiYoZT1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBvPSgwLGNbImRlZmF1bHQiXSkoZSx0KTtpZih2b2lkIDA9PT1vKXt2YXIgbj0oMCxpWyJkZWZhdWx0Il0pKGUpO3JldHVybiBudWxsPT09bj92b2lkIDA6YShuLHQscil9aWYoInZhbHVlImluIG8pcmV0dXJuIG8udmFsdWU7dmFyIHM9by5nZXQ7aWYodm9pZCAwIT09cylyZXR1cm4gcy5jYWxsKHIpfX0seyIuLi9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjUsIi4uL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjZ9XSwxNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIiksaT1vKG4pLHM9ZSgiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlIiksYz1vKHMpLGE9ZSgiLi4vaGVscGVycy90eXBlb2YiKSx1PW8oYSk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgIisoInVuZGVmaW5lZCI9PXR5cGVvZiB0PyJ1bmRlZmluZWQiOigwLHVbImRlZmF1bHQiXSkodCkpKTtlLnByb3RvdHlwZT0oMCxjWyJkZWZhdWx0Il0pKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoaVsiZGVmYXVsdCJdPygwLGlbImRlZmF1bHQiXSkoZSx0KTplLl9fcHJvdG9fXz10KX19LHsiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlIjozLCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIjo4LCIuLi9oZWxwZXJzL3R5cGVvZiI6MTd9XSwxNjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9oZWxwZXJzL3R5cGVvZiIpLGk9byhuKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpO3JldHVybiF0fHwib2JqZWN0IiE9PSgidW5kZWZpbmVkIj09dHlwZW9mIHQ/InVuZGVmaW5lZCI6KDAsaVsiZGVmYXVsdCJdKSh0KSkmJiJmdW5jdGlvbiIhPXR5cGVvZiB0P2U6dH19LHsiLi4vaGVscGVycy90eXBlb2YiOjE3fV0sMTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG49ZSgiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiKSxpPW8obikscz1lKCIuLi9jb3JlLWpzL3N5bWJvbCIpLGM9byhzKSxhPSJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJiJzeW1ib2wiPT10eXBlb2YgaVsiZGVmYXVsdCJdP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJmUuY29uc3RydWN0b3I9PT1jWyJkZWZhdWx0Il0/InN5bWJvbCI6dHlwZW9mIGV9O3JbImRlZmF1bHQiXT0iZnVuY3Rpb24iPT10eXBlb2YgY1siZGVmYXVsdCJdJiYic3ltYm9sIj09PWEoaVsiZGVmYXVsdCJdKT9mdW5jdGlvbihlKXtyZXR1cm4idW5kZWZpbmVkIj09dHlwZW9mIGU/InVuZGVmaW5lZCI6YShlKX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJmUuY29uc3RydWN0b3I9PT1jWyJkZWZhdWx0Il0/InN5bWJvbCI6InVuZGVmaW5lZCI9PXR5cGVvZiBlPyJ1bmRlZmluZWQiOmEoZSl9fSx7Ii4uL2NvcmUtanMvc3ltYm9sIjoxMCwiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiOjExfV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIiksbj1vLkpTT058fChvLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbi5zdHJpbmdpZnkuYXBwbHkobixhcmd1bWVudHMpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNX1dLDE5OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZSIpO3ZhciBvPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uY3JlYXRlKGUsdCl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlIjoxMDB9XSwyMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiKTt2YXIgbz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7cmV0dXJuIG8uZGVmaW5lUHJvcGVydHkoZSx0LHIpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSI6MTAxfV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIik7dmFyIG89ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjEwMn1dLDIyOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5nZXRQcm90b3R5cGVPZn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiOjEwM31dLDIzOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5rZXlzfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI6MTA0fV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LnNldFByb3RvdHlwZU9mfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiI6MTA1fV0sMjU6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksZSgiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksZSgiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksZSgiLi4vbW9kdWxlcy9lczYucHJvbWlzZSIpLHQuZXhwb3J0cz1lKCIuLi9tb2R1bGVzL19jb3JlIikuUHJvbWlzZX0seyIuLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyI6MTA2LCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIjoxMDcsIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTA4LCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjExMn1dLDI2OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIiksZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciIpLGUoIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5TeW1ib2x9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjEwNiwiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIjoxMDksIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciI6MTEwLCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZSI6MTExfV0sMjc6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiKSxlKCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCIpLmYoIml0ZXJhdG9yIil9LHsiLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCI6OTYsIi4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTA4LCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjExMn1dLDI4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMzA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbyl7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW8mJm8gaW4gZSl0aHJvdyBUeXBlRXJyb3IocisiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiKTtyZXR1cm4gZX19LHt9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbyhlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGV9fSx7Ii4vX2lzLW9iamVjdCI6NTR9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWlvYmplY3QiKSxuPWUoIi4vX3RvLWxlbmd0aCIpLGk9ZSgiLi9fdG8taW5kZXgiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscixzKXt2YXIgYyxhPW8odCksdT1uKGEubGVuZ3RoKSxsPWkocyx1KTtpZihlJiZyIT1yKXtmb3IoO3U+bDspaWYoYz1hW2wrK10sYyE9YylyZXR1cm4hMH1lbHNlIGZvcig7dT5sO2wrKylpZigoZXx8bCBpbiBhKSYmYVtsXT09PXIpcmV0dXJuIGV8fGx8fDA7cmV0dXJuIWUmJi0xfX19LHsiLi9fdG8taW5kZXgiOjg4LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tbGVuZ3RoIjo5MX1dLDMzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fY29mIiksbj1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1vKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSkscz1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChyKXt9fTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixjO3JldHVybiB2b2lkIDA9PT1lPyJVbmRlZmluZWQiOm51bGw9PT1lPyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9cyh0PU9iamVjdChlKSxuKSk/cjppP28odCk6Ik9iamVjdCI9PShjPW8odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6Y319LHsiLi9fY29mIjozNCwiLi9fd2tzIjo5N31dLDM0OltmdW5jdGlvbihlLHQscil7dmFyIG89e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz10LmV4cG9ydHM9e3ZlcnNpb246IjIuNC4wIn07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9byl9LHt9XSwzNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2EtZnVuY3Rpb24iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG8oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixvKXtyZXR1cm4gZS5jYWxsKHQscixvKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG8sbil7cmV0dXJuIGUuY2FsbCh0LHIsbyxuKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LHsiLi9fYS1mdW5jdGlvbiI6Mjh9XSwzNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZih2b2lkIDA9PWUpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIitlKTtyZXR1cm4gZX19LHt9XSwzODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZmFpbHMiOjQzfV0sMzk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pcy1vYmplY3QiKSxuPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50LGk9byhuKSYmbyhuLmNyZWF0ZUVsZW1lbnQpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9uLmNyZWF0ZUVsZW1lbnQoZSk6e319fSx7Ii4vX2dsb2JhbCI6NDUsIi4vX2lzLW9iamVjdCI6NTR9XSw0MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSx7fV0sNDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cyIpLG49ZSgiLi9fb2JqZWN0LWdvcHMiKSxpPWUoIi4vX29iamVjdC1waWUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9byhlKSxyPW4uZjtpZihyKWZvcih2YXIgcyxjPXIoZSksYT1pLmYsdT0wO2MubGVuZ3RoPnU7KWEuY2FsbChlLHM9Y1t1KytdKSYmdC5wdXNoKHMpO3JldHVybiB0fX0seyIuL19vYmplY3QtZ29wcyI6NzEsIi4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXBpZSI6NzV9XSw0MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9fY29yZSIpLGk9ZSgiLi9fY3R4Iikscz1lKCIuL19oaWRlIiksYz0icHJvdG90eXBlIixhPWZ1bmN0aW9uKGUsdCxyKXt2YXIgdSxsLGYsZD1lJmEuRixfPWUmYS5HLHA9ZSZhLlMsYj1lJmEuUCxoPWUmYS5CLHk9ZSZhLlcsdj1fP246blt0XXx8KG5bdF09e30pLGo9dltjXSxtPV8/bzpwP29bdF06KG9bdF18fHt9KVtjXTtfJiYocj10KTtmb3IodSBpbiByKWw9IWQmJm0mJnZvaWQgMCE9PW1bdV0sbCYmdSBpbiB2fHwoZj1sP21bdV06clt1XSx2W3VdPV8mJiJmdW5jdGlvbiIhPXR5cGVvZiBtW3VdP3JbdV06aCYmbD9pKGYsbyk6eSYmbVt1XT09Zj9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LHIsbyl7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LHIpfXJldHVybiBuZXcgZSh0LHIsbyl9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdFtjXT1lW2NdLHR9KGYpOmImJiJmdW5jdGlvbiI9PXR5cGVvZiBmP2koRnVuY3Rpb24uY2FsbCxmKTpmLGImJigodi52aXJ0dWFsfHwodi52aXJ0dWFsPXt9KSlbdV09ZixlJmEuUiYmaiYmIWpbdV0mJnMoaix1LGYpKSl9O2EuRj0xLGEuRz0yLGEuUz00LGEuUD04LGEuQj0xNixhLlc9MzIsYS5VPTY0LGEuUj0xMjgsdC5leHBvcnRzPWF9LHsiLi9fY29yZSI6MzUsIi4vX2N0eCI6MzYsIi4vX2dsb2JhbCI6NDUsIi4vX2hpZGUiOjQ3fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKHQpe3JldHVybiEwfX19LHt9XSw0NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2N0eCIpLG49ZSgiLi9faXRlci1jYWxsIiksaT1lKCIuL19pcy1hcnJheS1pdGVyIikscz1lKCIuL19hbi1vYmplY3QiKSxjPWUoIi4vX3RvLWxlbmd0aCIpLGE9ZSgiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiKSx1PXt9LGw9e30scj10LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsZixkKXt2YXIgXyxwLGIsaCx5PWQ/ZnVuY3Rpb24oKXtyZXR1cm4gZX06YShlKSx2PW8ocixmLHQ/MjoxKSxqPTA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgaXRlcmFibGUhIik7aWYoaSh5KSl7Zm9yKF89YyhlLmxlbmd0aCk7Xz5qO2orKylpZihoPXQ/dihzKHA9ZVtqXSlbMF0scFsxXSk6dihlW2pdKSxoPT09dXx8aD09PWwpcmV0dXJuIGh9ZWxzZSBmb3IoYj15LmNhbGwoZSk7IShwPWIubmV4dCgpKS5kb25lOylpZihoPW4oYix2LHAudmFsdWUsdCksaD09PXV8fGg9PT1sKXJldHVybiBofTtyLkJSRUFLPXUsci5SRVRVUk49bH0seyIuL19hbi1vYmplY3QiOjMxLCIuL19jdHgiOjM2LCIuL19pcy1hcnJheS1pdGVyIjo1MiwiLi9faXRlci1jYWxsIjo1NSwiLi9fdG8tbGVuZ3RoIjo5MSwiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiOjk4fV0sNDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz10LmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9byl9LHt9XSw0NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXt9Lmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBvLmNhbGwoZSx0KX19LHt9XSw0NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1kcCIpLG49ZSgiLi9fcHJvcGVydHktZGVzYyIpO3QuZXhwb3J0cz1lKCIuL19kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gby5mKGUsdCxuKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX29iamVjdC1kcCI6NjYsIi4vX3Byb3BlcnR5LWRlc2MiOjc3fV0sNDg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZSgiLi9fZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuL19nbG9iYWwiOjQ1fV0sNDk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9IWUoIi4vX2Rlc2NyaXB0b3JzIikmJiFlKCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShlKCIuL19kb20tY3JlYXRlIikoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2ZhaWxzIjo0M31dLDUwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbz12b2lkIDA9PT1yO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBvP2UoKTplLmNhbGwocik7Y2FzZSAxOnJldHVybiBvP2UodFswXSk6ZS5jYWxsKHIsdFswXSk7Y2FzZSAyOnJldHVybiBvP2UodFswXSx0WzFdKTplLmNhbGwocix0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gbz9lKHRbMF0sdFsxXSx0WzJdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBvP2UodFswXSx0WzFdLHRbMl0sdFszXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0sdFszXSl9cmV0dXJuIGUuYXBwbHkocix0KX19LHt9XSw1MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NvZiIpO3QuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIlN0cmluZyI9PW8oZSk/ZS5zcGxpdCgiIik6T2JqZWN0KGUpfX0seyIuL19jb2YiOjM0fV0sNTI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pdGVyYXRvcnMiKSxuPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9QXJyYXkucHJvdG90eXBlO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmKG8uQXJyYXk9PT1lfHxpW25dPT09ZSl9fSx7Ii4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTd9XSw1MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NvZiIpO3QuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4iQXJyYXkiPT1vKGUpfX0seyIuL19jb2YiOjM0fV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0se31dLDU1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fYW4tb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG4pe3RyeXtyZXR1cm4gbj90KG8ocilbMF0sclsxXSk6dChyKX1jYXRjaChpKXt2YXIgcz1lWyJyZXR1cm4iXTt0aHJvdyB2b2lkIDAhPT1zJiZvKHMuY2FsbChlKSksaX19fSx7Ii4vX2FuLW9iamVjdCI6MzF9XSw1NjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCIuL19vYmplY3QtY3JlYXRlIiksbj1lKCIuL19wcm9wZXJ0eS1kZXNjIiksaT1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLHM9e307ZSgiLi9faGlkZSIpKHMsZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9byhzLHtuZXh0Om4oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LHsiLi9faGlkZSI6NDcsIi4vX29iamVjdC1jcmVhdGUiOjY1LCIuL19wcm9wZXJ0eS1kZXNjIjo3NywiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL193a3MiOjk3fV0sNTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fbGlicmFyeSIpLG49ZSgiLi9fZXhwb3J0IiksaT1lKCIuL19yZWRlZmluZSIpLHM9ZSgiLi9faGlkZSIpLGM9ZSgiLi9faGFzIiksYT1lKCIuL19pdGVyYXRvcnMiKSx1PWUoIi4vX2l0ZXItY3JlYXRlIiksbD1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLGY9ZSgiLi9fb2JqZWN0LWdwbyIpLGQ9ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksXz0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxwPSJAQGl0ZXJhdG9yIixiPSJrZXlzIixoPSJ2YWx1ZXMiLHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLHYsaixtLGcpe3Uocix0LHYpO3ZhciB3LE8sayx4PWZ1bmN0aW9uKGUpe2lmKCFfJiZlIGluIFIpcmV0dXJuIFJbZV07c3dpdGNoKGUpe2Nhc2UgYjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX07Y2FzZSBoOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LEM9dCsiIEl0ZXJhdG9yIixFPWo9PWgsUz0hMSxSPWUucHJvdG90eXBlLFQ9UltkXXx8UltwXXx8aiYmUltqXSxNPVR8fHgoaiksUD1qP0U/eCgiZW50cmllcyIpOk06dm9pZCAwLEE9IkFycmF5Ij09dD9SLmVudHJpZXN8fFQ6VDtpZihBJiYoaz1mKEEuY2FsbChuZXcgZSkpLGshPT1PYmplY3QucHJvdG90eXBlJiYobChrLEMsITApLG98fGMoayxkKXx8cyhrLGQseSkpKSxFJiZUJiZULm5hbWUhPT1oJiYoUz0hMCxNPWZ1bmN0aW9uKCl7cmV0dXJuIFQuY2FsbCh0aGlzKX0pLG8mJiFnfHwhXyYmIVMmJlJbZF18fHMoUixkLE0pLGFbdF09TSxhW0NdPXksailpZih3PXt2YWx1ZXM6RT9NOngoaCksa2V5czptP006eChiKSxlbnRyaWVzOlB9LGcpZm9yKE8gaW4gdylPIGluIFJ8fGkoUixPLHdbT10pO2Vsc2UgbihuLlArbi5GKihffHxTKSx0LHcpO3JldHVybiB3fX0seyIuL19leHBvcnQiOjQyLCIuL19oYXMiOjQ2LCIuL19oaWRlIjo0NywiLi9faXRlci1jcmVhdGUiOjU2LCIuL19pdGVyYXRvcnMiOjYwLCIuL19saWJyYXJ5Ijo2MiwiLi9fb2JqZWN0LWdwbyI6NzIsIi4vX3JlZGVmaW5lIjo3OSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL193a3MiOjk3fV0sNTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxuPSExO3RyeXt2YXIgaT1bN11bb10oKTtpWyJyZXR1cm4iXT1mdW5jdGlvbigpe249ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChzKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFuKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10scz1pW29dKCk7cy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbb109ZnVuY3Rpb24oKXtyZXR1cm4gc30sZShpKX1jYXRjaChjKXt9cmV0dXJuIHJ9fSx7Ii4vX3drcyI6OTd9XSw1OTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LHt9XSw2MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17fX0se31dLDYxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWtleXMiKSxuPWUoIi4vX3RvLWlvYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsaT1uKGUpLHM9byhpKSxjPXMubGVuZ3RoLGE9MDtjPmE7KWlmKGlbcj1zW2ErK11dPT09dClyZXR1cm4gcn19LHsiLi9fb2JqZWN0LWtleXMiOjc0LCIuL190by1pb2JqZWN0Ijo5MH1dLDYyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSEwfSx7fV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL191aWQiKSgibWV0YSIpLG49ZSgiLi9faXMtb2JqZWN0IiksaT1lKCIuL19oYXMiKSxzPWUoIi4vX29iamVjdC1kcCIpLmYsYz0wLGE9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sdT0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiBhKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSksbD1mdW5jdGlvbihlKXtzKGUsbyx7dmFsdWU6e2k6Ik8iKyArK2Msdzp7fX19KX0sZj1mdW5jdGlvbihlLHQpe2lmKCFuKGUpKXJldHVybiJzeW1ib2wiPT10eXBlb2YgZT9lOigic3RyaW5nIj09dHlwZW9mIGU/IlMiOiJQIikrZTtpZighaShlLG8pKXtpZighYShlKSlyZXR1cm4iRiI7aWYoIXQpcmV0dXJuIkUiO2woZSl9cmV0dXJuIGVbb10uaX0sZD1mdW5jdGlvbihlLHQpe2lmKCFpKGUsbykpe2lmKCFhKGUpKXJldHVybiEwO2lmKCF0KXJldHVybiExO2woZSl9cmV0dXJuIGVbb10ud30sXz1mdW5jdGlvbihlKXtyZXR1cm4gdSYmcC5ORUVEJiZhKGUpJiYhaShlLG8pJiZsKGUpLGV9LHA9dC5leHBvcnRzPXtLRVk6byxORUVEOiExLGZhc3RLZXk6ZixnZXRXZWFrOmQsb25GcmVlemU6X319LHsiLi9fZmFpbHMiOjQzLCIuL19oYXMiOjQ2LCIuL19pcy1vYmplY3QiOjU0LCIuL19vYmplY3QtZHAiOjY2LCIuL191aWQiOjk0fV0sNjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX3Rhc2siKS5zZXQsaT1vLk11dGF0aW9uT2JzZXJ2ZXJ8fG8uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixzPW8ucHJvY2VzcyxjPW8uUHJvbWlzZSxhPSJwcm9jZXNzIj09ZSgiLi9fY29mIikocyk7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLHU9ZnVuY3Rpb24oKXt2YXIgbyxuO2ZvcihhJiYobz1zLmRvbWFpbikmJm8uZXhpdCgpO2U7KXtuPWUuZm4sZT1lLm5leHQ7dHJ5e24oKX1jYXRjaChpKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxpfX10PXZvaWQgMCxvJiZvLmVudGVyKCl9O2lmKGEpcj1mdW5jdGlvbigpe3MubmV4dFRpY2sodSl9O2Vsc2UgaWYoaSl7dmFyIGw9ITAsZj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkodSkub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe2YuZGF0YT1sPSFsfX1lbHNlIGlmKGMmJmMucmVzb2x2ZSl7dmFyIGQ9Yy5yZXNvbHZlKCk7cj1mdW5jdGlvbigpe2QudGhlbih1KX19ZWxzZSByPWZ1bmN0aW9uKCl7bi5jYWxsKG8sdSl9O3JldHVybiBmdW5jdGlvbihvKXt2YXIgbj17Zm46byxuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1uKSxlfHwoZT1uLHIoKSksdD1ufX19LHsiLi9fY29mIjozNCwiLi9fZ2xvYmFsIjo0NSwiLi9fdGFzayI6ODd9XSw2NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWRwcyIpLGk9ZSgiLi9fZW51bS1idWcta2V5cyIpLHM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLGM9ZnVuY3Rpb24oKXt9LGE9InByb3RvdHlwZSIsdT1mdW5jdGlvbigpe3ZhciB0LHI9ZSgiLi9fZG9tLWNyZWF0ZSIpKCJpZnJhbWUiKSxvPWkubGVuZ3RoLG49Ij4iO2ZvcihyLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGUoIi4vX2h0bWwiKS5hcHBlbmRDaGlsZChyKSxyLnNyYz0iamF2YXNjcmlwdDoiLHQ9ci5jb250ZW50V2luZG93LmRvY3VtZW50LHQub3BlbigpLHQud3JpdGUoIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8L3NjcmlwdCIrbiksdC5jbG9zZSgpLHU9dC5GO28tLTspZGVsZXRlIHVbYV1baVtvXV07cmV0dXJuIHUoKX07dC5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhjW2FdPW8oZSkscj1uZXcgYyxjW2FdPW51bGwscltzXT1lKTpyPXUoKSx2b2lkIDA9PT10P3I6bihyLHQpfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kb20tY3JlYXRlIjozOSwiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX2h0bWwiOjQ4LCIuL19vYmplY3QtZHBzIjo2NywiLi9fc2hhcmVkLWtleSI6ODN9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpLG49ZSgiLi9faWU4LWRvbS1kZWZpbmUiKSxpPWUoIi4vX3RvLXByaW1pdGl2ZSIpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobyhlKSx0PWkodCwhMCksbyhyKSxuKXRyeXtyZXR1cm4gcyhlLHQscil9Y2F0Y2goYyl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9faWU4LWRvbS1kZWZpbmUiOjQ5LCIuL190by1wcmltaXRpdmUiOjkzfV0sNjc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3QtZHAiKSxuPWUoIi4vX2FuLW9iamVjdCIpLGk9ZSgiLi9fb2JqZWN0LWtleXMiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe24oZSk7Zm9yKHZhciByLHM9aSh0KSxjPXMubGVuZ3RoLGE9MDtjPmE7KW8uZihlLHI9c1thKytdLHRbcl0pO3JldHVybiBlfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX29iamVjdC1kcCI6NjYsIi4vX29iamVjdC1rZXlzIjo3NH1dLDY4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LXBpZSIpLG49ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fdG8taW9iamVjdCIpLHM9ZSgiLi9fdG8tcHJpbWl0aXZlIiksYz1lKCIuL19oYXMiKSxhPWUoIi4vX2llOC1kb20tZGVmaW5lIiksdT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP3U6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1zKHQsITApLGEpdHJ5e3JldHVybiB1KGUsdCl9Y2F0Y2gocil7fWlmKGMoZSx0KSlyZXR1cm4gbighby5mLmNhbGwoZSx0KSxlW3RdKX19LHsiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19oYXMiOjQ2LCIuL19pZTgtZG9tLWRlZmluZSI6NDksIi4vX29iamVjdC1waWUiOjc1LCIuL19wcm9wZXJ0eS1kZXNjIjo3NywiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLXByaW1pdGl2ZSI6OTN9XSw2OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWlvYmplY3QiKSxuPWUoIi4vX29iamVjdC1nb3BuIikuZixpPXt9LnRvU3RyaW5nLHM9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXSxjPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXtyZXR1cm4gcy5zbGljZSgpfX07dC5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIHMmJiJbb2JqZWN0IFdpbmRvd10iPT1pLmNhbGwoZSk/YyhlKTpuKG8oZSkpfX0seyIuL19vYmplY3QtZ29wbiI6NzAsIi4vX3RvLWlvYmplY3QiOjkwfV0sNzA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCIpLG49ZSgiLi9fZW51bS1idWcta2V5cyIpLmNvbmNhdCgibGVuZ3RoIiwicHJvdG90eXBlIik7ci5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbihlKXtyZXR1cm4gbyhlLG4pfX0seyIuL19lbnVtLWJ1Zy1rZXlzIjo0MCwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjczfV0sNzE6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc30se31dLDcyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faGFzIiksbj1lKCIuL190by1vYmplY3QiKSxpPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxzPU9iamVjdC5wcm90b3R5cGU7dC5leHBvcnRzPU9iamVjdC5nZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24oZSl7cmV0dXJuIGU9bihlKSxvKGUsaSk/ZVtpXToiZnVuY3Rpb24iPT10eXBlb2YgZS5jb25zdHJ1Y3RvciYmZSBpbnN0YW5jZW9mIGUuY29uc3RydWN0b3I/ZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGU6ZSBpbnN0YW5jZW9mIE9iamVjdD9zOm51bGx9fSx7Ii4vX2hhcyI6NDYsIi4vX3NoYXJlZC1rZXkiOjgzLCIuL190by1vYmplY3QiOjkyfV0sNzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19oYXMiKSxuPWUoIi4vX3RvLWlvYmplY3QiKSxpPWUoIi4vX2FycmF5LWluY2x1ZGVzIikoITEpLHM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLGM9bihlKSxhPTAsdT1bXTtmb3IociBpbiBjKXIhPXMmJm8oYyxyKSYmdS5wdXNoKHIpO2Zvcig7dC5sZW5ndGg+YTspbyhjLHI9dFthKytdKSYmKH5pKHUscil8fHUucHVzaChyKSk7cmV0dXJuIHV9fSx7Ii4vX2FycmF5LWluY2x1ZGVzIjozMiwiLi9faGFzIjo0NiwiLi9fc2hhcmVkLWtleSI6ODMsIi4vX3RvLWlvYmplY3QiOjkwfV0sNzQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCIpLG49ZSgiLi9fZW51bS1idWcta2V5cyIpO3QuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG8oZSxuKX19LHsiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX29iamVjdC1rZXlzLWludGVybmFsIjo3M31dLDc1OltmdW5jdGlvbihlLHQscil7ci5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSx7fV0sNzY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKSxuPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2ZhaWxzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9KG4uT2JqZWN0fHx7fSlbZV18fE9iamVjdFtlXSxzPXt9O3NbZV09dChyKSxvKG8uUytvLkYqaShmdW5jdGlvbigpe3IoMSl9KSwiT2JqZWN0IixzKX19LHsiLi9fY29yZSI6MzUsIi4vX2V4cG9ydCI6NDIsIi4vX2ZhaWxzIjo0M31dLDc3OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue2VudW1lcmFibGU6ISgxJmUpLGNvbmZpZ3VyYWJsZTohKDImZSksd3JpdGFibGU6ISg0JmUpLHZhbHVlOnR9fX0se31dLDc4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faGlkZSIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuIGluIHQpciYmZVtuXT9lW25dPXRbbl06byhlLG4sdFtuXSk7cmV0dXJuIGV9fSx7Ii4vX2hpZGUiOjQ3fV0sNzk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZSgiLi9faGlkZSIpfSx7Ii4vX2hpZGUiOjQ3fV0sODA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pcy1vYmplY3QiKSxuPWUoIi4vX2FuLW9iamVjdCIpLGk9ZnVuY3Rpb24oZSx0KXtpZihuKGUpLCFvKHQpJiZudWxsIT09dCl0aHJvdyBUeXBlRXJyb3IodCsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTt0LmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24odCxyLG8pe3RyeXtvPWUoIi4vX2N0eCIpKEZ1bmN0aW9uLmNhbGwsZSgiLi9fb2JqZWN0LWdvcGQiKS5mKE9iamVjdC5wcm90b3R5cGUsIl9fcHJvdG9fXyIpLnNldCwyKSxvKHQsW10pLHI9ISh0IGluc3RhbmNlb2YgQXJyYXkpfWNhdGNoKG4pe3I9ITB9cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSx0KSxyP2UuX19wcm90b19fPXQ6byhlLHQpLGV9fSh7fSwhMSk6dm9pZCAwKSxjaGVjazppfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19jdHgiOjM2LCIuL19pcy1vYmplY3QiOjU0LCIuL19vYmplY3QtZ29wZCI6Njh9XSw4MTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2NvcmUiKSxpPWUoIi4vX29iamVjdC1kcCIpLHM9ZSgiLi9fZGVzY3JpcHRvcnMiKSxjPWUoIi4vX3drcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PSJmdW5jdGlvbiI9PXR5cGVvZiBuW2VdP25bZV06b1tlXTtzJiZ0JiYhdFtjXSYmaS5mKHQsYyx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0seyIuL19jb3JlIjozNSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19nbG9iYWwiOjQ1LCIuL19vYmplY3QtZHAiOjY2LCIuL193a3MiOjk3fV0sODI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3QtZHAiKS5mLG49ZSgiLi9faGFzIiksaT1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UmJiFuKGU9cj9lOmUucHJvdG90eXBlLGkpJiZvKGUsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LHsiLi9faGFzIjo0NiwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fd2tzIjo5N31dLDgzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fc2hhcmVkIikoImtleXMiKSxuPWUoIi4vX3VpZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gb1tlXXx8KG9bZV09bihlKSl9fSx7Ii4vX3NoYXJlZCI6ODQsIi4vX3VpZCI6OTR9XSw4NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49Il9fY29yZS1qc19zaGFyZWRfXyIsaT1vW25dfHwob1tuXT17fSk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpW2VdfHwoaVtlXT17fSl9fSx7Ii4vX2dsb2JhbCI6NDV9XSw4NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpLG49ZSgiLi9fYS1mdW5jdGlvbiIpLGk9ZSgiLi9fd2tzIikoInNwZWNpZXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW8oZSkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PXN8fHZvaWQgMD09KHI9byhzKVtpXSk/dDpuKHIpfX0seyIuL19hLWZ1bmN0aW9uIjoyOCwiLi9fYW4tb2JqZWN0IjozMSwiLi9fd2tzIjo5N31dLDg2OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW50ZWdlciIpLG49ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyKXt2YXIgaSxzLGM9U3RyaW5nKG4odCkpLGE9byhyKSx1PWMubGVuZ3RoO3JldHVybiBhPDB8fGE+PXU/ZT8iIjp2b2lkIDA6KGk9Yy5jaGFyQ29kZUF0KGEpLGk8NTUyOTZ8fGk+NTYzMTl8fGErMT09PXV8fChzPWMuY2hhckNvZGVBdChhKzEpKTw1NjMyMHx8cz41NzM0Mz9lP2MuY2hhckF0KGEpOmk6ZT9jLnNsaWNlKGEsYSsyKTooaS01NTI5Njw8MTApKyhzLTU2MzIwKSs2NTUzNil9fX0seyIuL19kZWZpbmVkIjozNywiLi9fdG8taW50ZWdlciI6ODl9XSw4NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvLG4saSxzPWUoIi4vX2N0eCIpLGM9ZSgiLi9faW52b2tlIiksYT1lKCIuL19odG1sIiksdT1lKCIuL19kb20tY3JlYXRlIiksbD1lKCIuL19nbG9iYWwiKSxmPWwucHJvY2VzcyxkPWwuc2V0SW1tZWRpYXRlLF89bC5jbGVhckltbWVkaWF0ZSxwPWwuTWVzc2FnZUNoYW5uZWwsYj0wLGg9e30seT0ib25yZWFkeXN0YXRlY2hhbmdlIix2PWZ1bmN0aW9uKCl7dmFyIGU9K3RoaXM7aWYoaC5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIHQ9aFtlXTtkZWxldGUgaFtlXSx0KCl9fSxqPWZ1bmN0aW9uKGUpe3YuY2FsbChlLmRhdGEpfTtkJiZffHwoZD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspdC5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gaFsrK2JdPWZ1bmN0aW9uKCl7YygiZnVuY3Rpb24iPT10eXBlb2YgZT9lOkZ1bmN0aW9uKGUpLHQpfSxvKGIpLGJ9LF89ZnVuY3Rpb24oZSl7ZGVsZXRlIGhbZV19LCJwcm9jZXNzIj09ZSgiLi9fY29mIikoZik/bz1mdW5jdGlvbihlKXtmLm5leHRUaWNrKHModixlLDEpKX06cD8obj1uZXcgcCxpPW4ucG9ydDIsbi5wb3J0MS5vbm1lc3NhZ2U9aixvPXMoaS5wb3N0TWVzc2FnZSxpLDEpKTpsLmFkZEV2ZW50TGlzdGVuZXImJiJmdW5jdGlvbiI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIWwuaW1wb3J0U2NyaXB0cz8obz1mdW5jdGlvbihlKXtsLnBvc3RNZXNzYWdlKGUrIiIsIioiKX0sbC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixqLCExKSk6bz15IGluIHUoInNjcmlwdCIpP2Z1bmN0aW9uKGUpe2EuYXBwZW5kQ2hpbGQodSgic2NyaXB0IikpW3ldPWZ1bmN0aW9uKCl7YS5yZW1vdmVDaGlsZCh0aGlzKSx2LmNhbGwoZSl9fTpmdW5jdGlvbihlKXtzZXRUaW1lb3V0KHModixlLDEpLDApfSksdC5leHBvcnRzPXtzZXQ6ZCxjbGVhcjpffX0seyIuL19jb2YiOjM0LCIuL19jdHgiOjM2LCIuL19kb20tY3JlYXRlIjozOSwiLi9fZ2xvYmFsIjo0NSwiLi9faHRtbCI6NDgsIi4vX2ludm9rZSI6NTB9XSw4ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWludGVnZXIiKSxuPU1hdGgubWF4LGk9TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9byhlKSxlPDA/bihlK3QsMCk6aShlLHQpfX0seyIuL190by1pbnRlZ2VyIjo4OX1dLDg5OltmdW5jdGlvbihlLHQscil7dmFyIG89TWF0aC5jZWlsLG49TWF0aC5mbG9vcjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9uOm8pKGUpfX0se31dLDkwOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faW9iamVjdCIpLG49ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19LHsiLi9fZGVmaW5lZCI6MzcsIi4vX2lvYmplY3QiOjUxfV0sOTE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pbnRlZ2VyIiksbj1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MD9uKG8oZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LHsiLi9fdG8taW50ZWdlciI6ODl9XSw5MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChvKGUpKX19LHsiLi9fZGVmaW5lZCI6Mzd9XSw5MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFvKGUpKXJldHVybiBlO3ZhciByLG47aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFvKG49ci5jYWxsKGUpKSlyZXR1cm4gbjtpZigiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnZhbHVlT2YpJiYhbyhuPXIuY2FsbChlKSkpcmV0dXJuIG47aWYoIXQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbyhuPXIuY2FsbChlKSkpcmV0dXJuIG47dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LHsiLi9faXMtb2JqZWN0Ijo1NH1dLDk0OltmdW5jdGlvbihlLHQscil7dmFyIG89MCxuPU1hdGgucmFuZG9tKCk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJTeW1ib2woIi5jb25jYXQodm9pZCAwPT09ZT8iIjplLCIpXyIsKCsrbytuKS50b1N0cmluZygzNikpfX0se31dLDk1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj1lKCIuL19jb3JlIiksaT1lKCIuL19saWJyYXJ5Iikscz1lKCIuL193a3MtZXh0IiksYz1lKCIuL19vYmplY3QtZHAiKS5mO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1uLlN5bWJvbHx8KG4uU3ltYm9sPWk/e306by5TeW1ib2x8fHt9KTsiXyI9PWUuY2hhckF0KDApfHxlIGluIHR8fGModCxlLHt2YWx1ZTpzLmYoZSl9KX19LHsiLi9fY29yZSI6MzUsIi4vX2dsb2JhbCI6NDUsIi4vX2xpYnJhcnkiOjYyLCIuL19vYmplY3QtZHAiOjY2LCIuL193a3MtZXh0Ijo5Nn1dLDk2OltmdW5jdGlvbihlLHQscil7ci5mPWUoIi4vX3drcyIpfSx7Ii4vX3drcyI6OTd9XSw5NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3NoYXJlZCIpKCJ3a3MiKSxuPWUoIi4vX3VpZCIpLGk9ZSgiLi9fZ2xvYmFsIikuU3ltYm9sLHM9ImZ1bmN0aW9uIj09dHlwZW9mIGksYz10LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG9bZV18fChvW2VdPXMmJmlbZV18fChzP2k6bikoIlN5bWJvbC4iK2UpKX07Yy5zdG9yZT1vfSx7Ii4vX2dsb2JhbCI6NDUsIi4vX3NoYXJlZCI6ODQsIi4vX3VpZCI6OTR9XSw5ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NsYXNzb2YiKSxuPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9ZSgiLi9faXRlcmF0b3JzIik7dC5leHBvcnRzPWUoIi4vX2NvcmUiKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbbl18fGVbIkBAaXRlcmF0b3IiXXx8aVtvKGUpXX19LHsiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3fV0sOTk6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fYWRkLXRvLXVuc2NvcGFibGVzIiksbj1lKCIuL19pdGVyLXN0ZXAiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLHM9ZSgiLi9fdG8taW9iamVjdCIpO3QuZXhwb3J0cz1lKCIuL19pdGVyLWRlZmluZSIpKEFycmF5LCJBcnJheSIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PXMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG4oMSkpOiJrZXlzIj09dD9uKDAscik6InZhbHVlcyI9PXQ/bigwLGVbcl0pOm4oMCxbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG8oImtleXMiKSxvKCJ2YWx1ZXMiKSxvKCJlbnRyaWVzIil9LHsiLi9fYWRkLXRvLXVuc2NvcGFibGVzIjoyOSwiLi9faXRlci1kZWZpbmUiOjU3LCIuL19pdGVyLXN0ZXAiOjU5LCIuL19pdGVyYXRvcnMiOjYwLCIuL190by1pb2JqZWN0Ijo5MH1dLDEwMDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2V4cG9ydCIpO28oby5TLCJPYmplY3QiLHtjcmVhdGU6ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpfSl9LHsiLi9fZXhwb3J0Ijo0MiwiLi9fb2JqZWN0LWNyZWF0ZSI6NjV9XSwxMDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKTtvKG8uUytvLkYqIWUoIi4vX2Rlc2NyaXB0b3JzIiksIk9iamVjdCIse2RlZmluZVByb3BlcnR5OmUoIi4vX29iamVjdC1kcCIpLmZ9KX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2V4cG9ydCI6NDIsIi4vX29iamVjdC1kcCI6NjZ9XSwxMDI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pb2JqZWN0Iiksbj1lKCIuL19vYmplY3QtZ29wZCIpLmY7ZSgiLi9fb2JqZWN0LXNhcCIpKCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4obyhlKSx0KX19KX0seyIuL19vYmplY3QtZ29wZCI6NjgsIi4vX29iamVjdC1zYXAiOjc2LCIuL190by1pb2JqZWN0Ijo5MH1dLDEwMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWdwbyIpO2UoIi4vX29iamVjdC1zYXAiKSgiZ2V0UHJvdG90eXBlT2YiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0pfSx7Ii4vX29iamVjdC1ncG8iOjcyLCIuL19vYmplY3Qtc2FwIjo3NiwiLi9fdG8tb2JqZWN0Ijo5Mn1dLDEwNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWtleXMiKTtlKCIuL19vYmplY3Qtc2FwIikoImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0pfSx7Ii4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXNhcCI6NzYsIi4vX3RvLW9iamVjdCI6OTJ9XSwxMDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKTtvKG8uUywiT2JqZWN0Iix7c2V0UHJvdG90eXBlT2Y6ZSgiLi9fc2V0LXByb3RvIikuc2V0fSl9LHsiLi9fZXhwb3J0Ijo0MiwiLi9fc2V0LXByb3RvIjo4MH1dLDEwNjpbZnVuY3Rpb24oZSx0LHIpe30se31dLDEwNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbyxuLGkscz1lKCIuL19saWJyYXJ5IiksYz1lKCIuL19nbG9iYWwiKSxhPWUoIi4vX2N0eCIpLHU9ZSgiLi9fY2xhc3NvZiIpLGw9ZSgiLi9fZXhwb3J0IiksZj1lKCIuL19pcy1vYmplY3QiKSxkPShlKCIuL19hbi1vYmplY3QiKSxlKCIuL19hLWZ1bmN0aW9uIikpLF89ZSgiLi9fYW4taW5zdGFuY2UiKSxwPWUoIi4vX2Zvci1vZiIpLGI9KGUoIi4vX3NldC1wcm90byIpLnNldCxlKCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIikpLGg9ZSgiLi9fdGFzayIpLnNldCx5PWUoIi4vX21pY3JvdGFzayIpKCksdj0iUHJvbWlzZSIsaj1jLlR5cGVFcnJvcixtPWMucHJvY2VzcyxnPWNbdl0sbT1jLnByb2Nlc3Msdz0icHJvY2VzcyI9PXUobSksTz1mdW5jdGlvbigpe30saz0hIWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PWcucmVzb2x2ZSgxKSxyPSh0LmNvbnN0cnVjdG9yPXt9KVtlKCIuL193a3MiKSgic3BlY2llcyIpXT1mdW5jdGlvbihlKXtlKE8sTyl9O3JldHVybih3fHwiZnVuY3Rpb24iPT10eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50KSYmdC50aGVuKE8paW5zdGFuY2VvZiByfWNhdGNoKG8pe319KCkseD1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8ZT09PWcmJnQ9PT1pfSxDPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiEoIWYoZSl8fCJmdW5jdGlvbiIhPXR5cGVvZih0PWUudGhlbikpJiZ0fSxFPWZ1bmN0aW9uKGUpe3JldHVybiB4KGcsZSk/bmV3IFMoZSk6bmV3IG4oZSl9LFM9bj1mdW5jdGlvbihlKXt2YXIgdCxyO3RoaXMucHJvbWlzZT1uZXcgZShmdW5jdGlvbihlLG8pe2lmKHZvaWQgMCE9PXR8fHZvaWQgMCE9PXIpdGhyb3cgaigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1vfSksdGhpcy5yZXNvbHZlPWQodCksdGhpcy5yZWplY3Q9ZChyKX0sUj1mdW5jdGlvbihlKXt0cnl7ZSgpfWNhdGNoKHQpe3JldHVybntlcnJvcjp0fX19LFQ9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO3koZnVuY3Rpb24oKXtmb3IodmFyIG89ZS5fdixuPTE9PWUuX3MsaT0wLHM9ZnVuY3Rpb24odCl7dmFyIHIsaSxzPW4/dC5vazp0LmZhaWwsYz10LnJlc29sdmUsYT10LnJlamVjdCx1PXQuZG9tYWluO3RyeXtzPyhufHwoMj09ZS5faCYmQShlKSxlLl9oPTEpLHM9PT0hMD9yPW86KHUmJnUuZW50ZXIoKSxyPXMobyksdSYmdS5leGl0KCkpLHI9PT10LnByb21pc2U/YShqKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihpPUMocikpP2kuY2FsbChyLGMsYSk6YyhyKSk6YShvKX1jYXRjaChsKXthKGwpfX07ci5sZW5ndGg+aTspcyhyW2krK10pO2UuX2M9W10sZS5fbj0hMSx0JiYhZS5faCYmTShlKX0pfX0sTT1mdW5jdGlvbihlKXtoLmNhbGwoYyxmdW5jdGlvbigpe3ZhciB0LHIsbyxuPWUuX3Y7aWYoUChlKSYmKHQ9UihmdW5jdGlvbigpe3c/bS5lbWl0KCJ1bmhhbmRsZWRSZWplY3Rpb24iLG4sZSk6KHI9Yy5vbnVuaGFuZGxlZHJlamVjdGlvbik/cih7cHJvbWlzZTplLHJlYXNvbjpufSk6KG89Yy5jb25zb2xlKSYmby5lcnJvciYmby5lcnJvcigiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIixuKX0pLGUuX2g9d3x8UChlKT8yOjEpLGUuX2E9dm9pZCAwLHQpdGhyb3cgdC5lcnJvcn0pfSxQPWZ1bmN0aW9uKGUpe2lmKDE9PWUuX2gpcmV0dXJuITE7Zm9yKHZhciB0LHI9ZS5fYXx8ZS5fYyxvPTA7ci5sZW5ndGg+bzspaWYodD1yW28rK10sdC5mYWlsfHwhUCh0LnByb21pc2UpKXJldHVybiExO3JldHVybiEwfSxBPWZ1bmN0aW9uKGUpe2guY2FsbChjLGZ1bmN0aW9uKCl7dmFyIHQ7dz9tLmVtaXQoInJlamVjdGlvbkhhbmRsZWQiLGUpOih0PWMub25yZWplY3Rpb25oYW5kbGVkKSYmdCh7cHJvbWlzZTplLHJlYXNvbjplLl92fSl9KX0sRD1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2R8fCh0Ll9kPSEwLHQ9dC5fd3x8dCx0Ll92PWUsdC5fcz0yLHQuX2F8fCh0Ll9hPXQuX2Muc2xpY2UoKSksVCh0LCEwKSl9LE49ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzO2lmKCFyLl9kKXtyLl9kPSEwLHI9ci5fd3x8cjt0cnl7aWYocj09PWUpdGhyb3cgaigiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGYiKTsodD1DKGUpKT95KGZ1bmN0aW9uKCl7dmFyIG89e193OnIsX2Q6ITF9O3RyeXt0LmNhbGwoZSxhKE4sbywxKSxhKEQsbywxKSl9Y2F0Y2gobil7RC5jYWxsKG8sbil9fSk6KHIuX3Y9ZSxyLl9zPTEsVChyLCExKSl9Y2F0Y2gobyl7RC5jYWxsKHtfdzpyLF9kOiExfSxvKX19fTtrfHwoZz1mdW5jdGlvbihlKXtfKHRoaXMsZyx2LCJfaCIpLGQoZSksby5jYWxsKHRoaXMpO3RyeXtlKGEoTix0aGlzLDEpLGEoRCx0aGlzLDEpKX1jYXRjaCh0KXtELmNhbGwodGhpcyx0KX19LG89ZnVuY3Rpb24oZSl7dGhpcy5fYz1bXSx0aGlzLl9hPXZvaWQgMCx0aGlzLl9zPTAsdGhpcy5fZD0hMSx0aGlzLl92PXZvaWQgMCx0aGlzLl9oPTAsdGhpcy5fbj0hMX0sby5wcm90b3R5cGU9ZSgiLi9fcmVkZWZpbmUtYWxsIikoZy5wcm90b3R5cGUse3RoZW46ZnVuY3Rpb24oZSx0KXt2YXIgcj1FKGIodGhpcyxnKSk7cmV0dXJuIHIub2s9ImZ1bmN0aW9uIiE9dHlwZW9mIGV8fGUsci5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPXc/bS5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmVCh0aGlzLCExKSxyLnByb21pc2V9LCJjYXRjaCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksUz1mdW5jdGlvbigpe3ZhciBlPW5ldyBvO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT1hKE4sZSwxKSx0aGlzLnJlamVjdD1hKEQsZSwxKX0pLGwobC5HK2wuVytsLkYqIWsse1Byb21pc2U6Z30pLGUoIi4vX3NldC10by1zdHJpbmctdGFnIikoZyx2KSxlKCIuL19zZXQtc3BlY2llcyIpKHYpLGk9ZSgiLi9fY29yZSIpW3ZdLGwobC5TK2wuRiohayx2LHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9RSh0aGlzKSxyPXQucmVqZWN0O3JldHVybiByKGUpLA0KdC5wcm9taXNlfX0pLGwobC5TK2wuRiooc3x8IWspLHYse3Jlc29sdmU6ZnVuY3Rpb24oZSl7aWYoZSBpbnN0YW5jZW9mIGcmJngoZS5jb25zdHJ1Y3Rvcix0aGlzKSlyZXR1cm4gZTt2YXIgdD1FKHRoaXMpLHI9dC5yZXNvbHZlO3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqIShrJiZlKCIuL19pdGVyLWRldGVjdCIpKGZ1bmN0aW9uKGUpe2cuYWxsKGUpWyJjYXRjaCJdKE8pfSkpLHYse2FsbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9RSh0KSxvPXIucmVzb2x2ZSxuPXIucmVqZWN0LGk9UihmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxzPTE7cChlLCExLGZ1bmN0aW9uKGUpe3ZhciBjPWkrKyxhPSExO3IucHVzaCh2b2lkIDApLHMrKyx0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXthfHwoYT0hMCxyW2NdPWUsLS1zfHxvKHIpKX0sbil9KSwtLXN8fG8ocil9KTtyZXR1cm4gaSYmbihpLmVycm9yKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPUUodCksbz1yLnJlamVjdCxuPVIoZnVuY3Rpb24oKXtwKGUsITEsZnVuY3Rpb24oZSl7dC5yZXNvbHZlKGUpLnRoZW4oci5yZXNvbHZlLG8pfSl9KTtyZXR1cm4gbiYmbyhuLmVycm9yKSxyLnByb21pc2V9fSl9LHsiLi9fYS1mdW5jdGlvbiI6MjgsIi4vX2FuLWluc3RhbmNlIjozMCwiLi9fYW4tb2JqZWN0IjozMSwiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19jdHgiOjM2LCIuL19leHBvcnQiOjQyLCIuL19mb3Itb2YiOjQ0LCIuL19nbG9iYWwiOjQ1LCIuL19pcy1vYmplY3QiOjU0LCIuL19pdGVyLWRldGVjdCI6NTgsIi4vX2xpYnJhcnkiOjYyLCIuL19taWNyb3Rhc2siOjY0LCIuL19yZWRlZmluZS1hbGwiOjc4LCIuL19zZXQtcHJvdG8iOjgwLCIuL19zZXQtc3BlY2llcyI6ODEsIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6ODUsIi4vX3Rhc2siOjg3LCIuL193a3MiOjk3fV0sMTA4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX3N0cmluZy1hdCIpKCEwKTtlKCIuL19pdGVyLWRlZmluZSIpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1vKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHsiLi9faXRlci1kZWZpbmUiOjU3LCIuL19zdHJpbmctYXQiOjg2fV0sMTA5OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9faGFzIiksaT1lKCIuL19kZXNjcmlwdG9ycyIpLHM9ZSgiLi9fZXhwb3J0IiksYz1lKCIuL19yZWRlZmluZSIpLGE9ZSgiLi9fbWV0YSIpLktFWSx1PWUoIi4vX2ZhaWxzIiksbD1lKCIuL19zaGFyZWQiKSxmPWUoIi4vX3NldC10by1zdHJpbmctdGFnIiksZD1lKCIuL191aWQiKSxfPWUoIi4vX3drcyIpLHA9ZSgiLi9fd2tzLWV4dCIpLGI9ZSgiLi9fd2tzLWRlZmluZSIpLGg9ZSgiLi9fa2V5b2YiKSx5PWUoIi4vX2VudW0ta2V5cyIpLHY9ZSgiLi9faXMtYXJyYXkiKSxqPWUoIi4vX2FuLW9iamVjdCIpLG09ZSgiLi9fdG8taW9iamVjdCIpLGc9ZSgiLi9fdG8tcHJpbWl0aXZlIiksdz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksTz1lKCIuL19vYmplY3QtY3JlYXRlIiksaz1lKCIuL19vYmplY3QtZ29wbi1leHQiKSx4PWUoIi4vX29iamVjdC1nb3BkIiksQz1lKCIuL19vYmplY3QtZHAiKSxFPWUoIi4vX29iamVjdC1rZXlzIiksUz14LmYsUj1DLmYsVD1rLmYsTT1vLlN5bWJvbCxQPW8uSlNPTixBPVAmJlAuc3RyaW5naWZ5LEQ9InByb3RvdHlwZSIsTj1fKCJfaGlkZGVuIiksTD1fKCJ0b1ByaW1pdGl2ZSIpLEY9e30ucHJvcGVydHlJc0VudW1lcmFibGUsST1sKCJzeW1ib2wtcmVnaXN0cnkiKSxVPWwoInN5bWJvbHMiKSx6PWwoIm9wLXN5bWJvbHMiKSxIPU9iamVjdFtEXSxWPSJmdW5jdGlvbiI9PXR5cGVvZiBNLEI9by5RT2JqZWN0LEo9IUJ8fCFCW0RdfHwhQltEXS5maW5kQ2hpbGQsVz1pJiZ1KGZ1bmN0aW9uKCl7cmV0dXJuIDchPU8oUih7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiBSKHRoaXMsImEiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1TKEgsdCk7byYmZGVsZXRlIEhbdF0sUihlLHQsciksbyYmZSE9PUgmJlIoSCx0LG8pfTpSLFk9ZnVuY3Rpb24oZSl7dmFyIHQ9VVtlXT1PKE1bRF0pO3JldHVybiB0Ll9rPWUsdH0scT1WJiYic3ltYm9sIj09dHlwZW9mIE0uaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIE19LEs9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPT09SCYmSyh6LHQsciksaihlKSx0PWcodCwhMCksaihyKSxuKFUsdCk/KHIuZW51bWVyYWJsZT8obihlLE4pJiZlW05dW3RdJiYoZVtOXVt0XT0hMSkscj1PKHIse2VudW1lcmFibGU6dygwLCExKX0pKToobihlLE4pfHxSKGUsTix3KDEse30pKSxlW05dW3RdPSEwKSxXKGUsdCxyKSk6UihlLHQscil9LEc9ZnVuY3Rpb24oZSx0KXtqKGUpO2Zvcih2YXIgcixvPXkodD1tKHQpKSxuPTAsaT1vLmxlbmd0aDtpPm47KUsoZSxyPW9bbisrXSx0W3JdKTtyZXR1cm4gZX0sWj1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P08oZSk6RyhPKGUpLHQpfSxYPWZ1bmN0aW9uKGUpe3ZhciB0PUYuY2FsbCh0aGlzLGU9ZyhlLCEwKSk7cmV0dXJuISh0aGlzPT09SCYmbihVLGUpJiYhbih6LGUpKSYmKCEodHx8IW4odGhpcyxlKXx8IW4oVSxlKXx8bih0aGlzLE4pJiZ0aGlzW05dW2VdKXx8dCl9LCQ9ZnVuY3Rpb24oZSx0KXtpZihlPW0oZSksdD1nKHQsITApLGUhPT1IfHwhbihVLHQpfHxuKHosdCkpe3ZhciByPVMoZSx0KTtyZXR1cm4hcnx8IW4oVSx0KXx8bihlLE4pJiZlW05dW3RdfHwoci5lbnVtZXJhYmxlPSEwKSxyfX0sUT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1UKG0oZSkpLG89W10saT0wO3IubGVuZ3RoPmk7KW4oVSx0PXJbaSsrXSl8fHQ9PU58fHQ9PWF8fG8ucHVzaCh0KTtyZXR1cm4gb30sZWU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9ZT09PUgsbz1UKHI/ejptKGUpKSxpPVtdLHM9MDtvLmxlbmd0aD5zOykhbihVLHQ9b1tzKytdKXx8ciYmIW4oSCx0KXx8aS5wdXNoKFVbdF0pO3JldHVybiBpfTtWfHwoTT1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBNKXRocm93IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yISIpO3ZhciBlPWQoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApLHQ9ZnVuY3Rpb24ocil7dGhpcz09PUgmJnQuY2FsbCh6LHIpLG4odGhpcyxOKSYmbih0aGlzW05dLGUpJiYodGhpc1tOXVtlXT0hMSksVyh0aGlzLGUsdygxLHIpKX07cmV0dXJuIGkmJkomJlcoSCxlLHtjb25maWd1cmFibGU6ITAsc2V0OnR9KSxZKGUpfSxjKE1bRF0sInRvU3RyaW5nIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSkseC5mPSQsQy5mPUssZSgiLi9fb2JqZWN0LWdvcG4iKS5mPWsuZj1RLGUoIi4vX29iamVjdC1waWUiKS5mPVgsZSgiLi9fb2JqZWN0LWdvcHMiKS5mPWVlLGkmJiFlKCIuL19saWJyYXJ5IikmJmMoSCwicHJvcGVydHlJc0VudW1lcmFibGUiLFgsITApLHAuZj1mdW5jdGlvbihlKXtyZXR1cm4gWShfKGUpKX0pLHMocy5HK3MuVytzLkYqIVYse1N5bWJvbDpNfSk7Zm9yKHZhciB0ZT0iaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMiLnNwbGl0KCIsIikscmU9MDt0ZS5sZW5ndGg+cmU7KV8odGVbcmUrK10pO2Zvcih2YXIgdGU9RShfLnN0b3JlKSxyZT0wO3RlLmxlbmd0aD5yZTspYih0ZVtyZSsrXSk7cyhzLlMrcy5GKiFWLCJTeW1ib2wiLHsiZm9yIjpmdW5jdGlvbihlKXtyZXR1cm4gbihJLGUrPSIiKT9JW2VdOklbZV09TShlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKHEoZSkpcmV0dXJuIGgoSSxlKTt0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIHN5bWJvbCEiKX0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7Sj0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7Sj0hMX19KSxzKHMuUytzLkYqIVYsIk9iamVjdCIse2NyZWF0ZTpaLGRlZmluZVByb3BlcnR5OkssZGVmaW5lUHJvcGVydGllczpHLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjokLGdldE93blByb3BlcnR5TmFtZXM6USxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ZWV9KSxQJiZzKHMuUytzLkYqKCFWfHx1KGZ1bmN0aW9uKCl7dmFyIGU9TSgpO3JldHVybiJbbnVsbF0iIT1BKFtlXSl8fCJ7fSIhPUEoe2E6ZX0pfHwie30iIT1BKE9iamVjdChlKSl9KSksIkpTT04iLHtzdHJpbmdpZnk6ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT09ZSYmIXEoZSkpe2Zvcih2YXIgdCxyLG89W2VdLG49MTthcmd1bWVudHMubGVuZ3RoPm47KW8ucHVzaChhcmd1bWVudHNbbisrXSk7cmV0dXJuIHQ9b1sxXSwiZnVuY3Rpb24iPT10eXBlb2YgdCYmKHI9dCksIXImJnYodCl8fCh0PWZ1bmN0aW9uKGUsdCl7aWYociYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksIXEodCkpcmV0dXJuIHR9KSxvWzFdPXQsQS5hcHBseShQLG8pfX19KSxNW0RdW0xdfHxlKCIuL19oaWRlIikoTVtEXSxMLE1bRF0udmFsdWVPZiksZihNLCJTeW1ib2wiKSxmKE1hdGgsIk1hdGgiLCEwKSxmKG8uSlNPTiwiSlNPTiIsITApfSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZW51bS1rZXlzIjo0MSwiLi9fZXhwb3J0Ijo0MiwiLi9fZmFpbHMiOjQzLCIuL19nbG9iYWwiOjQ1LCIuL19oYXMiOjQ2LCIuL19oaWRlIjo0NywiLi9faXMtYXJyYXkiOjUzLCIuL19rZXlvZiI6NjEsIi4vX2xpYnJhcnkiOjYyLCIuL19tZXRhIjo2MywiLi9fb2JqZWN0LWNyZWF0ZSI6NjUsIi4vX29iamVjdC1kcCI6NjYsIi4vX29iamVjdC1nb3BkIjo2OCwiLi9fb2JqZWN0LWdvcG4iOjcwLCIuL19vYmplY3QtZ29wbi1leHQiOjY5LCIuL19vYmplY3QtZ29wcyI6NzEsIi4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXBpZSI6NzUsIi4vX3Byb3BlcnR5LWRlc2MiOjc3LCIuL19yZWRlZmluZSI6NzksIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc2hhcmVkIjo4NCwiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLXByaW1pdGl2ZSI6OTMsIi4vX3VpZCI6OTQsIi4vX3drcyI6OTcsIi4vX3drcy1kZWZpbmUiOjk1LCIuL193a3MtZXh0Ijo5Nn1dLDExMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4vX3drcy1kZWZpbmUiKSgiYXN5bmNJdGVyYXRvciIpfSx7Ii4vX3drcy1kZWZpbmUiOjk1fV0sMTExOltmdW5jdGlvbihlLHQscil7ZSgiLi9fd2tzLWRlZmluZSIpKCJvYnNlcnZhYmxlIil9LHsiLi9fd2tzLWRlZmluZSI6OTV9XSwxMTI6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL2VzNi5hcnJheS5pdGVyYXRvciIpO2Zvcih2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2hpZGUiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLHM9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIiksYz1bIk5vZGVMaXN0IiwiRE9NVG9rZW5MaXN0IiwiTWVkaWFMaXN0IiwiU3R5bGVTaGVldExpc3QiLCJDU1NSdWxlTGlzdCJdLGE9MDthPDU7YSsrKXt2YXIgdT1jW2FdLGw9b1t1XSxmPWwmJmwucHJvdG90eXBlO2YmJiFmW3NdJiZuKGYscyx1KSxpW3VdPWkuQXJyYXl9fSx7Ii4vX2dsb2JhbCI6NDUsIi4vX2hpZGUiOjQ3LCIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3LCIuL2VzNi5hcnJheS5pdGVyYXRvciI6OTl9XSwxMTM6W2Z1bmN0aW9uKGUsdCxyKXtPYmplY3Qub2JzZXJ2ZXx8ZnVuY3Rpb24oZSx0LHIsbyl7InVzZSBzdHJpY3QiO3ZhciBuLGkscz1bImFkZCIsInVwZGF0ZSIsImRlbGV0ZSIsInJlY29uZmlndXJlIiwic2V0UHJvdG90eXBlIiwicHJldmVudEV4dGVuc2lvbnMiXSxjPXQuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1lLmNhbGwodCl9fShlLnByb3RvdHlwZS50b1N0cmluZyksYT10LnByb3RvdHlwZS5pbmRleE9mP3QuaW5kZXhPZnx8ZnVuY3Rpb24oZSxyLG8pe3JldHVybiB0LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZSxyLG8pfTpmdW5jdGlvbihlLHQscil7Zm9yKHZhciBvPXJ8fDA7bzxlLmxlbmd0aDtvKyspaWYoZVtvXT09PXQpcmV0dXJuIG87cmV0dXJuLTF9LHU9ci5NYXAhPT1vJiZNYXAucHJvdG90eXBlLmZvckVhY2g/ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IE1hcH06ZnVuY3Rpb24oKXt2YXIgZT1bXSx0PVtdO3JldHVybntzaXplOjAsaGFzOmZ1bmN0aW9uKHQpe3JldHVybiBhKGUsdCk+LTF9LGdldDpmdW5jdGlvbihyKXtyZXR1cm4gdFthKGUscildfSxzZXQ6ZnVuY3Rpb24ocixvKXt2YXIgbj1hKGUscik7bj09PS0xPyhlLnB1c2gociksdC5wdXNoKG8pLHRoaXMuc2l6ZSsrKTp0W25dPW99LCJkZWxldGUiOmZ1bmN0aW9uKHIpe3ZhciBvPWEoZSxyKTtvPi0xJiYoZS5zcGxpY2UobywxKSx0LnNwbGljZShvLDEpLHRoaXMuc2l6ZS0tKX0sZm9yRWFjaDpmdW5jdGlvbihyKXtmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rKylyLmNhbGwoYXJndW1lbnRzWzFdLHRbb10sZVtvXSx0aGlzKX19fSxsPWUuZ2V0T3duUHJvcGVydHlOYW1lcz9mdW5jdGlvbigpe3ZhciB0PWUuZ2V0T3duUHJvcGVydHlOYW1lczt0cnl7YXJndW1lbnRzLmNhbGxlZX1jYXRjaChyKXt2YXIgbz0odChhKS5qb2luKCIgIikrIiAiKS5yZXBsYWNlKC9wcm90b3R5cGUgfGxlbmd0aCB8bmFtZSAvZywiIikuc2xpY2UoMCwtMSkuc3BsaXQoIiAiKTtvLmxlbmd0aCYmKHQ9ZnVuY3Rpb24odCl7dmFyIHI9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0KWZvcih2YXIgbixpPTA7aTxvLmxlbmd0aDspKG49YShyLG9baSsrXSkpPi0xJiZyLnNwbGljZShuLDEpO3JldHVybiByfSl9cmV0dXJuIHR9KCk6ZnVuY3Rpb24odCl7dmFyIHIsbyxuPVtdO2lmKCJoYXNPd25Qcm9wZXJ0eSJpbiB0KWZvcihyIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShyKSYmbi5wdXNoKHIpO2Vsc2V7bz1lLmhhc093blByb3BlcnR5O2ZvcihyIGluIHQpby5jYWxsKHQscikmJm4ucHVzaChyKX1yZXR1cm4gYyh0KSYmbi5wdXNoKCJsZW5ndGgiKSxufSxmPWUuZ2V0UHJvdG90eXBlT2YsZD1lLmRlZmluZVByb3BlcnRpZXMmJmUuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLF89ci5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHIud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbigpe3ZhciBlPStuZXcgRGF0ZSx0PWU7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cigodD0rbmV3IERhdGUpLWUpfSwxNyl9fSgpLHA9ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPW4uZ2V0KGUpO28/KGgobyxlKSxtKGUsbyx0LHIpKToobz1iKGUpLG0oZSxvLHQsciksMT09PW4uc2l6ZSYmXyh5KSl9LGI9ZnVuY3Rpb24odCxyKXt2YXIgbyxpPWwodCkscz1bXSxjPTAscj17aGFuZGxlcnM6dSgpLGZyb3plbjohIWUuaXNGcm96ZW4mJmUuaXNGcm96ZW4odCksZXh0ZW5zaWJsZTohZS5pc0V4dGVuc2libGV8fGUuaXNFeHRlbnNpYmxlKHQpLHByb3RvOmYmJmYodCkscHJvcGVydGllczppLHZhbHVlczpzLG5vdGlmaWVyOmoodCxyKX07aWYoZClmb3Iobz1yLmRlc2NyaXB0b3JzPVtdO2M8aS5sZW5ndGg7KW9bY109ZCh0LGlbY10pLHNbY109dFtpW2MrK11dO2Vsc2UgZm9yKDtjPGkubGVuZ3RoOylzW2NdPXRbaVtjKytdXTtyZXR1cm4gbi5zZXQodCxyKSxyfSxoPWZ1bmN0aW9uKCl7dmFyIHQ9ZD9mdW5jdGlvbihlLHQscixvLG4pe3ZhciBpPXQucHJvcGVydGllc1tyXSxzPWVbaV0sYz10LnZhbHVlc1tyXSxhPXQuZGVzY3JpcHRvcnNbcl07InZhbHVlImluIG4mJihjPT09cz8wPT09YyYmMS9jIT09MS9zOmM9PT1jfHxzPT09cykmJihnKGUsdCx7bmFtZTppLHR5cGU6InVwZGF0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6Y30sbyksdC52YWx1ZXNbcl09cyksIWEuY29uZmlndXJhYmxlfHxuLmNvbmZpZ3VyYWJsZSYmbi53cml0YWJsZT09PWEud3JpdGFibGUmJm4uZW51bWVyYWJsZT09PWEuZW51bWVyYWJsZSYmbi5nZXQ9PT1hLmdldCYmbi5zZXQ9PT1hLnNldHx8KGcoZSx0LHtuYW1lOmksdHlwZToicmVjb25maWd1cmUiLG9iamVjdDplLG9sZFZhbHVlOmN9LG8pLHQuZGVzY3JpcHRvcnNbcl09bil9OmZ1bmN0aW9uKGUsdCxyLG8pe3ZhciBuPXQucHJvcGVydGllc1tyXSxpPWVbbl0scz10LnZhbHVlc1tyXTsocz09PWk/MD09PXMmJjEvcyE9PTEvaTpzPT09c3x8aT09PWkpJiYoZyhlLHQse25hbWU6bix0eXBlOiJ1cGRhdGUiLG9iamVjdDplLG9sZFZhbHVlOnN9LG8pLHQudmFsdWVzW3JdPWkpfSxyPWQ/ZnVuY3Rpb24oZSxyLG8sbixpKXtmb3IodmFyIHMsYz1yLmxlbmd0aDtvJiZjLS07KW51bGwhPT1yW2NdJiYocz1kKGUscltjXSksby0tLHM/dChlLG4sYyxpLHMpOihnKGUsbix7bmFtZTpyW2NdLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6bi52YWx1ZXNbY119LGkpLG4ucHJvcGVydGllcy5zcGxpY2UoYywxKSxuLnZhbHVlcy5zcGxpY2UoYywxKSxuLmRlc2NyaXB0b3JzLnNwbGljZShjLDEpKSl9OmZ1bmN0aW9uKGUsdCxyLG8sbil7Zm9yKHZhciBpPXQubGVuZ3RoO3ImJmktLTspbnVsbCE9PXRbaV0mJihnKGUsbyx7bmFtZTp0W2ldLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6by52YWx1ZXNbaV19LG4pLG8ucHJvcGVydGllcy5zcGxpY2UoaSwxKSxvLnZhbHVlcy5zcGxpY2UoaSwxKSxyLS0pfTtyZXR1cm4gZnVuY3Rpb24obyxuLGkpe2lmKG8uaGFuZGxlcnMuc2l6ZSYmIW8uZnJvemVuKXt2YXIgcyxjLHUsXyxwLGIsaCx5LHY9by52YWx1ZXMsaj1vLmRlc2NyaXB0b3JzLG09MDtpZihvLmV4dGVuc2libGUpaWYocz1vLnByb3BlcnRpZXMuc2xpY2UoKSxjPXMubGVuZ3RoLHU9bChuKSxqKXtmb3IoO208dS5sZW5ndGg7KXA9dVttKytdLF89YShzLHApLHk9ZChuLHApLF89PT0tMT8oZyhuLG8se25hbWU6cCx0eXBlOiJhZGQiLG9iamVjdDpufSxpKSxvLnByb3BlcnRpZXMucHVzaChwKSx2LnB1c2gobltwXSksai5wdXNoKHkpKTooc1tfXT1udWxsLGMtLSx0KG4sbyxfLGkseSkpO3IobixzLGMsbyxpKSxlLmlzRXh0ZW5zaWJsZShuKXx8KG8uZXh0ZW5zaWJsZT0hMSxnKG4sbyx7dHlwZToicHJldmVudEV4dGVuc2lvbnMiLG9iamVjdDpufSxpKSxvLmZyb3plbj1lLmlzRnJvemVuKG4pKX1lbHNle2Zvcig7bTx1Lmxlbmd0aDspcD11W20rK10sXz1hKHMscCksYj1uW3BdLF89PT0tMT8oZyhuLG8se25hbWU6cCx0eXBlOiJhZGQiLG9iamVjdDpufSxpKSxvLnByb3BlcnRpZXMucHVzaChwKSx2LnB1c2goYikpOihzW19dPW51bGwsYy0tLHQobixvLF8saSkpO3IobixzLGMsbyxpKX1lbHNlIGlmKCFvLmZyb3plbil7Zm9yKDttPHMubGVuZ3RoO20rKylwPXNbbV0sdChuLG8sbSxpLGQobixwKSk7ZS5pc0Zyb3plbihuKSYmKG8uZnJvemVuPSEwKX1mJiYoaD1mKG4pLGghPT1vLnByb3RvJiYoZyhuLG8se3R5cGU6InNldFByb3RvdHlwZSIsbmFtZToiX19wcm90b19fIixvYmplY3Q6bixvbGRWYWx1ZTpvLnByb3RvfSksby5wcm90bz1oKSl9fX0oKSx5PWZ1bmN0aW9uKCl7bi5zaXplJiYobi5mb3JFYWNoKGgpLGkuZm9yRWFjaCh2KSxfKHkpKX0sdj1mdW5jdGlvbihlLHQpe3ZhciByPWUuY2hhbmdlUmVjb3JkcztyLmxlbmd0aCYmKGUuY2hhbmdlUmVjb3Jkcz1bXSx0KHIpKX0saj1mdW5jdGlvbihlLHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDImJih0PW4uZ2V0KGUpKSx0JiZ0Lm5vdGlmaWVyfHx7bm90aWZ5OmZ1bmN0aW9uKHQpe3QudHlwZTt2YXIgcj1uLmdldChlKTtpZihyKXt2YXIgbyxpPXtvYmplY3Q6ZX07Zm9yKG8gaW4gdCkib2JqZWN0IiE9PW8mJihpW29dPXRbb10pO2coZSxyLGkpfX0scGVyZm9ybUNoYW5nZTpmdW5jdGlvbih0LHIpe2lmKCJzdHJpbmciIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcgY2hhbmdlVHlwZSIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBwZXJmb3JtIG5vbi1mdW5jdGlvbiIpO3ZhciBpLHMsYz1uLmdldChlKSxhPWFyZ3VtZW50c1syXSx1PWE9PT1vP3IoKTpyLmNhbGwoYSk7aWYoYyYmaChjLGUsdCksYyYmdSYmIm9iamVjdCI9PXR5cGVvZiB1KXtzPXtvYmplY3Q6ZSx0eXBlOnR9O2ZvcihpIGluIHUpIm9iamVjdCIhPT1pJiYidHlwZSIhPT1pJiYoc1tpXT11W2ldKTtnKGUsYyxzKX19fX0sbT1mdW5jdGlvbihlLHQscixvKXt2YXIgbj1pLmdldChyKTtufHxpLnNldChyLG49e29ic2VydmVkOnUoKSxjaGFuZ2VSZWNvcmRzOltdfSksbi5vYnNlcnZlZC5zZXQoZSx7YWNjZXB0TGlzdDpvLnNsaWNlKCksZGF0YTp0fSksdC5oYW5kbGVycy5zZXQocixuKX0sZz1mdW5jdGlvbihlLHQscixvKXt0LmhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49dC5vYnNlcnZlZC5nZXQoZSkuYWNjZXB0TGlzdDsoInN0cmluZyIhPXR5cGVvZiBvfHxhKG4sbyk9PT0tMSkmJmEobixyLnR5cGUpPi0xJiZ0LmNoYW5nZVJlY29yZHMucHVzaChyKX0pfTtuPXUoKSxpPXUoKSxlLm9ic2VydmU9ZnVuY3Rpb24odCxyLG4pe2lmKCF0fHwib2JqZWN0IiE9dHlwZW9mIHQmJiJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBvYnNlcnZlIG5vbi1vYmplY3QiKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygcil0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3Qub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTtpZihlLmlzRnJvemVuJiZlLmlzRnJvemVuKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIGEgZnJvemVuIGZ1bmN0aW9uIG9iamVjdCIpO2lmKG49PT1vKW49cztlbHNlIGlmKCFufHwib2JqZWN0IiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcigiVGhpcmQgYXJndW1lbnQgdG8gT2JqZWN0Lm9ic2VydmUgbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzLiIpO3JldHVybiBwKHQscixuKSx0fSxlLnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PT1lfHwib2JqZWN0IiE9dHlwZW9mIGUmJiJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC51bm9ic2VydmUgY2Fubm90IHVub2JzZXJ2ZSBub24tb2JqZWN0Iik7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LnVub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTt2YXIgcixvPWkuZ2V0KHQpO3JldHVybiBvJiYocj1vLm9ic2VydmVkLmdldChlKSkmJihvLm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLF8oZnVuY3Rpb24oKXt2KG8sdCl9KSwxPT09by5vYnNlcnZlZC5zaXplJiZvLm9ic2VydmVkLmhhcyhlKT9pWyJkZWxldGUiXSh0KTpvLm9ic2VydmVkWyJkZWxldGUiXShlKSwxPT09ci5kYXRhLmhhbmRsZXJzLnNpemU/blsiZGVsZXRlIl0oZSk6ci5kYXRhLmhhbmRsZXJzWyJkZWxldGUiXSh0KSksZX0sZS5nZXROb3RpZmllcj1mdW5jdGlvbih0KXtpZihudWxsPT09dHx8Im9iamVjdCIhPXR5cGVvZiB0JiYiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QuZ2V0Tm90aWZpZXIgY2Fubm90IGdldE5vdGlmaWVyIG5vbi1vYmplY3QiKTtyZXR1cm4gZS5pc0Zyb3plbiYmZS5pc0Zyb3plbih0KT9udWxsOmoodCl9LGUuZGVsaXZlckNoYW5nZVJlY29yZHM9ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LmRlbGl2ZXJDaGFuZ2VSZWNvcmRzIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO3ZhciB0PWkuZ2V0KGUpO3QmJih0Lm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLHYodCxlKSl9fShPYmplY3QsQXJyYXksdGhpcyl9LHt9XSwxMTQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5EYXRhT2JqZWN0T2JzZXJ2ZXI9ci5EYXRhT2JqZWN0UmVwb3J0ZXI9ci5TeW5jaGVyPXZvaWQgMCxlKCJvYmplY3Qub2JzZXJ2ZSIpLGUoImFycmF5Lm9ic2VydmUiKTt2YXIgbj1lKCIuL3N5bmNoZXIvU3luY2hlciIpLGk9byhuKSxzPWUoIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxjPW8ocyksYT1lKCIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIiksdT1vKGEpO3IuU3luY2hlcj1pWyJkZWZhdWx0Il0sci5EYXRhT2JqZWN0UmVwb3J0ZXI9Y1siZGVmYXVsdCJdLHIuRGF0YU9iamVjdE9ic2VydmVyPXVbImRlZmF1bHQiXX0seyIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIjoxMTcsIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOCwiLi9zeW5jaGVyL1N5bmNoZXIiOjEyMSwiYXJyYXkub2JzZXJ2ZSI6MSwib2JqZWN0Lm9ic2VydmUiOjExM31dLDExNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHU9byhhKSxsPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGY9byhsKSxkPWUoIi4vU3luY09iamVjdCIpLF89byhkKSxwPWUoIi4vRGF0YU9iamVjdENoaWxkIiksYj1vKHApLGg9ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSx5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBjPXRoaXM7Yy5fc3luY2hlcj10LGMuX3VybD1yLGMuX3NjaGVtYT1vLGMuX3N0YXR1cz1uLGMuX3N5bmNPYmo9bmV3IF9bImRlZmF1bHQiXShpKSxjLl9jaGlsZHJlbnM9cyxjLl92ZXJzaW9uPTAsYy5fY2hpbGRJZD0wLGMuX2NoaWxkcmVuT2JqZWN0cz17fSxjLl9jaGlsZHJlbkxpc3RlbmVycz1bXSxjLl9vd25lcj10Ll9vd25lcixjLl9idXM9dC5fYnVzfXJldHVybigwLGZbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLHI9dC5fdXJsKyIvY2hpbGRyZW4vIjt0Ll9jaGlsZHJlbnMmJnQuX2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKG8pe3ZhciBuPXIrbyxpPXQuX2J1cy5hZGRMaXN0ZW5lcihuLGZ1bmN0aW9uKHIpe2lmKHIuZnJvbSE9PWUuX293bmVyKXN3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC1DaGlsZHJlbi1SQ1Y6ICIsciksci50eXBlKXtjYXNlImNyZWF0ZSI6dC5fb25DaGlsZENyZWF0ZShyKTticmVhaztjYXNlImRlbGV0ZSI6Y29uc29sZS5sb2cocik7YnJlYWs7ZGVmYXVsdDp0Ll9jaGFuZ2VDaGlsZHJlbihyKX19KTt0Ll9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5yZW1vdmUoKX0pLCgwLGNbImRlZmF1bHQiXSkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoaWxkcmVuT2JqZWN0c1t0XS5fcmVsZWFzZUxpc3RlbmVycygpfSl9fSx7a2V5OiJwYXVzZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToicmVzdW1lIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJzdG9wIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJhZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3IuX2NoaWxkSWQrKzt2YXIgbz1yLl9vd25lcisiIyIrci5fY2hpbGRJZCxuPXIuX3VybCsiL2NoaWxkcmVuLyIrZSxzPXt0eXBlOiJjcmVhdGUiLGZyb206ci5fb3duZXIsdG86bixib2R5OntyZXNvdXJjZTpvLHZhbHVlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlKXt2YXIgaT1yLl9idXMucG9zdE1lc3NhZ2Uocyk7Y29uc29sZS5sb2coImNyZWF0ZS1yZXBvcnRlci1jaGlsZCggIityLl9vd25lcisiICk6ICIscyk7dmFyIGM9bmV3IGJbImRlZmF1bHQiXShyLG8sdCxyLl9vd25lcixpKTtjLm9uQ2hhbmdlKGZ1bmN0aW9uKGUpe3IuX29uQ2hhbmdlKGUse3BhdGg6bixjaGlsZElkOm99KX0pLHIuX2NoaWxkcmVuT2JqZWN0c1tvXT1jLGUoYyl9KX19LHtrZXk6Im9uQWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyPWV9fSx7a2V5OiJfb25DaGlsZENyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZTtjb25zb2xlLmxvZygiY3JlYXRlLW9ic2VydmVyLWNoaWxkKCAiK3QuX293bmVyKyIgKTogIixlKTt2YXIgbz1uZXcgYlsiZGVmYXVsdCJdKHQscixlLmJvZHkudmFsdWUpO3QuX2NoaWxkcmVuT2JqZWN0c1tyXT1vLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc291cmNlOnQuX293bmVyfX0pfSk7dmFyIG49e3R5cGU6ZS50eXBlLGZyb206ZS5mcm9tLHVybDplLnRvLHZhbHVlOmUuYm9keS52YWx1ZSxjaGlsZElkOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5fTt0Ll9vbkFkZENoaWxkcmVuSGFuZGxlciYmKGNvbnNvbGUubG9nKCJBREQtQ0hJTERSRU4tRVZFTlQ6ICIsbiksdC5fb25BZGRDaGlsZHJlbkhhbmRsZXIobikpfX0se2tleToiX29uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fdmVyc2lvbisrLCJvbiI9PT1yLl9zdGF0dXMpe3ZhciBvPXt0eXBlOiJ1cGRhdGUiLGZyb206ci5fdXJsLHRvOnIuX3VybCsiL2NoYW5nZXMiLGJvZHk6e3ZlcnNpb246ci5fdmVyc2lvbixzb3VyY2U6ci5fb3duZXIsYXR0cmlidXRlOmUuZmllbGR9fTtlLm9UeXBlPT09ZC5PYmplY3RUeXBlLk9CSkVDVD9lLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSYmKG8uYm9keS52YWx1ZT1lLmRhdGEpOihvLmJvZHkuYXR0cmlidXRlVHlwZT1lLm9UeXBlLG8uYm9keS52YWx1ZT1lLmRhdGEsZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5VUERBVEUmJihvLmJvZHkub3BlcmF0aW9uPWUuY1R5cGUpKSx0JiYoby50bz10LnBhdGgsby5ib2R5LnJlc291cmNlPXQuY2hpbGRJZCksci5fYnVzLnBvc3RNZXNzYWdlKG8pfX19LHtrZXk6Il9jaGFuZ2VPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl92ZXJzaW9uKzE9PT10LmJvZHkudmVyc2lvbil7ci5fdmVyc2lvbisrO3ZhciBvPXQuYm9keS5hdHRyaWJ1dGUsbj0oMCxoLmRlZXBDbG9uZSkodC5ib2R5LnZhbHVlKSxpPWUuZmluZEJlZm9yZShvKTtpZih0LmJvZHkuYXR0cmlidXRlVHlwZT09PWQuT2JqZWN0VHlwZS5BUlJBWSlpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLkFERCl7dmFyIHM9aS5vYmosYz1pLmxhc3Q7QXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShzLFtjLDBdLmNvbmNhdChuKSl9ZWxzZSBpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSl7dmFyIGE9aS5vYmosdT1pLmxhc3Q7YS5zcGxpY2UodSxuKX1lbHNlIGkub2JqW2kubGFzdF09bjtlbHNlIHQuYm9keS52YWx1ZT9pLm9ialtpLmxhc3RdPW46ZGVsZXRlIGkub2JqW2kubGFzdF19ZWxzZSBjb25zb2xlLmxvZygiVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gIityLl92ZXJzaW9uKyIsIG1zZyA9PiAiK3QuYm9keS52ZXJzaW9uKyIpIil9fSx7a2V5OiJfY2hhbmdlQ2hpbGRyZW4iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Y29uc29sZS5sb2coIkNoYW5nZSBjaGlsZHJlbjogIix0Ll9vd25lcixlKTt2YXIgcj1lLmJvZHkucmVzb3VyY2Usbz10Ll9jaGlsZHJlbk9iamVjdHNbcl07bz90Ll9jaGFuZ2VPYmplY3Qoby5fc3luY09iaixlKTpjb25zb2xlLmxvZygiTm8gY2hpbGRyZW4gZm91bmQgZm9yOiAiLHIpfX0se2tleToidXJsIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0se2tleToic2NoZW1hIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NoZW1hfX0se2tleToic3RhdHVzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdHVzfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6ImNoaWxkcmVucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVuT2JqZWN0c319XSksZX0oKTtyWyJkZWZhdWx0Il09eSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjIsIi4vRGF0YU9iamVjdENoaWxkIjoxMTYsIi4vU3luY09iamVjdCI6MTIwLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo5LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTE2OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGM9byhzKSxhPWUoIi4vU3luY09iamVjdCIpLHU9byhhKSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuLHMpeygwLGlbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgYz10aGlzO2MuX3BhcmVudD10LGMuX2NoaWxkSWQ9cixjLl9vd25lcj1uLGMuX21zZ0lkPXMsYy5fc3luY09iaj1uZXcgdVsiZGVmYXVsdCJdKG8pLGMuX2J1cz10Ll9idXMsYy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX293bmVyJiYoZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX293bmVyLGZ1bmN0aW9uKHQpeyJyZXNwb25zZSI9PT10LnR5cGUmJnQuaWQ9PT1lLl9tc2dJZCYmKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZToiLHQpLGUuX29uUmVzcG9uc2UodCkpfSkpfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lciYmZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztkZWxldGUgZS5fcGFyZW50Ll9jaGlsZHJlbltlLl9jaGlsZElkXSxlLl9yZWxlYXNlTGlzdGVuZXJzKCl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKHQpe2UodCl9KX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5ib2R5LnNvdXJjZSxjb2RlOmUuYm9keS5jb2RlfTt0Ll9vblJlc3BvbnNlSGFuZGxlciYmdC5fb25SZXNwb25zZUhhbmRsZXIocil9fSx7a2V5OiJjaGlsZElkIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRJZH19LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWwsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL1N5bmNPYmplY3QiOjEyMCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDExNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW8oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW8obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLF89byhkKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW8ocCksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW8oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW8odiksbT1lKCIuL0RhdGFPYmplY3RDaGlsZCIpLGc9byhtKSx3PXtBTlk6ImFueSIsU1RBUlQ6InN0YXJ0IixFWEFDVDoiZXhhY3QifSxPPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG8sbixzLGEsbCl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBmPSgwLF9bImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbyxuLHMuZGF0YSxhKSksZD1mO3JldHVybiBkLl92ZXJzaW9uPWwsZC5fZmlsdGVycz17fSxkLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7ZC5fb25GaWx0ZXIoZSl9KSwoMCxpWyJkZWZhdWx0Il0pKHMuY2hpbGRyZW5zKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PXMuY2hpbGRyZW5zW2VdO2QuX2NoaWxkcmVuT2JqZWN0c1tlXT1uZXcgZ1siZGVmYXVsdCJdKGQsZSx0KX0pLGQuX2FsbG9jYXRlTGlzdGVuZXJzKCksZn1yZXR1cm4oMCx5WyJkZWZhdWx0Il0pKHQsZSksKDAsZlsiZGVmYXVsdCJdKSh0LFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCsiL2NoYW5nZXMiLGZ1bmN0aW9uKHQpeyJ1cGRhdGUiPT09dC50eXBlJiYoY29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdfX0se2tleToidW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJ1bnN1YnNjcmliZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLG89e3R5cGU6dy5FWEFDVCxjYWxsYmFjazp0fSxuPWUuaW5kZXhPZigiKiIpO249PT1lLmxlbmd0aC0xJiYoMD09PW4/by50eXBlPXcuQU5ZOihvLnR5cGU9dy5TVEFSVCxyPWUuc3Vic3RyKDAsZS5sZW5ndGgtMSkpKSx0aGlzLl9maWx0ZXJzW3JdPW99fSx7a2V5OiJfb25GaWx0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsaVsiZGVmYXVsdCJdKSh0Ll9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPXQuX2ZpbHRlcnNbcl07by50eXBlPT09dy5BTlk/by5jYWxsYmFjayhlKTpvLnR5cGU9PT13LlNUQVJUPzA9PT1lLmZpZWxkLmluZGV4T2YocikmJm8uY2FsbGJhY2soZSk6by50eXBlPT09dy5FWEFDVCYmZS5maWVsZD09PXImJm8uY2FsbGJhY2soZSl9KX19XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Tyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vRGF0YU9iamVjdCI6MTE1LCIuL0RhdGFPYmplY3RDaGlsZCI6MTE2LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExODpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW8oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW8obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLF89byhkKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW8ocCksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW8oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW8odiksbT1lKCIuLi91dGlscy91dGlscy5qcyIpLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbyxuLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBhPSgwLF9bImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbyxuLGkscykpLGw9YTtyZXR1cm4gbC5fc3Vic2NyaXB0aW9ucz17fSxsLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RSZXBvcnRlci0iK3IrIi1TRU5EOiAiLGUpLGwuX29uQ2hhbmdlKGUpfSksbC5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxhfXJldHVybigwLHlbImRlZmF1bHQiXSkodCxlKSwoMCxmWyJkZWZhdWx0Il0pKHQsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9vYmplY3RMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe3N3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC0iK2UuX3VybCsiLVJDVjogIix0KSx0LnR5cGUpe2Nhc2UicmVzcG9uc2UiOmUuX29uUmVzcG9uc2UodCk7YnJlYWs7Y2FzZSJyZWFkIjplLl9vblJlYWQodCl9fSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfcmVsZWFzZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX29iamVjdExpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiaW52aXRlT2JzZXJ2ZXJzIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ImNyZWF0ZSIsZnJvbTp0Ll9zeW5jaGVyLl9vd25lcix0bzp0Ll9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6dC5fdXJsLHNjaGVtYTp0Ll9zY2hlbWEsdmFsdWU6dC5fc3luY09iai5kYXRhLGF1dGhvcmlzZTplfX07dC5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToiZGVsZXRlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLURFTEVURTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fcmVwb3J0ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvblN1YnNjcmlwdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyPWV9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToib25SZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlYWRIYW5kbGVyPWV9fSx7a2V5OiJfb25Gb3J3YXJkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3N3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLVJDVjogIixlKSxlLmJvZHkudHlwZSl7Y2FzZSJzdWJzY3JpYmUiOnQuX29uU3Vic2NyaWJlKGUpO2JyZWFrO2Nhc2UidW5zdWJzY3JpYmUiOnQuX29uVW5TdWJzY3JpYmUoZSl9fX0se2tleToiX29uU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbz17dHlwZTplLmJvZHkudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNjZXB0OmZ1bmN0aW9uKCl7dmFyIG89e3VybDpyLHN0YXR1czoib24ifTt0Ll9zdWJzY3JpcHRpb25zW3JdPW87dmFyIG49e307cmV0dXJuKDAsaVsiZGVmYXVsdCJdKSh0Ll9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9dC5fY2hpbGRyZW5PYmplY3RzW2VdLmRhdGE7bltlXT0oMCxtLmRlZXBDbG9uZSkocil9KSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc2NoZW1hOnQuX3NjaGVtYSx2ZXJzaW9uOnQuX3ZlcnNpb24sdmFsdWU6e2RhdGE6KDAsbS5kZWVwQ2xvbmUpKHQuZGF0YSksY2hpbGRyZW5zOm59fX0pLG99LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDMsZGVzYzpyfX0pfX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIlNVQlNDUklQVElPTi1FVkVOVDogIixvKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIobykpfX0se2tleToiX29uVW5TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxvPXQuX3N1YnNjcmlwdGlvbnNbcl07ZGVsZXRlIHQuX3N1YnNjcmlwdGlvbnNbcl07dmFyIG49e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsb2JqZWN0Om99O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJVTi1TVUJTQ1JJUFRJT04tRVZFTlQ6ICIsbiksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKG4pKX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sY29kZTplLmJvZHkuY29kZX07dC5fb25SZXNwb25zZUhhbmRsZXImJihjb25zb2xlLmxvZygiUkVTUE9OU0UtRVZFTlQ6ICIsciksdC5fb25SZXNwb25zZUhhbmRsZXIocikpfX0se2tleToiX29uUmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGFjY2VwdDpmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCx2YWx1ZTooMCxtLmRlZXBDbG9uZSkodC5kYXRhKX19KX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMSxkZXNjOnJ9fSl9fTt0Ll9vblJlYWRIYW5kbGVyJiYoY29uc29sZS5sb2coIlJFQUQtRVZFTlQ6ICIsciksdC5fb25SZWFkSGFuZGxlcihyKSl9fSx7a2V5OiJzdWJzY3JpcHRpb25zIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3Vic2NyaXB0aW9uc319XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Zyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjIsIi4vRGF0YU9iamVjdCI6MTE1LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExOTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxjPW8ocyksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG8sbil7KDAsaVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBzPXRoaXM7cy5fb3duZXI9dCxzLl91cmw9cixzLl9idXM9byxzLl9jaGlsZHJlbj1uLHMuX2NoYW5nZXM9W10scy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFQcm92aXNpb25hbC0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VzLnB1c2godCl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJhcHBseSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9jaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCl9KX19LHtrZXk6ImNoaWxkcmVuIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW59fV0pLGV9KCk7clsiZGVmYXVsdCJdPWEsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIwOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuT2JqZWN0VHlwZT1yLkNoYW5nZVR5cGU9dm9pZCAwO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLHU9byhhKSxsPWUoIi4uL3V0aWxzL3V0aWxzLmpzIiksZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciByPXRoaXM7ci5fb2JzZXJ2ZXJzPVtdLHIuX2ZpbHRlcnM9e30sdD9yLl9kYXRhPSgwLGwuZGVlcENsb25lKSh0KTpyLl9kYXRhPXt9LHIuX2ludGVybmFsT2JzZXJ2ZShuZXcgZCxyLl9kYXRhKX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6Im9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5wdXNoKGUpfX0se2tleToiZmluZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zcGxpdCgiLiIpO3JldHVybiB0aGlzLl9maW5kV2l0aFNwbGl0KHQpfX0se2tleToiZmluZEJlZm9yZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e30scj1lLnNwbGl0KCIuIik7cmV0dXJuIHQubGFzdD1yLnBvcCgpLHQub2JqPXRoaXMuX2ZpbmRXaXRoU3BsaXQociksdH19LHtrZXk6Il9maW5kV2l0aFNwbGl0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9kYXRhO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7dD10W2VdfSksdH19LHtrZXk6Il9maXJlRXZlbnQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QoZSl9KX19LHtrZXk6Il9pc09ic2VydmFibGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbnN0cnVjdG9yPT09T2JqZWN0fHxlLmNvbnN0cnVjdG9yPT09QXJyYXl9fSx7a2V5OiJfaW50ZXJuYWxPYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5faXNPYnNlcnZhYmxlKHQpKXt2YXIgbz1mdW5jdGlvbih0KXtyLl9vbkNoYW5nZXMoZSx0KX07aWYodC5jb25zdHJ1Y3Rvcj09PU9iamVjdCl7T2JqZWN0Lm9ic2VydmUodCxvKTtmb3IodmFyIG4gaW4gdClyLl9pc09ic2VydmFibGUodFtuXSkmJnIuX2ludGVybmFsT2JzZXJ2ZShlWyJuZXciXShuKSx0W25dKX1lbHNlIGlmKHQuY29uc3RydWN0b3I9PT1BcnJheSl7QXJyYXkub2JzZXJ2ZSh0LG8pO2Zvcih2YXIgaSBpbiB0KWlmKHIuX2lzT2JzZXJ2YWJsZSh0W2ldKSl7dmFyIHM9ZVsibmV3Il0obmV3IF8odFtpXSxpKSk7ci5faW50ZXJuYWxPYnNlcnZlKHMsdFtpXSl9fX19fSx7a2V5OiJfb25DaGFuZ2VzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7Zm9yKHZhciBvIGluIHQpe3ZhciBuPXRbb10ub2JqZWN0LGk9dm9pZCAwO2lmKG4uY29uc3RydWN0b3I9PT1PYmplY3QmJihpPWIuT0JKRUNUKSxuLmNvbnN0cnVjdG9yPT09QXJyYXkmJihpPWIuQVJSQVkpLCJzcGxpY2UiPT09dFtvXS50eXBlKSFmdW5jdGlvbigpe3ZhciBzPXRbb10uaW5kZXgsYz1lWyJuZXciXSgiIitzKSxhPWMudG9TdHJpbmcoKSx1PXRbb10ucmVtb3ZlZC5sZW5ndGg7aWYoMCE9PXUpe3ZhciBmPXRbb10ucmVtb3ZlZDtmLmZvckVhY2goZnVuY3Rpb24odCxvKXtyLl9pc09ic2VydmFibGUodCkmJmUucmVtb3ZlSW5kZXgocytvKX0pLHIuX2ZpcmVFdmVudCh7Y1R5cGU6cC5SRU1PVkUsb1R5cGU6aSxmaWVsZDphLGRhdGE6dX0pfXZhciBkPXRbb10uYWRkZWRDb3VudDtpZigwIT09ZCl7dmFyIGI9bi5zbGljZShzLHMrZCk7Yi5mb3JFYWNoKGZ1bmN0aW9uKHQsbyl7aWYoci5faXNPYnNlcnZhYmxlKHQpKXt2YXIgbj1lWyJuZXciXShuZXcgXyh0LHMrbykpO3IuX2ludGVybmFsT2JzZXJ2ZShuLHQpfX0pLHIuX2ZpcmVFdmVudCh7Y1R5cGU6cC5BREQsb1R5cGU6aSxmaWVsZDphLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGIpfSl9cyE9PW4ubGVuZ3RoLTEmJmUucmVJbmRleEZyb20obil9KCk7ZWxzZXt2YXIgcz1lWyJuZXciXSh0W29dLm5hbWUpLGM9cy50b1N0cmluZygpO2lmKGMuaW5kZXhPZigiU3ltYm9sIikhPT0tMSljb250aW51ZTt2YXIgYT1uW3Rbb10ubmFtZV07InVwZGF0ZSI9PT10W29dLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6cC5VUERBVEUsb1R5cGU6aSxmaWVsZDpjLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGEpfSksImFkZCI9PT10W29dLnR5cGUmJih0aGlzLl9pbnRlcm5hbE9ic2VydmUocyxhKSx0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnAuQURELG9UeXBlOmksZmllbGQ6YyxkYXRhOigwLGwuZGVlcENsb25lKShhKX0pKSwiZGVsZXRlIj09PXRbb10udHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTpwLlJFTU9WRSxvVHlwZTppLGZpZWxkOmN9KX19fX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGF9fV0pLGV9KCksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSksdGhpcy5fcGF0aD1bXSx0aGlzLl9vYnNlcnZhYmxlcz17fX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6InJlbW92ZUluZGV4Iix2YWx1ZTpmdW5jdGlvbihlKXtkZWxldGUgdGhpcy5fb2JzZXJ2YWJsZXNbZV19fSx7a2V5OiJyZUluZGV4RnJvbSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczsoMCxpWyJkZWZhdWx0Il0pKHRoaXMuX29ic2VydmFibGVzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPXQuX29ic2VydmFibGVzW3JdLG49ZS5pbmRleE9mKG8ub2JqKTtvLmlkeCE9biYmKG8uaWR4PW4sZGVsZXRlIHQuX29ic2VydmFibGVzW3JdLHQuX29ic2VydmFibGVzW25dPW8pfSl9fSx7a2V5OiJuZXciLHZhbHVlOmZ1bmN0aW9uKGUpe2UuY29uc3RydWN0b3I9PV8mJih0aGlzLl9vYnNlcnZhYmxlc1tlLmlkeF09ZSk7dmFyIHQ9dGhpcy5jbG9uZSgpO3JldHVybiB0Ll9wYXRoLnB1c2goZSksdH19LHtrZXk6ImNsb25lIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PW5ldyBlO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24oZSl7dC5fcGF0aC5wdXNoKGUpfSksdH19LHtrZXk6InRvU3RyaW5nIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPSIiO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24odCxyKXswPT09cj9lPXQudG9TdHJpbmcoKTplKz0iLiIrdC50b1N0cmluZygpfSksZX19XSksZX0oKSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLm9iaj10LHRoaXMuaWR4PXJ9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJ0b1N0cmluZyIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pZHgudG9TdHJpbmcoKX19XSksZX0oKSxwPXIuQ2hhbmdlVHlwZT17VVBEQVRFOiJ1cGRhdGUiLEFERDoiYWRkIixSRU1PVkU6InJlbW92ZSJ9LGI9ci5PYmplY3RUeXBlPXtPQkpFQ1Q6Im9iamVjdCIsQVJSQVk6ImFycmF5In07clsiZGVmYXVsdCJdPWZ9LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIxOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1vKG4pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksYz1vKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksdT1vKGEpLGw9ZSgiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxmPW8obCksZD1lKCIuL0RhdGFPYmplY3RPYnNlcnZlciIpLF89byhkKSxwPWUoIi4vRGF0YVByb3Zpc2lvbmFsIiksYj1vKHApLGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixvKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIG49dGhpcztuLl9vd25lcj10LG4uX2J1cz1yLG4uX3N1YlVSTD1vLnJ1bnRpbWVVUkwrIi9zbSIsbi5fcmVwb3J0ZXJzPXt9LG4uX29ic2VydmVycz17fSxuLl9wcm92aXNpb25hbHM9e30sci5hZGRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKGNvbnNvbGUubG9nKCJTeW5jaGVyLVJDVjogIixlKSxlLnR5cGUpe2Nhc2UiZm9yd2FyZCI6bi5fb25Gb3J3YXJkKGUpO2JyZWFrO2Nhc2UiY3JlYXRlIjpuLl9vblJlbW90ZUNyZWF0ZShlKTticmVhaztjYXNlImRlbGV0ZSI6bi5fb25SZW1vdGVEZWxldGUoZSl9fSl9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJjcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbz10aGlzO3IucmVwb3J0ZXI9by5fb3duZXIsci5zY2hlbWE9ZTt2YXIgbj17dHlwZToiY3JlYXRlIixmcm9tOm8uX293bmVyLHRvOm8uX3N1YlVSTCxib2R5OntzY2hlbWE6ZSx2YWx1ZTpyLGF1dGhvcmlzZTp0fX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24odCxpKXtvLl9idXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihuKXtpZihjb25zb2xlLmxvZygiY3JlYXRlLXJlc3BvbnNlOiAiLG4pLDIwMD09PW4uYm9keS5jb2RlKXt2YXIgcz1uLmJvZHkucmVzb3VyY2UsYz1uZXcgZlsiZGVmYXVsdCJdKG8scyxlLCJvbiIscixuLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpO28uX3JlcG9ydGVyc1tzXT1jLHQoYyl9ZWxzZSBpKG4uYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJzdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxvPXt0eXBlOiJzdWJzY3JpYmUiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e3NjaGVtYTplLHJlc291cmNlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihuLGkpe3IuX2J1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKG8pe2NvbnNvbGUubG9nKCJzdWJzY3JpYmUtcmVzcG9uc2U6ICIsbyk7dmFyIHM9ci5fcHJvdmlzaW9uYWxzW3RdO2lmKGRlbGV0ZSByLl9wcm92aXNpb25hbHNbdF0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLG8uYm9keS5jb2RlPDIwMClzPW5ldyBiWyJkZWZhdWx0Il0oci5fb3duZXIsdCxyLl9idXMsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSxyLl9wcm92aXNpb25hbHNbdF09cztlbHNlIGlmKDIwMD09PW8uYm9keS5jb2RlKXt2YXIgYz1uZXcgX1siZGVmYXVsdCJdKHIsdCxlLCJvbiIsby5ib2R5LnZhbHVlLHMuY2hpbGRyZW4sby5ib2R5LnZlcnNpb24pO3IuX29ic2VydmVyc1t0XT1jLG4oYykscy5hcHBseShjKX1lbHNlIGkoby5ib2R5LmRlc2MpfSl9KX19LHtrZXk6InJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZToicmVhZCIsZnJvbTp0Ll9vd25lcix0bzplfTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLG8pe3QuX2J1cy5wb3N0TWVzc2FnZShyLGZ1bmN0aW9uKHQpew0KY29uc29sZS5sb2coInJlYWQtcmVzcG9uc2U6ICIsdCksMjAwPT09dC5ib2R5LmNvZGU/ZSh0LmJvZHkudmFsdWUpOm8odC5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Im9uTm90aWZpY2F0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXI9ZX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10Ll9yZXBvcnRlcnNbZS5ib2R5LnRvXTtyLl9vbkZvcndhcmQoZSl9fSx7a2V5OiJfb25SZW1vdGVDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmZyb20uc2xpY2UoMCwtMTMpLG89e3R5cGU6ZS50eXBlLGZyb206ZS5ib2R5LnNvdXJjZSx1cmw6cixzY2hlbWE6ZS5ib2R5LnNjaGVtYSx2YWx1ZTplLmJvZHkudmFsdWUsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbz0yMDA7ciYmKG89ciksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6b319KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsbyksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG8pKX19LHtrZXk6Il9vblJlbW90ZURlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZSxvPXQuX29ic2VydmVyc1tyXTtpZihvKXt2YXIgbj17dHlwZTplLnR5cGUsdXJsOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbj0yMDA7ciYmKG49ciksMjAwPT09biYmb1siZGVsZXRlIl0oKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpuLHNvdXJjZTp0Ll9vd25lcn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsbiksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG4pKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwNCxzb3VyY2U6dC5fb3duZXJ9fSl9fSx7a2V5OiJvd25lciIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX293bmVyfX0se2tleToicmVwb3J0ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVwb3J0ZXJzfX0se2tleToib2JzZXJ2ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzfX1dKSxlfSgpO3JbImRlZmF1bHQiXT1oLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi9EYXRhT2JqZWN0T2JzZXJ2ZXIiOjExNywiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOCwiLi9EYXRhUHJvdmlzaW9uYWwiOjExOSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjksImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMjI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1mdW5jdGlvbiBuKGUpe2lmKCFlKXRocm93IEVycm9yKCJVUkwgaXMgbmVlZGVkIHRvIHNwbGl0Iik7dmFyIHQ9LyhbYS16QS1aLV0qKTpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2kscj0iJDEsJDIsJDMiLG89ZS5yZXBsYWNlKHQscikuc3BsaXQoIiwiKTtvWzBdPT09ZSYmKG9bMF09Imh0dHBzIixvWzFdPWUpO3ZhciBuPXt0eXBlOm9bMF0sZG9tYWluOm9bMV0saWRlbnRpdHk6b1syXX07cmV0dXJuIG59ZnVuY3Rpb24gaShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKSxyPXt1c2VybmFtZTplLnN1YnN0cmluZygwLHQpLGRvbWFpbjplLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpfTtyZXR1cm4gcn1mdW5jdGlvbiBzKGUpe3JldHVybiEoKDAscFsiZGVmYXVsdCJdKShlKS5sZW5ndGg+MCl9ZnVuY3Rpb24gYyhlKXtpZihlKXJldHVybiBKU09OLnBhcnNlKCgwLGRbImRlZmF1bHQiXSkoZSkpfWZ1bmN0aW9uIGEoZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJuInVzZXI6Ly8iK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsdCl9ZnVuY3Rpb24gdShlKXt2YXIgdD1uKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoIi8iLCIiKSsiQCIrdC5kb21haW59ZnVuY3Rpb24gbChlKXtpZigidXNlcjovLyI9PT1lLnN1YnN0cmluZygwLDcpKXt2YXIgdD1uKGUpO2lmKHQuZG9tYWluJiZ0LmlkZW50aXR5KXJldHVybiBlO3Rocm93InVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQifXJldHVybiBhKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgZj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiKSxkPW8oZiksXz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxwPW8oXyk7ci5kaXZpZGVVUkw9bixyLmRpdmlkZUVtYWlsPWksci5lbXB0eU9iamVjdD1zLHIuZGVlcENsb25lPWMsci5nZXRVc2VyVVJMRnJvbUVtYWlsPWEsci5nZXRVc2VyRW1haWxGcm9tVVJMPXUsci5jb252ZXJ0VG9Vc2VyVVJMPWx9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoyLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjd9XX0se30sWzExNF0pKDExNCl9KTsNCg0KCn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSAidW5kZWZpbmVkIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSAidW5kZWZpbmVkIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSAidW5kZWZpbmVkIiA/IHdpbmRvdyA6IHt9KQp9LHt9XSw0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogICAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTsKCmV4cG9ydHMuZGVmYXVsdCA9IGFjdGl2YXRlOwoKdmFyIF9TeW5jaGVyID0gcmVxdWlyZSgnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyJyk7Cgp2YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvdXRpbHMnKTsKCnZhciBfRXZlbnRFbWl0dGVyMiA9IHJlcXVpcmUoJy4uL3V0aWxzL0V2ZW50RW1pdHRlcicpOwoKdmFyIF9FdmVudEVtaXR0ZXIzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRXZlbnRFbWl0dGVyMik7Cgp2YXIgX1NlYXJjaCA9IHJlcXVpcmUoJy4uL3V0aWxzL1NlYXJjaCcpOwoKdmFyIF9TZWFyY2gyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfU2VhcmNoKTsKCnZhciBfSWRlbnRpdHlNYW5hZ2VyID0gcmVxdWlyZSgnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9JZGVudGl0eU1hbmFnZXInKTsKCnZhciBfSWRlbnRpdHlNYW5hZ2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0lkZW50aXR5TWFuYWdlcik7Cgp2YXIgX0Rpc2NvdmVyeSA9IHJlcXVpcmUoJ3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvRGlzY292ZXJ5Jyk7Cgp2YXIgX0Rpc2NvdmVyeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9EaXNjb3ZlcnkpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSA/IGNhbGwgOiBzZWxmOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfSAvKiBqc2hpbnQgdW5kZWY6IHRydWUgKi8KCi8qKg0KKiBIZWxsbyBXb3JsZCBEaXNjb3ZlcnkgT2JzZXJ2ZXINCiogQGF1dGhvciBQYXVsbyBDaGFpbmhvIFtwYXVsby1nLWNoYWluaG9AdGVsZWNvbS5wdF0NCiogQHZlcnNpb24gMC4xLjANCiovCgp2YXIgSGVsbG9Xb3JsZERpc2NvdmVyeU9ic2VydmVyID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHsKICAgIF9pbmhlcml0cyhIZWxsb1dvcmxkRGlzY292ZXJ5T2JzZXJ2ZXIsIF9FdmVudEVtaXR0ZXIpOwoKICAgIC8qKg0KICAgICogQ3JlYXRlIGEgbmV3IEhlbGxvV29ybGRPYnNlcnZlcg0KICAgICogQHBhcmFtICB7U3luY2hlcn0gc3luY2hlciAtIFN5bmNoZXIgcHJvdmlkZWQgZnJvbSB0aGUgcnVudGltZSBjb3JlDQogICAgKi8KCiAgICBmdW5jdGlvbiBIZWxsb1dvcmxkRGlzY292ZXJ5T2JzZXJ2ZXIoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKSB7CiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEhlbGxvV29ybGREaXNjb3ZlcnlPYnNlcnZlcik7CgogICAgICAgIGlmICghaHlwZXJ0eVVSTCkgdGhyb3cgbmV3IEVycm9yKCdUaGUgaHlwZXJ0eVVSTCBpcyBhIG5lZWRlZCBwYXJhbWV0ZXInKTsKICAgICAgICBpZiAoIWJ1cykgdGhyb3cgbmV3IEVycm9yKCdUaGUgTWluaUJ1cyBpcyBhIG5lZWRlZCBwYXJhbWV0ZXInKTsKICAgICAgICBpZiAoIWNvbmZpZ3VyYXRpb24pIHRocm93IG5ldyBFcnJvcignVGhlIGNvbmZpZ3VyYXRpb24gaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CgogICAgICAgIHZhciBfdGhpczIgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSGVsbG9Xb3JsZERpc2NvdmVyeU9ic2VydmVyKS5jYWxsKHRoaXMpKTsKCiAgICAgICAgdmFyIF90aGlzID0gX3RoaXMyOwogICAgICAgIHZhciBkb21haW4gPSAoMCwgX3V0aWxzLmRpdmlkZVVSTCkoaHlwZXJ0eVVSTCkuZG9tYWluOwogICAgICAgIF90aGlzLl9kb21haW4gPSBkb21haW47CgogICAgICAgIF90aGlzLl9vYmplY3REZXNjVVJMID0gJ2h5cGVydHktY2F0YWxvZ3VlOi8vY2F0YWxvZ3VlLicgKyBkb21haW4gKyAnLy53ZWxsLWtub3duL2RhdGFzY2hlbWEvSGVsbG9Xb3JsZERhdGFTY2hlbWEnOwoKICAgICAgICB2YXIgc3luY2hlciA9IG5ldyBfU3luY2hlci5TeW5jaGVyKGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbik7CiAgICAgICAgc3luY2hlci5vbk5vdGlmaWNhdGlvbihmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgICAgX3RoaXMuX29uTm90aWZpY2F0aW9uKGV2ZW50KTsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMuX3N5bmNoZXIgPSBzeW5jaGVyOwoKICAgICAgICB2YXIgZGlzY292ZXJ5ID0gbmV3IF9EaXNjb3ZlcnkyLmRlZmF1bHQoaHlwZXJ0eVVSTCwgYnVzKTsKCiAgICAgICAgdmFyIGlkZW50aXR5TWFuYWdlciA9IG5ldyBfSWRlbnRpdHlNYW5hZ2VyMi5kZWZhdWx0KGh5cGVydHlVUkwsIGNvbmZpZ3VyYXRpb24ucnVudGltZVVSTCwgYnVzKTsKCiAgICAgICAgdmFyIHNlYXJjaCA9IG5ldyBfU2VhcmNoMi5kZWZhdWx0KGRpc2NvdmVyeSwgaWRlbnRpdHlNYW5hZ2VyKTsKCiAgICAgICAgX3RoaXMuZGlzY292ZXJ5ID0gZGlzY292ZXJ5OwoKICAgICAgICBfdGhpcy5pZGVudGl0eU1hbmFnZXIgPSBpZGVudGl0eU1hbmFnZXI7CgogICAgICAgIF90aGlzLnNlYXJjaCA9IHNlYXJjaDsKCiAgICAgICAgcmV0dXJuIF90aGlzMjsKICAgIH0KCiAgICBfY3JlYXRlQ2xhc3MoSGVsbG9Xb3JsZERpc2NvdmVyeU9ic2VydmVyLCBbewogICAgICAgIGtleTogJ19vbk5vdGlmaWNhdGlvbicsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9vbk5vdGlmaWNhdGlvbihldmVudCkgewoKICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgICAgIGNvbnNvbGUuaW5mbygnRXZlbnQgUmVjZWl2ZWQ6ICcsIGV2ZW50KTsKCiAgICAgICAgICAgIF90aGlzLnRyaWdnZXIoJ2ludml0YXRpb24nLCBldmVudC5pZGVudGl0eSk7CgogICAgICAgICAgICAvLyBBY2tub3dsZWRnZSByZXBvcnRlciBhYm91dCB0aGUgSW52aXRhdGlvbiB3YXMgcmVjZWl2ZWQKCiAgICAgICAgICAgIGV2ZW50LmFjaygpOwogICAgICAgIH0KICAgIH0sIHsKICAgICAgICBrZXk6ICdkaXNjb3ZlckhlbGxvV29ybGQnLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNjb3ZlckhlbGxvV29ybGQodXNlcikgewoKICAgICAgICAgICAgY29uc29sZS5pbmZvKCJkaXNjb3ZlcmluZyBoZWxsbyIpOwoKICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CgogICAgICAgICAgICAgICAgX3RoaXMuc2VhcmNoLm9iamVjdHModXNlciwgJ2hlbGxvJykudGhlbihmdW5jdGlvbiAob2JqZWN0KSB7CgogICAgICAgICAgICAgICAgICAgIC8vIFN1YnNjcmliZSBIZWxsbyBXb3JsZCBPYmplY3QKICAgICAgICAgICAgICAgICAgICBfdGhpcy5fc3luY2hlci5zdWJzY3JpYmUoX3RoaXMuX29iamVjdERlc2NVUkwsIG9iamVjdC51cmwpLnRoZW4oZnVuY3Rpb24gKGhlbGxvT2JqdE9ic2VydmVyKSB7CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBIZWxsbyBXb3JsZCBPYmplY3Qgd2FzIHN1YnNjcmliZWQKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5pbmZvKGhlbGxvT2JqdE9ic2VydmVyKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldHMgbm90aWZ5IHRoZSBBcHAgdGhlIHN1YnNjcmlwdGlvbiB3YXMgYWNjZXB0ZWQgd2l0aCB0aGUgbW5vc3QgdXBkYXRlZCB2ZXJzaW9uIG9mIEhlbGxvIFdvcmxkIE9iamVjdAoKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMudHJpZ2dlcignaGVsbG8nLCBoZWxsb09ianRPYnNlcnZlci5kYXRhKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldHMgbm93IG9ic2VydmUgYW55IGNoYW5nZXMgZG9uZSBpbiBIZWxsbyBXb3JsZCBPYmplY3QKCiAgICAgICAgICAgICAgICAgICAgICAgIGhlbGxvT2JqdE9ic2VydmVyLm9uQ2hhbmdlKCcqJywgZnVuY3Rpb24gKGV2ZW50KSB7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSGVsbG8gV29ybGQgT2JqZWN0IHdhcyBjaGFuZ2VkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oJ21lc3NhZ2UgcmVjZWl2ZWQ6JywgZXZlbnQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldHMgbm90aWZ5IHRoZSBBcHAgYWJvdXQgdGhlIGNoYW5nZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMudHJpZ2dlcignaGVsbG8nLCBoZWxsb09ianRPYnNlcnZlci5kYXRhKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWFzb24pIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihyZWFzb24pOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IocmVhc29uKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9XSk7CgogICAgcmV0dXJuIEhlbGxvV29ybGREaXNjb3ZlcnlPYnNlcnZlcjsKfShfRXZlbnRFbWl0dGVyMy5kZWZhdWx0KTsKCmZ1bmN0aW9uIGFjdGl2YXRlKGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbikgewoKICAgIHJldHVybiB7CiAgICAgICAgbmFtZTogJ0hlbGxvV29ybGREaXNjb3ZlcnlPYnNlcnZlcicsCiAgICAgICAgaW5zdGFuY2U6IG5ldyBIZWxsb1dvcmxkRGlzY292ZXJ5T2JzZXJ2ZXIoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKQogICAgfTsKfQptb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsKCn0seyIuLi91dGlscy9FdmVudEVtaXR0ZXIiOjUsIi4uL3V0aWxzL1NlYXJjaCI6NiwiLi4vdXRpbHMvdXRpbHMiOjcsInNlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvRGlzY292ZXJ5IjoxLCJzZXJ2aWNlLWZyYW1ld29yay9kaXN0L0lkZW50aXR5TWFuYWdlciI6Miwic2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyIjozfV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7CiJ1c2Ugc3RyaWN0IjsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICAgIHZhbHVlOiB0cnVlCn0pOwoKdmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCi8qKg0KICogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQogKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KICogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQogKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KICogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQogKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQogKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiAqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQogKg0KICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCiAqDQogKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KICoNCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KICoqLwoKLyoqDQogKiBFdmVudEVtaXR0ZXINCiAqIEFsbCBjbGFzc2VzIHdoaWNoIGV4dGVuZHMgdGhpcywgY2FuIGhhdmUgYWRkRXZlbnRMaXN0ZW5lciBhbmQgdHJpZ2dlciBldmVudHM7DQogKi8KCnZhciBFdmVudEVtaXR0ZXIgPSBmdW5jdGlvbiAoKSB7CgogICAgLyoqDQogICAgICogSW5pdGlhbGl6ZXMgdGhlIEV2ZW50RW1pdHRlcg0KICAgICAqLwoKICAgIGZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHsKICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRXZlbnRFbWl0dGVyKTsKCiAgICAgICAgLy8gc2V0IHVwIGxpc3RlbmVyIGhvbGRlcgogICAgICAgIHRoaXMuX19ldmVudExpc3RlbmVycyA9IHt9OwogICAgfQoKICAgIC8qKg0KICAgICAqIGFkZEV2ZW50TGlzdGVuZXIgbGlzdGVuIGZvciBhbiBldmVudFR5cGUNCiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgZXZlbnRUeXBlIC0gbGlzdGVuaW5nIGZvciB0aGlzIHR5cGUgb2YgZXZlbnQNCiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gICAgICAgY2IgICAgICAgIC0gY2FsbGJhY2sgZnVuY3Rpb24gd2lsbCBiZSBleGVjdXRlZCB3aGVuIHRoZSBldmVudCBpdCBpcyBpbnZva2VkDQogICAgICovCgoKICAgIF9jcmVhdGVDbGFzcyhFdmVudEVtaXR0ZXIsIFt7CiAgICAgICAga2V5OiAiYWRkRXZlbnRMaXN0ZW5lciIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYikgewogICAgICAgICAgICAvLyBhZGQgY2FsbGJhY2sgdG8gdGhlIGxpc3Qgb2YgY2FsbGJhY2tzIGZvciB0aGlzIHR5cGUKICAgICAgICAgICAgLy8gaWYgdGhlIGxpc3QgZG9lc24ndCBleGlzdCB5ZXQsIGNyZWF0ZSBpdCB3aXRoIHRoZSBjYWxsYmFjayBhcyBtZW1iZXIKICAgICAgICAgICAgaWYgKGNiICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9fZXZlbnRMaXN0ZW5lcnNbZXZlbnRUeXBlXSkgdGhpcy5fX2V2ZW50TGlzdGVuZXJzW2V2ZW50VHlwZV0gPSBbY2JdO2Vsc2UgdGhpcy5fX2V2ZW50TGlzdGVuZXJzW2V2ZW50VHlwZV0ucHVzaChjYik7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8qKg0KICAgICAgICAgKiBJbnZva2UgdGhlIGV2ZW50VHlwZQ0KICAgICAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGV2ZW50VHlwZSAtIGV2ZW50IHdpbGwgYmUgaW52b2tlZA0KICAgICAgICAgKiBAcGFyYW0gIHtvYmplY3R9IHBhcmFtcyAtIHBhcmFtZXRlcnMgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIGFkZEV2ZW50TGlzdGVuZXINCiAgICAgICAgICovCgogICAgfSwgewogICAgICAgIGtleTogInRyaWdnZXIiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiB0cmlnZ2VyKGV2ZW50VHlwZSwgcGFyYW1zKSB7CiAgICAgICAgICAgIC8vIGNoZWNrIGlmIHRoZXJlIGFyZSBjYWxsYmFja3MgZm9yIHRoaXMgdHlwZQogICAgICAgICAgICB2YXIgY2FsbGJhY2tzID0gdGhpcy5fX2V2ZW50TGlzdGVuZXJzW2V2ZW50VHlwZV07CiAgICAgICAgICAgIGlmIChjYWxsYmFja3MpIHsKICAgICAgICAgICAgICAgIGNhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChjYikgewogICAgICAgICAgICAgICAgICAgIC8vIGNhdGNoIGVycm9ycyB0byBtYWtlIHN1cmUgZXZlcnkgY2FsbGJhY2sgaXMgYmVpbmcgY2FsbGVkCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2IocGFyYW1zKTsKICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybigiY2FsbGluZyBsaXN0ZW5lciAiICsgY2IubmFtZSArICIgZm9yIGV2ZW50IHR5cGUgIiArIGV2ZW50VHlwZSArICIgd2l0aCBwYXJhbWV0ZXJzICciICsgcGFyYW1zICsgIicgcmVzdWx0ZWQgaW4gYW4gZXJyb3IhIiwgZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9XSk7CgogICAgcmV0dXJuIEV2ZW50RW1pdHRlcjsKfSgpOwoKZXhwb3J0cy5kZWZhdWx0ID0gRXZlbnRFbWl0dGVyOwptb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbImRlZmF1bHQiXTsKCn0se31dLDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewondXNlIHN0cmljdCc7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTsKCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKdmFyIFNlYXJjaCA9IGZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTZWFyY2goZGlzY292ZXJ5LCBpZGVudGl0eU1hbmFnZXIpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZWFyY2gpOwoKICAgIGlmICghZGlzY292ZXJ5KSB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBkaXNjb3ZlcnkgY29tcG9uZW50IGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpOwogICAgaWYgKCFpZGVudGl0eU1hbmFnZXIpIHRocm93IG5ldyBFcnJvcignVGhlIGlkZW50aXR5TWFuYWdlciBjb21wb25lbnQgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CgogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBfdGhpcy5kaXNjb3ZlcnkgPSBkaXNjb3Zlcnk7CiAgICBfdGhpcy5pZGVudGl0eU1hbmFnZXIgPSBpZGVudGl0eU1hbmFnZXI7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU2VhcmNoLCBbewogICAga2V5OiAnbXlJZGVudGl0eScsCiAgICB2YWx1ZTogZnVuY3Rpb24gbXlJZGVudGl0eSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CgogICAgICAgIF90aGlzLmlkZW50aXR5TWFuYWdlci5kaXNjb3ZlclVzZXJSZWdpc3RlcmVkKCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICAgICAgcmVqZWN0KHJlYXNvbik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQoKICAgIC8qKg0KICAgICAqIExpc3Qgb2YgdXNlcnNVUkwgdG8gc2VhcmNoDQogICAgICogQHBhcmFtICB7YXJyYXk8VVJMLnVzZXJVUkw+fSAgdXNlcnMgTGlzdCBvZiBVc2VyVVIsIGxpa2UgdGhpcyBmb3JtYXQgdXNlcjovLzxpcGRkb21haW4+Lzx1c2VyLWlkZW50aWZpZXI+DQogICAgICogQHJldHVybiB7UHJvbWlzZX0NCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAndXNlcnMnLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVzZXJzKHVzZXJzVVJMcywgcHJvdmlkZWREb21haW5zLCBzY2hlbWVzLCByZXNvdXJjZXMpIHsKCiAgICAgIGlmICghdXNlcnNVUkxzKSB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBuZWVkIHRvIHByb3ZpZGUgYSBsaXN0IG9mIHVzZXJzJyk7CiAgICAgIGlmICghcHJvdmlkZWREb21haW5zKSB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBuZWVkIHRvIHByb3ZpZGUgYSBsaXN0IG9mIGRvbWFpbnMnKTsKICAgICAgaWYgKCFyZXNvdXJjZXMpIHRocm93IG5ldyBFcnJvcignWW91IG5lZWQgdG8gcHJvdmlkZSBhIGxpc3Qgb2YgcmVzb3VyY2VzJyk7CiAgICAgIGlmICghc2NoZW1lcykgdGhyb3cgbmV3IEVycm9yKCdZb3UgbmVlZCB0byBwcm92aWRlIGEgbGlzdCBvZiBzY2hlbWVzJyk7CgogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CgogICAgICAgIGNvbnNvbGUubG9nKCdVc2VyczogJywgdXNlcnNVUkxzLCB1c2Vyc1VSTHMubGVuZ3RoKTsKICAgICAgICBjb25zb2xlLmxvZygnRG9tYWluczogJywgcHJvdmlkZWREb21haW5zLCBwcm92aWRlZERvbWFpbnMubGVuZ3RoKTsKCiAgICAgICAgaWYgKHVzZXJzVVJMcy5sZW5ndGggPT09IDApIHsKICAgICAgICAgIGNvbnNvbGUuaW5mbygnRG9uXCd0IGhhdmUgdXNlcnMgdG8gZGlzY292ZXJ5Jyk7CiAgICAgICAgICByZXNvbHZlKHVzZXJzVVJMcyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBnZXRVc2VycyA9IFtdOwoKICAgICAgICAgICAgdXNlcnNVUkxzLmZvckVhY2goZnVuY3Rpb24gKHVzZXJVUkwsIGluZGV4KSB7CiAgICAgICAgICAgICAgdmFyIGN1cnJlbnREb21haW4gPSBwcm92aWRlZERvbWFpbnNbaW5kZXhdOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZWFyY2ggdXNlciAnICsgdXNlclVSTCArICcgZm9yIHByb3ZpZGVkIGRvbWFpbjonLCBjdXJyZW50RG9tYWluKTsKICAgICAgICAgICAgICBnZXRVc2Vycy5wdXNoKF90aGlzLmRpc2NvdmVyeS5kaXNjb3Zlckh5cGVydHkodXNlclVSTCwgc2NoZW1lcywgcmVzb3VyY2VzLCBjdXJyZW50RG9tYWluKSk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY29uc29sZS5pbmZvKCdSZXF1ZXN0cyBwcm9taXNlczogJywgZ2V0VXNlcnMpOwoKICAgICAgICAgICAgUHJvbWlzZS5hbGwoZ2V0VXNlcnMpLnRoZW4oZnVuY3Rpb24gKGh5cGVydGllcykgewoKICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gaHlwZXJ0aWVzLm1hcChmdW5jdGlvbiAoaHlwZXJ0eSkgewoKICAgICAgICAgICAgICAgIHZhciByZWNlbnQgPSBPYmplY3Qua2V5cyhoeXBlcnR5KS5yZWR1Y2VSaWdodChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICAgICAgICB2YXIgaHlwZXJ0eURhdGUgPSBuZXcgRGF0ZShoeXBlcnR5W2JdLmxhc3RNb2RpZmllZCk7CiAgICAgICAgICAgICAgICAgIHZhciBoeXBlcnR5RGF0ZVAgPSBuZXcgRGF0ZShoeXBlcnR5W2FdLmxhc3RNb2RpZmllZCk7CiAgICAgICAgICAgICAgICAgIGlmIChoeXBlcnR5RGF0ZVAuZ2V0VGltZSgpIDwgaHlwZXJ0eURhdGUuZ2V0VGltZSgpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGI7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgcmV0dXJuIGE7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBoeXBlcnR5W3JlY2VudF07CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIHZhciBjbGVhbiA9IHJlc3VsdC5maWx0ZXIoZnVuY3Rpb24gKGh5cGVydHkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBoeXBlcnR5OwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjb25zb2xlLmluZm8oJ1JlcXVlc3RzIHJlc3VsdDogJywgY2xlYW4pOwogICAgICAgICAgICAgIHJlc29sdmUoY2xlYW4pOwogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVhc29uKSB7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihyZWFzb24pOwogICAgICAgICAgICAgIHJlc29sdmUodXNlcnNVUkxzKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KSgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gU2VhcmNoOwp9KCk7CgpleHBvcnRzLmRlZmF1bHQgPSBTZWFyY2g7Cm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOwoKfSx7fV0sNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Cid1c2Ugc3RyaWN0JzsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kaXZpZGVVUkwgPSBkaXZpZGVVUkw7CmV4cG9ydHMuZGVlcENsb25lID0gZGVlcENsb25lOwpleHBvcnRzLmdldFVzZXJNZWRpYSA9IGdldFVzZXJNZWRpYTsKZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7CmV4cG9ydHMuZ2V0VGVtcGxhdGUgPSBnZXRUZW1wbGF0ZTsKLyoqDQogKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiAqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQogKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiAqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQogKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiAqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiAqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KICogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCiAqDQogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KICoNCiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQogKg0KICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQogKiovCgovLyBqc2hpbnQgYnJvd3Nlcjp0cnVlLCBqcXVlcnk6IHRydWUKLy8ganNoaW50IHZhcnN0bXQ6IHRydWUKLyogZ2xvYmFsIEhhbmRsZWJhcnMgKi8KCi8qKg0KICogU3VwcG9ydCBtb2R1bGUgd2l0aCBzb21lIGZ1bmN0aW9ucyB3aWxsIGJlIHVzZWZ1bA0KICogQG1vZHVsZSB1dGlscw0KICovCgovKioNCiAqIEB0eXBlZGVmIGRpdmlkZVVSTA0KICogQHR5cGUgT2JqZWN0DQogKiBAcHJvcGVydHkge3N0cmluZ30gdHlwZSBUaGUgdHlwZSBvZiBVUkwNCiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkb21haW4gVGhlIGRvbWFpbiBvZiBVUkwNCiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpZGVudGl0eSBUaGUgaWRlbnRpdHkgb2YgVVJMDQogKi8KCi8qKg0KICogRGl2aWRlIGFuIHVybCBpbiB0eXBlLCBkb21haW4gYW5kIGlkZW50aXR5DQogKiBAcGFyYW0gIHtVUkwuVVJMfSB1cmwgLSB1cmwgYWRkcmVzcw0KICogQHJldHVybiB7ZGl2aWRlVVJMfSB0aGUgcmVzdWx0IG9mIGRpdmlkZVVSTA0KICovCmZ1bmN0aW9uIGRpdmlkZVVSTCh1cmwpIHsKCiAgLy8gbGV0IHJlID0gLyhbYS16QS1aLV0qKT86XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn1cLlthLXpdezIsNn1cYikqKFwvW1wvXGRcd1wuLV0qKSooPzpbXD9dKSooLispKi9naTsKICB2YXIgcmUgPSAvKFthLXpBLVotXSopOlwvXC8oPzpcLik/KFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1cL10qKS9naTsKICB2YXIgc3Vic3QgPSAnJDEsJDIsJDMnOwogIHZhciBwYXJ0cyA9IHVybC5yZXBsYWNlKHJlLCBzdWJzdCkuc3BsaXQoJywnKTsKCiAgLy8gSWYgdGhlIHVybCBoYXMgbm8gcHJvdG9jb2wsIHRoZSBkZWZhdWx0IHByb3RvY29sIHNldCBpcyBodHRwcwogIGlmIChwYXJ0c1swXSA9PT0gdXJsKSB7CiAgICBwYXJ0c1swXSA9ICdodHRwcyc7CiAgICBwYXJ0c1sxXSA9IHVybDsKICB9CgogIHZhciByZXN1bHQgPSB7CiAgICB0eXBlOiBwYXJ0c1swXSwKICAgIGRvbWFpbjogcGFydHNbMV0sCiAgICBpZGVudGl0eTogcGFydHNbMl0KICB9OwoKICByZXR1cm4gcmVzdWx0Owp9CgovKioNCiAqIE1ha2UgYSBDT1BZIG9mIHRoZSBvcmlnaW5hbCBkYXRhDQogKiBAcGFyYW0gIHtPYmplY3R9ICBvYmogLSBvYmplY3QgdG8gYmUgY2xvbmVkDQogKiBAcmV0dXJuIHtPYmplY3R9DQogKi8KZnVuY3Rpb24gZGVlcENsb25lKG9iaikgewogIC8vVE9ETzogc2ltcGxlIGJ1dCBpbmVmZmljaWVudCBKU09OIGRlZXAgY2xvbmUuLi4KICBpZiAob2JqKSByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTsKfQoKLyoqDQogKiBHZXQgV2ViUlRDIEFQSSByZXNvdXJjZXMNCiAqIEBwYXJhbSAge29iamVjdH0gICAgIG9wdGlvbnMgT2JqZWN0IGNvbnRhaW5pbmcgdGhlIGluZm9ybWF0aW9uIHRoYXQgcmVzb3VyY2VzIHdpbGwgYmUgdXNlZCAoY2FtZXJhLCBtaWMsIHJlc29sdXRpb24sIGV0Yyk7DQogKiBAcmV0dXJuIHtQcm9taXNlfQ0KICovCmZ1bmN0aW9uIGdldFVzZXJNZWRpYShjb25zdHJhaW50cykgewoKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewoKICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKS50aGVuKGZ1bmN0aW9uIChtZWRpYVN0cmVhbSkgewogICAgICByZXNvbHZlKG1lZGlhU3RyZWFtKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWFzb24pIHsKICAgICAgcmVqZWN0KHJlYXNvbik7CiAgICB9KTsKICB9KTsKfQoKZnVuY3Rpb24gc2VyaWFsaXplKCkgewoKICAkLmZuLnNlcmlhbGl6ZU9iamVjdCA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBvID0ge307CiAgICB2YXIgYSA9IHRoaXMuc2VyaWFsaXplQXJyYXkoKTsKICAgICQuZWFjaChhLCBmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChvW3RoaXMubmFtZV0gIT09IHVuZGVmaW5lZCkgewogICAgICAgIGlmICghb1t0aGlzLm5hbWVdLnB1c2gpIHsKICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IFtvW3RoaXMubmFtZV1dOwogICAgICAgIH0KCiAgICAgICAgb1t0aGlzLm5hbWVdLnB1c2godGhpcy52YWx1ZSB8fCAnJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgb1t0aGlzLm5hbWVdID0gdGhpcy52YWx1ZSB8fCAnJzsKICAgICAgfQogICAgfSk7CgogICAgcmV0dXJuIG87CiAgfTsKCiAgJC5mbi5zZXJpYWxpemVPYmplY3RBcnJheSA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBvID0ge307CiAgICB2YXIgYSA9IHRoaXMuc2VyaWFsaXplQXJyYXkoKTsKICAgICQuZWFjaChhLCBmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChvW3RoaXMubmFtZV0gIT09IHVuZGVmaW5lZCkgewogICAgICAgIGlmICghb1t0aGlzLm5hbWVdLnB1c2gpIHsKICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IFtvW3RoaXMubmFtZV1dOwogICAgICAgIH0KCiAgICAgICAgb1t0aGlzLm5hbWVdLnB1c2godGhpcy52YWx1ZSB8fCAnJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKCFvW3RoaXMubmFtZV0pIG9bdGhpcy5uYW1lXSA9IFtdOwogICAgICAgIG9bdGhpcy5uYW1lXS5wdXNoKHRoaXMudmFsdWUgfHwgJycpOwogICAgICB9CiAgICB9KTsKCiAgICByZXR1cm4gbzsKICB9Owp9CgpmdW5jdGlvbiBnZXRUZW1wbGF0ZShwYXRoLCBzY3JpcHQpIHsKCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKCiAgICBpZiAoSGFuZGxlYmFycy50ZW1wbGF0ZXMgPT09IHVuZGVmaW5lZCB8fCBIYW5kbGViYXJzLnRlbXBsYXRlc1tuYW1lXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIEhhbmRsZWJhcnMudGVtcGxhdGVzID0ge307CiAgICB9IGVsc2UgewogICAgICByZXNvbHZlKEhhbmRsZWJhcnMudGVtcGxhdGVzW25hbWVdKTsKICAgIH0KCiAgICB2YXIgdGVtcGxhdGVGaWxlID0gJC5hamF4KHsKICAgICAgdXJsOiBwYXRoICsgJy5oYnMnLAogICAgICBzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKGRhdGEpIHsKICAgICAgICBIYW5kbGViYXJzLnRlbXBsYXRlc1tuYW1lXSA9IEhhbmRsZWJhcnMuY29tcGlsZShkYXRhKTsKICAgICAgfSwKCiAgICAgIGZhaWw6IGZ1bmN0aW9uIGZhaWwocmVhc29uKSB7CiAgICAgICAgcmV0dXJuIHJlYXNvbjsKICAgICAgfQogICAgfSk7CgogICAgdmFyIHNjcmlwdEZpbGUgPSAkLmdldFNjcmlwdChzY3JpcHQpOwoKICAgIHZhciByZXF1ZXN0cyA9IFtdOwogICAgaWYgKHBhdGgpIHJlcXVlc3RzLnB1c2godGVtcGxhdGVGaWxlKTsKICAgIGlmIChzY3JpcHQpIHJlcXVlc3RzLnB1c2goc2NyaXB0RmlsZSk7CgogICAgUHJvbWlzZS5hbGwocmVxdWVzdHMpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICByZXNvbHZlKEhhbmRsZWJhcnMudGVtcGxhdGVzW25hbWVdKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWFzb24pIHsKICAgICAgcmVqZWN0KHJlYXNvbik7CiAgICB9KTsKICB9KTsKfQoKfSx7fV19LHt9LFs0XSkoNCkKfSk7",
      "sourceCodeClassname": "HelloWorldDiscoveryObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10016,
    "version": "0.1",
    "description": "Description of HelloWorldDiscoveryObserver",
    "objectName": "HelloWorldDiscoveryObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomClient": {
    "sourcePackage": {
      "sourceCode": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuYWN0aXZhdGUgPSBmKCl9fSkoZnVuY3Rpb24oKXt2YXIgZGVmaW5lLG1vZHVsZSxleHBvcnRzO3JldHVybiAoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitvKyInIik7dGhyb3cgZi5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKKGZ1bmN0aW9uIChnbG9iYWwpewovKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi8NCg0KLy8gRGlzdHJpYnV0aW9uIGZpbGUgZm9yIEh5cGVydHlEaXNjb3ZlcnkuanMgDQovLyB2ZXJzaW9uOiAwLjMuMA0KLy8gTGFzdCBidWlsZDogVGh1IEp1bCAyMSAyMDE2IDE1OjMxOjIzIEdNVCswMTAwIChXRVNUKQ0KDQohZnVuY3Rpb24oZSl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxlKTtlbHNle3ZhciB0O3Q9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLHQuSHlwZXJ0eURpc2NvdmVyeT1lKCl9fShmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbiBlKHQscixuKXtmdW5jdGlvbiBvKGMscyl7aWYoIXJbY10pe2lmKCF0W2NdKXt2YXIgdT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighcyYmdSlyZXR1cm4gdShjLCEwKTtpZihpKXJldHVybiBpKGMsITApO3ZhciBhPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2MrIiciKTt0aHJvdyBhLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGF9dmFyIGY9cltjXT17ZXhwb3J0czp7fX07dFtjXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgcj10W2NdWzFdW2VdO3JldHVybiBvKHI/cjplKX0sZixmLmV4cG9ydHMsZSx0LHIsbil9cmV0dXJuIHJbY10uZXhwb3J0c31mb3IodmFyIGk9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsYz0wO2M8bi5sZW5ndGg7YysrKW8obltjXSk7cmV0dXJuIG99KHsxOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5Ijo3fV0sMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjh9XSwzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIjo5fV0sNDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiOjEwfV0sNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtyLl9fZXNNb2R1bGU9ITAsclsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9fSx7fV0sNjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxpPW4obyk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbj10W3JdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBuJiYobi53cml0YWJsZT0hMCksKDAsaVsiZGVmYXVsdCJdKShlLG4ua2V5LG4pfX1yZXR1cm4gZnVuY3Rpb24odCxyLG4pe3JldHVybiByJiZlKHQucHJvdG90eXBlLHIpLG4mJmUodCxuKSx0fX0oKX0seyIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjJ9XSw3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLG89bi5KU09OfHwobi5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uc3RyaW5naWZ5LmFwcGx5KG8sYXJndW1lbnRzKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTh9XSw4OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSIpO3ZhciBuPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5kZWZpbmVQcm9wZXJ0eShlLHQscil9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjE4LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Ijo3NH1dLDk6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LmtleXN9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTgsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjo3NX1dLDEwOltmdW5jdGlvbihlLHQscil7ZSgiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciIpLGUoIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSIpLGUoIi4uL21vZHVsZXMvZXM2LnByb21pc2UiKSx0LmV4cG9ydHM9ZSgiLi4vbW9kdWxlcy9fY29yZSIpLlByb21pc2V9LHsiLi4vbW9kdWxlcy9fY29yZSI6MTgsIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjc2LCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIjo3NywiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIjo3OCwiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjo3OX1dLDExOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSx7fV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMTM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW4mJm4gaW4gZSl0aHJvdyBUeXBlRXJyb3IocisiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiKTtyZXR1cm4gZX19LHt9XSwxNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbihlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGV9fSx7Ii4vX2lzLW9iamVjdCI6MzV9XSwxNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWlvYmplY3QiKSxvPWUoIi4vX3RvLWxlbmd0aCIpLGk9ZSgiLi9fdG8taW5kZXgiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscixjKXt2YXIgcyx1PW4odCksYT1vKHUubGVuZ3RoKSxmPWkoYyxhKTtpZihlJiZyIT1yKXtmb3IoO2E+ZjspaWYocz11W2YrK10scyE9cylyZXR1cm4hMH1lbHNlIGZvcig7YT5mO2YrKylpZigoZXx8ZiBpbiB1KSYmdVtmXT09PXIpcmV0dXJuIGV8fGZ8fDA7cmV0dXJuIWUmJi0xfX19LHsiLi9fdG8taW5kZXgiOjY0LCIuL190by1pb2JqZWN0Ijo2NiwiLi9fdG8tbGVuZ3RoIjo2N31dLDE2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fY29mIiksbz1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1uKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSksYz1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChyKXt9fTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixzO3JldHVybiB2b2lkIDA9PT1lPyJVbmRlZmluZWQiOm51bGw9PT1lPyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9Yyh0PU9iamVjdChlKSxvKSk/cjppP24odCk6Ik9iamVjdCI9PShzPW4odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6c319LHsiLi9fY29mIjoxNywiLi9fd2tzIjo3MX1dLDE3OltmdW5jdGlvbihlLHQscil7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj10LmV4cG9ydHM9e3ZlcnNpb246IjIuNC4wIn07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9bil9LHt9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2EtZnVuY3Rpb24iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LHsiLi9fYS1mdW5jdGlvbiI6MTF9XSwyMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZih2b2lkIDA9PWUpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIitlKTtyZXR1cm4gZX19LHt9XSwyMTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZmFpbHMiOjI1fV0sMjI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKSxvPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50LGk9bihvKSYmbihvLmNyZWF0ZUVsZW1lbnQpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSx7Ii4vX2dsb2JhbCI6MjcsIi4vX2lzLW9iamVjdCI6MzV9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSx7fV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2N0eCIpLGM9ZSgiLi9faGlkZSIpLHM9InByb3RvdHlwZSIsdT1mdW5jdGlvbihlLHQscil7dmFyIGEsZixfLGw9ZSZ1LkYsZD1lJnUuRyxwPWUmdS5TLHY9ZSZ1LlAseT1lJnUuQixoPWUmdS5XLGI9ZD9vOm9bdF18fChvW3RdPXt9KSxtPWJbc10sZz1kP246cD9uW3RdOihuW3RdfHx7fSlbc107ZCYmKHI9dCk7Zm9yKGEgaW4gcilmPSFsJiZnJiZ2b2lkIDAhPT1nW2FdLGYmJmEgaW4gYnx8KF89Zj9nW2FdOnJbYV0sYlthXT1kJiYiZnVuY3Rpb24iIT10eXBlb2YgZ1thXT9yW2FdOnkmJmY/aShfLG4pOmgmJmdbYV09PV8/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLG4pe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLG4pfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHRbc109ZVtzXSx0fShfKTp2JiYiZnVuY3Rpb24iPT10eXBlb2YgXz9pKEZ1bmN0aW9uLmNhbGwsXyk6Xyx2JiYoKGIudmlydHVhbHx8KGIudmlydHVhbD17fSkpW2FdPV8sZSZ1LlImJm0mJiFtW2FdJiZjKG0sYSxfKSkpfTt1LkY9MSx1Lkc9Mix1LlM9NCx1LlA9OCx1LkI9MTYsdS5XPTMyLHUuVT02NCx1LlI9MTI4LHQuZXhwb3J0cz11fSx7Ii4vX2NvcmUiOjE4LCIuL19jdHgiOjE5LCIuL19nbG9iYWwiOjI3LCIuL19oaWRlIjoyOX1dLDI1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaCh0KXtyZXR1cm4hMH19fSx7fV0sMjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jdHgiKSxvPWUoIi4vX2l0ZXItY2FsbCIpLGk9ZSgiLi9faXMtYXJyYXktaXRlciIpLGM9ZSgiLi9fYW4tb2JqZWN0Iikscz1lKCIuL190by1sZW5ndGgiKSx1PWUoIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIiksYT17fSxmPXt9LHI9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLF8sbCl7dmFyIGQscCx2LHksaD1sP2Z1bmN0aW9uKCl7cmV0dXJuIGV9OnUoZSksYj1uKHIsXyx0PzI6MSksbT0wO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBoKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGl0ZXJhYmxlISIpO2lmKGkoaCkpe2ZvcihkPXMoZS5sZW5ndGgpO2Q+bTttKyspaWYoeT10P2IoYyhwPWVbbV0pWzBdLHBbMV0pOmIoZVttXSkseT09PWF8fHk9PT1mKXJldHVybiB5fWVsc2UgZm9yKHY9aC5jYWxsKGUpOyEocD12Lm5leHQoKSkuZG9uZTspaWYoeT1vKHYsYixwLnZhbHVlLHQpLHk9PT1hfHx5PT09ZilyZXR1cm4geX07ci5CUkVBSz1hLHIuUkVUVVJOPWZ9LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fY3R4IjoxOSwiLi9faXMtYXJyYXktaXRlciI6MzQsIi4vX2l0ZXItY2FsbCI6MzYsIi4vX3RvLWxlbmd0aCI6NjcsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjo3Mn1dLDI3OltmdW5jdGlvbihlLHQscil7dmFyIG49dC5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPW4pfSx7fV0sMjg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCl9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3QtZHAiKSxvPWUoIi4vX3Byb3BlcnR5LWRlc2MiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZihlLHQsbygxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19vYmplY3QtZHAiOjQ1LCIuL19wcm9wZXJ0eS1kZXNjIjo1M31dLDMwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR9LHsiLi9fZ2xvYmFsIjoyN31dLDMxOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSFlKCIuL19kZXNjcmlwdG9ycyIpJiYhZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZSgiLi9fZG9tLWNyZWF0ZSIpKCJkaXYiKSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2RvbS1jcmVhdGUiOjIyLCIuL19mYWlscyI6MjV9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7dmFyIG49dm9pZCAwPT09cjtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbj9lKCk6ZS5jYWxsKHIpO2Nhc2UgMTpyZXR1cm4gbj9lKHRbMF0pOmUuY2FsbChyLHRbMF0pO2Nhc2UgMjpyZXR1cm4gbj9lKHRbMF0sdFsxXSk6ZS5jYWxsKHIsdFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0pO2Nhc2UgNDpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdLHRbM10pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdLHRbM10pfXJldHVybiBlLmFwcGx5KHIsdCl9fSx7fV0sMzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jb2YiKTt0LmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1uKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LHsiLi9fY29mIjoxN31dLDM0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXRlcmF0b3JzIiksbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0seyIuL19pdGVyYXRvcnMiOjQxLCIuL193a3MiOjcxfV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0se31dLDM2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fYW4tb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe3RyeXtyZXR1cm4gbz90KG4ocilbMF0sclsxXSk6dChyKX1jYXRjaChpKXt2YXIgYz1lWyJyZXR1cm4iXTt0aHJvdyB2b2lkIDAhPT1jJiZuKGMuY2FsbChlKSksaX19fSx7Ii4vX2FuLW9iamVjdCI6MTR9XSwzNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19vYmplY3QtY3JlYXRlIiksbz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksaT1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLGM9e307ZSgiLi9faGlkZSIpKGMsZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9bihjLHtuZXh0Om8oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LHsiLi9faGlkZSI6MjksIi4vX29iamVjdC1jcmVhdGUiOjQ0LCIuL19wcm9wZXJ0eS1kZXNjIjo1MywiLi9fc2V0LXRvLXN0cmluZy10YWciOjU4LCIuL193a3MiOjcxfV0sMzg6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fbGlicmFyeSIpLG89ZSgiLi9fZXhwb3J0IiksaT1lKCIuL19yZWRlZmluZSIpLGM9ZSgiLi9faGlkZSIpLHM9ZSgiLi9faGFzIiksdT1lKCIuL19pdGVyYXRvcnMiKSxhPWUoIi4vX2l0ZXItY3JlYXRlIiksZj1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLF89ZSgiLi9fb2JqZWN0LWdwbyIpLGw9ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZD0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxwPSJAQGl0ZXJhdG9yIix2PSJrZXlzIix5PSJ2YWx1ZXMiLGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLGIsbSxnLGope2Eocix0LGIpO3ZhciB4LHcsayxPPWZ1bmN0aW9uKGUpe2lmKCFkJiZlIGluIEUpcmV0dXJuIEVbZV07c3dpdGNoKGUpe2Nhc2UgdjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX07Y2FzZSB5OnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LE09dCsiIEl0ZXJhdG9yIixQPW09PXksUz0hMSxFPWUucHJvdG90eXBlLFU9RVtsXXx8RVtwXXx8bSYmRVttXSxUPVV8fE8obSksUj1tP1A/TygiZW50cmllcyIpOlQ6dm9pZCAwLEw9IkFycmF5Ij09dD9FLmVudHJpZXN8fFU6VTtpZihMJiYoaz1fKEwuY2FsbChuZXcgZSkpLGshPT1PYmplY3QucHJvdG90eXBlJiYoZihrLE0sITApLG58fHMoayxsKXx8YyhrLGwsaCkpKSxQJiZVJiZVLm5hbWUhPT15JiYoUz0hMCxUPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY2FsbCh0aGlzKX0pLG4mJiFqfHwhZCYmIVMmJkVbbF18fGMoRSxsLFQpLHVbdF09VCx1W01dPWgsbSlpZih4PXt2YWx1ZXM6UD9UOk8oeSksa2V5czpnP1Q6Tyh2KSxlbnRyaWVzOlJ9LGopZm9yKHcgaW4geCl3IGluIEV8fGkoRSx3LHhbd10pO2Vsc2UgbyhvLlArby5GKihkfHxTKSx0LHgpO3JldHVybiB4fX0seyIuL19leHBvcnQiOjI0LCIuL19oYXMiOjI4LCIuL19oaWRlIjoyOSwiLi9faXRlci1jcmVhdGUiOjM3LCIuL19pdGVyYXRvcnMiOjQxLCIuL19saWJyYXJ5Ijo0MiwiLi9fb2JqZWN0LWdwbyI6NDgsIi4vX3JlZGVmaW5lIjo1NSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjU4LCIuL193a3MiOjcxfV0sMzk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxvPSExO3RyeXt2YXIgaT1bN11bbl0oKTtpWyJyZXR1cm4iXT1mdW5jdGlvbigpe289ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChjKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFvKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10sYz1pW25dKCk7Yy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbbl09ZnVuY3Rpb24oKXtyZXR1cm4gY30sZShpKX1jYXRjaChzKXt9cmV0dXJuIHJ9fSx7Ii4vX3drcyI6NzF9XSw0MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LHt9XSw0MTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17fX0se31dLDQyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSEwfSx7fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX3Rhc2siKS5zZXQsaT1uLk11dGF0aW9uT2JzZXJ2ZXJ8fG4uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixjPW4ucHJvY2VzcyxzPW4uUHJvbWlzZSx1PSJwcm9jZXNzIj09ZSgiLi9fY29mIikoYyk7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLGE9ZnVuY3Rpb24oKXt2YXIgbixvO2Zvcih1JiYobj1jLmRvbWFpbikmJm4uZXhpdCgpO2U7KXtvPWUuZm4sZT1lLm5leHQ7dHJ5e28oKX1jYXRjaChpKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxpfX10PXZvaWQgMCxuJiZuLmVudGVyKCl9O2lmKHUpcj1mdW5jdGlvbigpe2MubmV4dFRpY2soYSl9O2Vsc2UgaWYoaSl7dmFyIGY9ITAsXz1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkoYSkub2JzZXJ2ZShfLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe18uZGF0YT1mPSFmfX1lbHNlIGlmKHMmJnMucmVzb2x2ZSl7dmFyIGw9cy5yZXNvbHZlKCk7cj1mdW5jdGlvbigpe2wudGhlbihhKX19ZWxzZSByPWZ1bmN0aW9uKCl7by5jYWxsKG4sYSl9O3JldHVybiBmdW5jdGlvbihuKXt2YXIgbz17Zm46bixuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1vKSxlfHwoZT1vLHIoKSksdD1vfX19LHsiLi9fY29mIjoxNywiLi9fZ2xvYmFsIjoyNywiLi9fdGFzayI6NjN9XSw0NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpLG89ZSgiLi9fb2JqZWN0LWRwcyIpLGk9ZSgiLi9fZW51bS1idWcta2V5cyIpLGM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLHM9ZnVuY3Rpb24oKXt9LHU9InByb3RvdHlwZSIsYT1mdW5jdGlvbigpe3ZhciB0LHI9ZSgiLi9fZG9tLWNyZWF0ZSIpKCJpZnJhbWUiKSxuPWkubGVuZ3RoLG89Ij4iO2ZvcihyLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGUoIi4vX2h0bWwiKS5hcHBlbmRDaGlsZChyKSxyLnNyYz0iamF2YXNjcmlwdDoiLHQ9ci5jb250ZW50V2luZG93LmRvY3VtZW50LHQub3BlbigpLHQud3JpdGUoIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8L3NjcmlwdCIrbyksdC5jbG9zZSgpLGE9dC5GO24tLTspZGVsZXRlIGFbdV1baVtuXV07cmV0dXJuIGEoKX07dC5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhzW3VdPW4oZSkscj1uZXcgcyxzW3VdPW51bGwscltjXT1lKTpyPWEoKSx2b2lkIDA9PT10P3I6byhyLHQpfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19kb20tY3JlYXRlIjoyMiwiLi9fZW51bS1idWcta2V5cyI6MjMsIi4vX2h0bWwiOjMwLCIuL19vYmplY3QtZHBzIjo0NiwiLi9fc2hhcmVkLWtleSI6NTl9XSw0NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpLG89ZSgiLi9faWU4LWRvbS1kZWZpbmUiKSxpPWUoIi4vX3RvLXByaW1pdGl2ZSIpLGM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobihlKSx0PWkodCwhMCksbihyKSxvKXRyeXtyZXR1cm4gYyhlLHQscil9Y2F0Y2gocyl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9faWU4LWRvbS1kZWZpbmUiOjMxLCIuL190by1wcmltaXRpdmUiOjY5fV0sNDY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3QtZHAiKSxvPWUoIi4vX2FuLW9iamVjdCIpLGk9ZSgiLi9fb2JqZWN0LWtleXMiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe28oZSk7Zm9yKHZhciByLGM9aSh0KSxzPWMubGVuZ3RoLHU9MDtzPnU7KW4uZihlLHI9Y1t1KytdLHRbcl0pO3JldHVybiBlfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX29iamVjdC1kcCI6NDUsIi4vX29iamVjdC1rZXlzIjo1MH1dLDQ3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LXBpZSIpLG89ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fdG8taW9iamVjdCIpLGM9ZSgiLi9fdG8tcHJpbWl0aXZlIikscz1lKCIuL19oYXMiKSx1PWUoIi4vX2llOC1kb20tZGVmaW5lIiksYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP2E6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1jKHQsITApLHUpdHJ5e3JldHVybiBhKGUsdCl9Y2F0Y2gocil7fWlmKHMoZSx0KSlyZXR1cm4gbyghbi5mLmNhbGwoZSx0KSxlW3RdKX19LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19oYXMiOjI4LCIuL19pZTgtZG9tLWRlZmluZSI6MzEsIi4vX29iamVjdC1waWUiOjUxLCIuL19wcm9wZXJ0eS1kZXNjIjo1MywiLi9fdG8taW9iamVjdCI6NjYsIi4vX3RvLXByaW1pdGl2ZSI6Njl9XSw0ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hhcyIpLG89ZSgiLi9fdG8tb2JqZWN0IiksaT1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIiksYz1PYmplY3QucHJvdG90eXBlO3QuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlPW8oZSksbihlLGkpP2VbaV06ImZ1bmN0aW9uIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/YzpudWxsfX0seyIuL19oYXMiOjI4LCIuL19zaGFyZWQta2V5Ijo1OSwiLi9fdG8tb2JqZWN0Ijo2OH1dLDQ5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faGFzIiksbz1lKCIuL190by1pb2JqZWN0IiksaT1lKCIuL19hcnJheS1pbmNsdWRlcyIpKCExKSxjPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW8oZSksdT0wLGE9W107Zm9yKHIgaW4gcylyIT1jJiZuKHMscikmJmEucHVzaChyKTtmb3IoO3QubGVuZ3RoPnU7KW4ocyxyPXRbdSsrXSkmJih+aShhLHIpfHxhLnB1c2gocikpO3JldHVybiBhfX0seyIuL19hcnJheS1pbmNsdWRlcyI6MTUsIi4vX2hhcyI6MjgsIi4vX3NoYXJlZC1rZXkiOjU5LCIuL190by1pb2JqZWN0Ijo2Nn1dLDUwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiKSxvPWUoIi4vX2VudW0tYnVnLWtleXMiKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSx7Ii4vX2VudW0tYnVnLWtleXMiOjIzLCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6NDl9XSw1MTpbZnVuY3Rpb24oZSx0LHIpe3IuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0se31dLDUyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZXhwb3J0Iiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19mYWlscyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPShvLk9iamVjdHx8e30pW2VdfHxPYmplY3RbZV0sYz17fTtjW2VdPXQociksbihuLlMrbi5GKmkoZnVuY3Rpb24oKXtyKDEpfSksIk9iamVjdCIsYyl9fSx7Ii4vX2NvcmUiOjE4LCIuL19leHBvcnQiOjI0LCIuL19mYWlscyI6MjV9XSw1MzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LHt9XSw1NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hpZGUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbyBpbiB0KXImJmVbb10/ZVtvXT10W29dOm4oZSxvLHRbb10pO3JldHVybiBlfX0seyIuL19oaWRlIjoyOX1dLDU1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2hpZGUiKX0seyIuL19oaWRlIjoyOX1dLDU2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iiksbz1lKCIuL19hbi1vYmplY3QiKSxpPWZ1bmN0aW9uKGUsdCl7aWYobyhlKSwhbih0KSYmbnVsbCE9PXQpdGhyb3cgVHlwZUVycm9yKHQrIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSEiKX07dC5leHBvcnRzPXtzZXQ6T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoIl9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKHQscixuKXt0cnl7bj1lKCIuL19jdHgiKShGdW5jdGlvbi5jYWxsLGUoIi4vX29iamVjdC1nb3BkIikuZihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQsMiksbih0LFtdKSxyPSEodCBpbnN0YW5jZW9mIEFycmF5KX1jYXRjaChvKXtyPSEwfXJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBpKGUsdCkscj9lLl9fcHJvdG9fXz10Om4oZSx0KSxlfX0oe30sITEpOnZvaWQgMCksY2hlY2s6aX19LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fY3R4IjoxOSwiLi9faXMtb2JqZWN0IjozNSwiLi9fb2JqZWN0LWdvcGQiOjQ3fV0sNTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19vYmplY3QtZHAiKSxjPWUoIi4vX2Rlc2NyaXB0b3JzIikscz1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD0iZnVuY3Rpb24iPT10eXBlb2Ygb1tlXT9vW2VdOm5bZV07YyYmdCYmIXRbc10mJmkuZih0LHMse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LHsiLi9fY29yZSI6MTgsIi4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fZ2xvYmFsIjoyNywiLi9fb2JqZWN0LWRwIjo0NSwiLi9fd2tzIjo3MX1dLDU4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWRwIikuZixvPWUoIi4vX2hhcyIpLGk9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbyhlPXI/ZTplLnByb3RvdHlwZSxpKSYmbihlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSx7Ii4vX2hhcyI6MjgsIi4vX29iamVjdC1kcCI6NDUsIi4vX3drcyI6NzF9XSw1OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3NoYXJlZCIpKCJrZXlzIiksbz1lKCIuL191aWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPW8oZSkpfX0seyIuL19zaGFyZWQiOjYwLCIuL191aWQiOjcwfV0sNjA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPSJfX2NvcmUtanNfc2hhcmVkX18iLGk9bltvXXx8KG5bb109e30pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaVtlXXx8KGlbZV09e30pfX0seyIuL19nbG9iYWwiOjI3fV0sNjE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX2EtZnVuY3Rpb24iKSxpPWUoIi4vX3drcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYz1uKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1jfHx2b2lkIDA9PShyPW4oYylbaV0pP3Q6byhyKX19LHsiLi9fYS1mdW5jdGlvbiI6MTEsIi4vX2FuLW9iamVjdCI6MTQsIi4vX3drcyI6NzF9XSw2MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWludGVnZXIiKSxvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGksYyxzPVN0cmluZyhvKHQpKSx1PW4ociksYT1zLmxlbmd0aDtyZXR1cm4gdTwwfHx1Pj1hP2U/IiI6dm9pZCAwOihpPXMuY2hhckNvZGVBdCh1KSxpPDU1Mjk2fHxpPjU2MzE5fHx1KzE9PT1hfHwoYz1zLmNoYXJDb2RlQXQodSsxKSk8NTYzMjB8fGM+NTczNDM/ZT9zLmNoYXJBdCh1KTppOmU/cy5zbGljZSh1LHUrMik6KGktNTUyOTY8PDEwKSsoYy01NjMyMCkrNjU1MzYpfX19LHsiLi9fZGVmaW5lZCI6MjAsIi4vX3RvLWludGVnZXIiOjY1fV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGksYz1lKCIuL19jdHgiKSxzPWUoIi4vX2ludm9rZSIpLHU9ZSgiLi9faHRtbCIpLGE9ZSgiLi9fZG9tLWNyZWF0ZSIpLGY9ZSgiLi9fZ2xvYmFsIiksXz1mLnByb2Nlc3MsbD1mLnNldEltbWVkaWF0ZSxkPWYuY2xlYXJJbW1lZGlhdGUscD1mLk1lc3NhZ2VDaGFubmVsLHY9MCx5PXt9LGg9Im9ucmVhZHlzdGF0ZWNoYW5nZSIsYj1mdW5jdGlvbigpe3ZhciBlPSt0aGlzO2lmKHkuaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PXlbZV07ZGVsZXRlIHlbZV0sdCgpfX0sbT1mdW5jdGlvbihlKXtiLmNhbGwoZS5kYXRhKX07bCYmZHx8KGw9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MTthcmd1bWVudHMubGVuZ3RoPnI7KXQucHVzaChhcmd1bWVudHNbcisrXSk7cmV0dXJuIHlbKyt2XT1mdW5jdGlvbigpe3MoImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbih2KSx2fSxkPWZ1bmN0aW9uKGUpe2RlbGV0ZSB5W2VdfSwicHJvY2VzcyI9PWUoIi4vX2NvZiIpKF8pP249ZnVuY3Rpb24oZSl7Xy5uZXh0VGljayhjKGIsZSwxKSl9OnA/KG89bmV3IHAsaT1vLnBvcnQyLG8ucG9ydDEub25tZXNzYWdlPW0sbj1jKGkucG9zdE1lc3NhZ2UsaSwxKSk6Zi5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFmLmltcG9ydFNjcmlwdHM/KG49ZnVuY3Rpb24oZSl7Zi5wb3N0TWVzc2FnZShlKyIiLCIqIil9LGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbSwhMSkpOm49aCBpbiBhKCJzY3JpcHQiKT9mdW5jdGlvbihlKXt1LmFwcGVuZENoaWxkKGEoInNjcmlwdCIpKVtoXT1mdW5jdGlvbigpe3UucmVtb3ZlQ2hpbGQodGhpcyksYi5jYWxsKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChjKGIsZSwxKSwwKX0pLHQuZXhwb3J0cz17c2V0OmwsY2xlYXI6ZH19LHsiLi9fY29mIjoxNywiLi9fY3R4IjoxOSwiLi9fZG9tLWNyZWF0ZSI6MjIsIi4vX2dsb2JhbCI6MjcsIi4vX2h0bWwiOjMwLCIuL19pbnZva2UiOjMyfV0sNjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pbnRlZ2VyIiksbz1NYXRoLm1heCxpPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBlPW4oZSksZTwwP28oZSt0LDApOmkoZSx0KX19LHsiLi9fdG8taW50ZWdlciI6NjV9XSw2NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPU1hdGguY2VpbCxvPU1hdGguZmxvb3I7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bzpuKShlKX19LHt9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lvYmplY3QiKSxvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSx7Ii4vX2RlZmluZWQiOjIwLCIuL19pb2JqZWN0IjozM31dLDY3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8taW50ZWdlciIpLG89TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/byhuKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSx7Ii4vX3RvLWludGVnZXIiOjY1fV0sNjg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobihlKSl9fSx7Ii4vX2RlZmluZWQiOjIwfV0sNjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gZTt2YXIgcixvO2lmKHQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCF0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSx7Ii4vX2lzLW9iamVjdCI6MzV9XSw3MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPTAsbz1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK24rbykudG9TdHJpbmcoMzYpKX19LHt9XSw3MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3NoYXJlZCIpKCJ3a3MiKSxvPWUoIi4vX3VpZCIpLGk9ZSgiLi9fZ2xvYmFsIikuU3ltYm9sLGM9ImZ1bmN0aW9uIj09dHlwZW9mIGkscz10LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPWMmJmlbZV18fChjP2k6bykoIlN5bWJvbC4iK2UpKX07cy5zdG9yZT1ufSx7Ii4vX2dsb2JhbCI6MjcsIi4vX3NoYXJlZCI6NjAsIi4vX3VpZCI6NzB9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2NsYXNzb2YiKSxvPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9ZSgiLi9faXRlcmF0b3JzIik7dC5leHBvcnRzPWUoIi4vX2NvcmUiKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbb118fGVbIkBAaXRlcmF0b3IiXXx8aVtuKGUpXX19LHsiLi9fY2xhc3NvZiI6MTYsIi4vX2NvcmUiOjE4LCIuL19pdGVyYXRvcnMiOjQxLCIuL193a3MiOjcxfV0sNzM6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fYWRkLXRvLXVuc2NvcGFibGVzIiksbz1lKCIuL19pdGVyLXN0ZXAiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLGM9ZSgiLi9fdG8taW9iamVjdCIpO3QuZXhwb3J0cz1lKCIuL19pdGVyLWRlZmluZSIpKEFycmF5LCJBcnJheSIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PWMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG8oMSkpOiJrZXlzIj09dD9vKDAscik6InZhbHVlcyI9PXQ/bygwLGVbcl0pOm8oMCxbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG4oImtleXMiKSxuKCJ2YWx1ZXMiKSxuKCJlbnRyaWVzIil9LHsiLi9fYWRkLXRvLXVuc2NvcGFibGVzIjoxMiwiLi9faXRlci1kZWZpbmUiOjM4LCIuL19pdGVyLXN0ZXAiOjQwLCIuL19pdGVyYXRvcnMiOjQxLCIuL190by1pb2JqZWN0Ijo2Nn1dLDc0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZXhwb3J0Iik7bihuLlMrbi5GKiFlKCIuL19kZXNjcmlwdG9ycyIpLCJPYmplY3QiLHtkZWZpbmVQcm9wZXJ0eTplKCIuL19vYmplY3QtZHAiKS5mfSl9LHsiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19leHBvcnQiOjI0LCIuL19vYmplY3QtZHAiOjQ1fV0sNzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1vYmplY3QiKSxvPWUoIi4vX29iamVjdC1rZXlzIik7ZSgiLi9fb2JqZWN0LXNhcCIpKCJrZXlzIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19KX0seyIuL19vYmplY3Qta2V5cyI6NTAsIi4vX29iamVjdC1zYXAiOjUyLCIuL190by1vYmplY3QiOjY4fV0sNzY6W2Z1bmN0aW9uKGUsdCxyKXt9LHt9XSw3NzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbixvLGksYz1lKCIuL19saWJyYXJ5Iikscz1lKCIuL19nbG9iYWwiKSx1PWUoIi4vX2N0eCIpLGE9ZSgiLi9fY2xhc3NvZiIpLGY9ZSgiLi9fZXhwb3J0IiksXz1lKCIuL19pcy1vYmplY3QiKSxsPShlKCIuL19hbi1vYmplY3QiKSxlKCIuL19hLWZ1bmN0aW9uIikpLGQ9ZSgiLi9fYW4taW5zdGFuY2UiKSxwPWUoIi4vX2Zvci1vZiIpLHY9KGUoIi4vX3NldC1wcm90byIpLnNldCxlKCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIikpLHk9ZSgiLi9fdGFzayIpLnNldCxoPWUoIi4vX21pY3JvdGFzayIpKCksYj0iUHJvbWlzZSIsbT1zLlR5cGVFcnJvcixnPXMucHJvY2VzcyxqPXNbYl0sZz1zLnByb2Nlc3MseD0icHJvY2VzcyI9PWEoZyksdz1mdW5jdGlvbigpe30saz0hIWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PWoucmVzb2x2ZSgxKSxyPSh0LmNvbnN0cnVjdG9yPXt9KVtlKCIuL193a3MiKSgic3BlY2llcyIpXT1mdW5jdGlvbihlKXtlKHcsdyl9O3JldHVybih4fHwiZnVuY3Rpb24iPT10eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50KSYmdC50aGVuKHcpaW5zdGFuY2VvZiByfWNhdGNoKG4pe319KCksTz1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8ZT09PWomJnQ9PT1pfSxNPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiEoIV8oZSl8fCJmdW5jdGlvbiIhPXR5cGVvZih0PWUudGhlbikpJiZ0fSxQPWZ1bmN0aW9uKGUpe3JldHVybiBPKGosZSk/bmV3IFMoZSk6bmV3IG8oZSl9LFM9bz1mdW5jdGlvbihlKXt2YXIgdCxyO3RoaXMucHJvbWlzZT1uZXcgZShmdW5jdGlvbihlLG4pe2lmKHZvaWQgMCE9PXR8fHZvaWQgMCE9PXIpdGhyb3cgbSgiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1ufSksdGhpcy5yZXNvbHZlPWwodCksdGhpcy5yZWplY3Q9bChyKX0sRT1mdW5jdGlvbihlKXt0cnl7ZSgpfWNhdGNoKHQpe3JldHVybntlcnJvcjp0fX19LFU9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO2goZnVuY3Rpb24oKXtmb3IodmFyIG49ZS5fdixvPTE9PWUuX3MsaT0wLGM9ZnVuY3Rpb24odCl7dmFyIHIsaSxjPW8/dC5vazp0LmZhaWwscz10LnJlc29sdmUsdT10LnJlamVjdCxhPXQuZG9tYWluO3RyeXtjPyhvfHwoMj09ZS5faCYmTChlKSxlLl9oPTEpLGM9PT0hMD9yPW46KGEmJmEuZW50ZXIoKSxyPWMobiksYSYmYS5leGl0KCkpLHI9PT10LnByb21pc2U/dShtKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihpPU0ocikpP2kuY2FsbChyLHMsdSk6cyhyKSk6dShuKX1jYXRjaChmKXt1KGYpfX07ci5sZW5ndGg+aTspYyhyW2krK10pO2UuX2M9W10sZS5fbj0hMSx0JiYhZS5faCYmVChlKX0pfX0sVD1mdW5jdGlvbihlKXt5LmNhbGwocyxmdW5jdGlvbigpe3ZhciB0LHIsbixvPWUuX3Y7aWYoUihlKSYmKHQ9RShmdW5jdGlvbigpe3g/Zy5lbWl0KCJ1bmhhbmRsZWRSZWplY3Rpb24iLG8sZSk6KHI9cy5vbnVuaGFuZGxlZHJlamVjdGlvbik/cih7cHJvbWlzZTplLHJlYXNvbjpvfSk6KG49cy5jb25zb2xlKSYmbi5lcnJvciYmbi5lcnJvcigiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIixvKX0pLGUuX2g9eHx8UihlKT8yOjEpLGUuX2E9dm9pZCAwLHQpdGhyb3cgdC5lcnJvcn0pfSxSPWZ1bmN0aW9uKGUpe2lmKDE9PWUuX2gpcmV0dXJuITE7Zm9yKHZhciB0LHI9ZS5fYXx8ZS5fYyxuPTA7ci5sZW5ndGg+bjspaWYodD1yW24rK10sdC5mYWlsfHwhUih0LnByb21pc2UpKXJldHVybiExO3JldHVybiEwfSxMPWZ1bmN0aW9uKGUpe3kuY2FsbChzLGZ1bmN0aW9uKCl7dmFyIHQ7eD9nLmVtaXQoInJlamVjdGlvbkhhbmRsZWQiLGUpOih0PXMub25yZWplY3Rpb25oYW5kbGVkKSYmdCh7cHJvbWlzZTplLHJlYXNvbjplLl92fSl9KX0sQT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2R8fCh0Ll9kPSEwLHQ9dC5fd3x8dCx0Ll92PWUsdC5fcz0yLHQuX2F8fCh0Ll9hPXQuX2Muc2xpY2UoKSksVSh0LCEwKSl9LEM9ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzO2lmKCFyLl9kKXtyLl9kPSEwLHI9ci5fd3x8cjt0cnl7aWYocj09PWUpdGhyb3cgbSgiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGYiKTsodD1NKGUpKT9oKGZ1bmN0aW9uKCl7dmFyIG49e193OnIsX2Q6ITF9O3RyeXt0LmNhbGwoZSx1KEMsbiwxKSx1KEEsbiwxKSl9Y2F0Y2gobyl7QS5jYWxsKG4sbyl9fSk6KHIuX3Y9ZSxyLl9zPTEsVShyLCExKSl9Y2F0Y2gobil7QS5jYWxsKHtfdzpyLF9kOiExfSxuKX19fTtrfHwoaj1mdW5jdGlvbihlKXtkKHRoaXMsaixiLCJfaCIpLGwoZSksbi5jYWxsKHRoaXMpO3RyeXtlKHUoQyx0aGlzLDEpLHUoQSx0aGlzLDEpKX1jYXRjaCh0KXtBLmNhbGwodGhpcyx0KX19LG49ZnVuY3Rpb24oZSl7dGhpcy5fYz1bXSx0aGlzLl9hPXZvaWQgMCx0aGlzLl9zPTAsdGhpcy5fZD0hMSx0aGlzLl92PXZvaWQgMCx0aGlzLl9oPTAsdGhpcy5fbj0hMX0sbi5wcm90b3R5cGU9ZSgiLi9fcmVkZWZpbmUtYWxsIikoai5wcm90b3R5cGUse3RoZW46ZnVuY3Rpb24oZSx0KXt2YXIgcj1QKHYodGhpcyxqKSk7cmV0dXJuIHIub2s9ImZ1bmN0aW9uIiE9dHlwZW9mIGV8fGUsci5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPXg/Zy5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmVSh0aGlzLCExKSxyLnByb21pc2V9LCJjYXRjaCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksUz1mdW5jdGlvbigpe3ZhciBlPW5ldyBuO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT11KEMsZSwxKSx0aGlzLnJlamVjdD11KEEsZSwxKX0pLGYoZi5HK2YuVytmLkYqIWsse1Byb21pc2U6an0pLGUoIi4vX3NldC10by1zdHJpbmctdGFnIikoaixiKSxlKCIuL19zZXQtc3BlY2llcyIpKGIpLGk9ZSgiLi9fY29yZSIpW2JdLGYoZi5TK2YuRiohayxiLHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9UCh0aGlzKSxyPXQucmVqZWN0O3JldHVybiByKGUpLHQucHJvbWlzZX19KSxmKGYuUytmLkYqKGN8fCFrKSxiLHtyZXNvbHZlOmZ1bmN0aW9uKGUpe2lmKGUgaW5zdGFuY2VvZiBqJiZPKGUuY29uc3RydWN0b3IsdGhpcykpcmV0dXJuIGU7dmFyIHQ9UCh0aGlzKSxyPXQucmVzb2x2ZTtyZXR1cm4gcihlKSx0LnByb21pc2V9fSksZihmLlMrZi5GKiEoayYmZSgiLi9faXRlci1kZXRlY3QiKShmdW5jdGlvbihlKXtqLmFsbChlKVsiY2F0Y2giXSh3KX0pKSxiLHthbGw6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPVAodCksbj1yLnJlc29sdmUsbz1yLnJlamVjdCxpPUUoZnVuY3Rpb24oKXt2YXIgcj1bXSxpPTAsYz0xO3AoZSwhMSxmdW5jdGlvbihlKXt2YXIgcz1pKyssdT0hMTtyLnB1c2godm9pZCAwKSxjKyssdC5yZXNvbHZlKGUpLnRoZW4oZnVuY3Rpb24oZSl7dXx8KHU9ITAscltzXT1lLC0tY3x8bihyKSl9LG8pfSksLS1jfHxuKHIpfSk7cmV0dXJuIGkmJm8oaS5lcnJvciksci5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1QKHQpLG49ci5yZWplY3Qsbz1FKGZ1bmN0aW9uKCl7cChlLCExLGZ1bmN0aW9uKGUpe3QucmVzb2x2ZShlKS50aGVuKHIucmVzb2x2ZSxuKX0pfSk7cmV0dXJuIG8mJm4oby5lcnJvciksci5wcm9taXNlfX0pfSx7Ii4vX2EtZnVuY3Rpb24iOjExLCIuL19hbi1pbnN0YW5jZSI6MTMsIi4vX2FuLW9iamVjdCI6MTQsIi4vX2NsYXNzb2YiOjE2LCIuL19jb3JlIjoxOCwiLi9fY3R4IjoxOSwiLi9fZXhwb3J0IjoyNCwiLi9fZm9yLW9mIjoyNiwiLi9fZ2xvYmFsIjoyNywiLi9faXMtb2JqZWN0IjozNSwiLi9faXRlci1kZXRlY3QiOjM5LCIuL19saWJyYXJ5Ijo0MiwiLi9fbWljcm90YXNrIjo0MywiLi9fcmVkZWZpbmUtYWxsIjo1NCwiLi9fc2V0LXByb3RvIjo1NiwiLi9fc2V0LXNwZWNpZXMiOjU3LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6NTgsIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiOjYxLCIuL190YXNrIjo2MywiLi9fd2tzIjo3MX1dLDc4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX3N0cmluZy1hdCIpKCEwKTtlKCIuL19pdGVyLWRlZmluZSIpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1uKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHsiLi9faXRlci1kZWZpbmUiOjM4LCIuL19zdHJpbmctYXQiOjYyfV0sNzk6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL2VzNi5hcnJheS5pdGVyYXRvciIpO2Zvcih2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2hpZGUiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLGM9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIikscz1bIk5vZGVMaXN0IiwiRE9NVG9rZW5MaXN0IiwiTWVkaWFMaXN0IiwiU3R5bGVTaGVldExpc3QiLCJDU1NSdWxlTGlzdCJdLHU9MDt1PDU7dSsrKXt2YXIgYT1zW3VdLGY9blthXSxfPWYmJmYucHJvdG90eXBlO18mJiFfW2NdJiZvKF8sYyxhKSxpW2FdPWkuQXJyYXl9fSx7Ii4vX2dsb2JhbCI6MjcsIi4vX2hpZGUiOjI5LCIuL19pdGVyYXRvcnMiOjQxLCIuL193a3MiOjcxLCIuL2VzNi5hcnJheS5pdGVyYXRvciI6NzN9XSw4MDpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCIuL2h5cGVydHktZGlzY292ZXJ5L0h5cGVydHlEaXNjb3ZlcnkiKSxpPW4obyk7clsiZGVmYXVsdCJdPWlbImRlZmF1bHQiXSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vaHlwZXJ0eS1kaXNjb3ZlcnkvSHlwZXJ0eURpc2NvdmVyeSI6ODF9XSw4MTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9bihvKSxjPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHM9bihjKSx1PWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGE9bih1KSxmPWUoIi4uL3V0aWxzL3V0aWxzIiksXz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyKXsoMCxzWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIG49dGhpcztuLm1lc3NhZ2VCdXM9cixuLmRvbWFpbj0oMCxmLmRpdmlkZVVSTCkodCkuZG9tYWluLG4uZGlzY292ZXJ5VVJMPXR9cmV0dXJuKDAsYVsiZGVmYXVsdCJdKShlLFt7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RQZXJOYW1lIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj12b2lkIDA7bj10P3Q6ci5kb21haW47dmFyIG89e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7cmVzb3VyY2U6ImRhdGFPYmplY3Q6Ly8iK2V9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLHQpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKHIpe3ZhciBuPXIuYm9keS52YWx1ZS51cmw7bj9lKG4pOnQoIkRhdGFPYmplY3QgbmFtZSBkb2VzIG5vdCBleGlzdCIpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0eVBlclVzZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXZvaWQgMDtuPXQ/dDpyLmRvbWFpbjt2YXIgbz0idXNlcjovLyIrZS5zdWJzdHJpbmcoZS5pbmRleE9mKCJAIikrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCJAIikpLGM9e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbisiLyIsYm9keTp7cmVzb3VyY2U6b319O3JldHVybiBjb25zb2xlLmxvZygiTWVzc2FnZTogIixjLG4sbyksbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbih0LG4pe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKHIpe2NvbnNvbGUubG9nKCJtZXNzYWdlIHJlcGx5IixyKTt2YXIgbz12b2lkIDAsaT12b2lkIDAsYz12b2lkIDAscz1yLmJvZHkudmFsdWU7Zm9yKG8gaW4gcylpZih2b2lkIDAhPT1zW29dLmxhc3RNb2RpZmllZClpZih2b2lkIDA9PT1pKWk9bmV3IERhdGUoc1tvXS5sYXN0TW9kaWZpZWQpLGM9bztlbHNle3ZhciB1PW5ldyBEYXRlKHNbb10ubGFzdE1vZGlmaWVkKTtpLmdldFRpbWUoKTx1LmdldFRpbWUoKSYmKGk9dSxjPW8pfWNvbnNvbGUubG9nKCJMYXN0IEh5cGVydHk6ICIsYyxpKTt2YXIgYT1jO2lmKHZvaWQgMD09PWEpcmV0dXJuIG4oIlVzZXIgSHlwZXJ0eSBub3QgZm91bmQiKTt2YXIgZj17aWQ6ZSxkZXNjcmlwdG9yOnNbYV0uZGVzY3JpcHRvcixoeXBlcnR5VVJMOmF9O2NvbnNvbGUubG9nKCI9PT0+IGh5cGVydHlEaXNjb3ZlcnkgbWVzc2FnZUJ1bmRsZTogIixmKSx0KGYpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlciIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dm9pZCAwO249dD90OnIuZG9tYWluO3ZhciBvPSJ1c2VyOi8vIitlLnN1YnN0cmluZyhlLmluZGV4T2YoIkAiKSsxLGUubGVuZ3RoKSsiLyIrZS5zdWJzdHJpbmcoMCxlLmluZGV4T2YoIkAiKSksYz17dHlwZToicmVhZCIsZnJvbTpyLmRpc2NvdmVyeVVSTCx0bzoiZG9tYWluOi8vcmVnaXN0cnkuIituKyIvIixib2R5OntyZXNvdXJjZTpvfX07cmV0dXJuIGNvbnNvbGUubG9nKCJNZXNzYWdlIGRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlcjogIixjLG4sbyksbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLHQpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKHIpe2NvbnNvbGUubG9nKCJkaXNjb3Zlckh5cGVydGllc1BlclVzZXIgcmVwbHkiLHIpO3ZhciBuPXIuYm9keS52YWx1ZTtyZXR1cm4gbj92b2lkIGUobik6dCgiVXNlciBIeXBlcnR5IG5vdCBmb3VuZCIpfSl9KX19XSksZX0oKTtyWyJkZWZhdWx0Il09Xyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzIjo4MiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6NSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjo2fV0sODI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1mdW5jdGlvbiBvKGUpe2lmKCFlKXRocm93IEVycm9yKCJVUkwgaXMgbmVlZGVkIHRvIHNwbGl0Iik7dmFyIHQ9LyhbYS16QS1aLV0qKTpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2kscj0iJDEsJDIsJDMiLG49ZS5yZXBsYWNlKHQscikuc3BsaXQoIiwiKTtuWzBdPT09ZSYmKG5bMF09Imh0dHBzIixuWzFdPWUpO3ZhciBvPXt0eXBlOm5bMF0sZG9tYWluOm5bMV0saWRlbnRpdHk6blsyXX07cmV0dXJuIG99ZnVuY3Rpb24gaShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKSxyPXt1c2VybmFtZTplLnN1YnN0cmluZygwLHQpLGRvbWFpbjplLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpfTtyZXR1cm4gcn1mdW5jdGlvbiBjKGUpe3JldHVybiEoKDAscFsiZGVmYXVsdCJdKShlKS5sZW5ndGg+MCl9ZnVuY3Rpb24gcyhlKXtpZihlKXJldHVybiBKU09OLnBhcnNlKCgwLGxbImRlZmF1bHQiXSkoZSkpfWZ1bmN0aW9uIHUoZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJuInVzZXI6Ly8iK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsdCl9ZnVuY3Rpb24gYShlKXt2YXIgdD1vKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoIi8iLCIiKSsiQCIrdC5kb21haW59ZnVuY3Rpb24gZihlKXtpZigidXNlcjovLyI9PT1lLnN1YnN0cmluZygwLDcpKXt2YXIgdD1vKGUpO2lmKHQuZG9tYWluJiZ0LmlkZW50aXR5KXJldHVybiBlO3Rocm93InVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQifXJldHVybiB1KGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgXz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiKSxsPW4oXyksZD1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxwPW4oZCk7ci5kaXZpZGVVUkw9byxyLmRpdmlkZUVtYWlsPWksci5lbXB0eU9iamVjdD1jLHIuZGVlcENsb25lPXMsci5nZXRVc2VyVVJMRnJvbUVtYWlsPXUsci5nZXRVc2VyRW1haWxGcm9tVVJMPWEsci5jb252ZXJ0VG9Vc2VyVVJMPWZ9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoxLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjN9XX0se30sWzgwXSkoODApfSk7DQoNCgp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkKfSx7fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7CihmdW5jdGlvbiAoZ2xvYmFsKXsKLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovDQoNCi8vIERpc3RyaWJ1dGlvbiBmaWxlIGZvciBJZGVudGl0eU1hbmFnZXIuanMgDQovLyB2ZXJzaW9uOiAwLjMuMA0KLy8gTGFzdCBidWlsZDogVGh1IEp1bCAyMSAyMDE2IDE1OjMxOjIxIEdNVCswMTAwIChXRVNUKQ0KDQohZnVuY3Rpb24odCl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz10KCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSx0KTtlbHNle3ZhciBlO2U9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLGUuSWRlbnRpdHlNYW5hZ2VyPXQoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIHQoZSxyLG4pe2Z1bmN0aW9uIG8oYyxzKXtpZighcltjXSl7aWYoIWVbY10pe3ZhciB1PSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFzJiZ1KXJldHVybiB1KGMsITApO2lmKGkpcmV0dXJuIGkoYywhMCk7dmFyIGE9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrYysiJyIpO3Rocm93IGEuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsYX12YXIgZj1yW2NdPXtleHBvcnRzOnt9fTtlW2NdWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciByPWVbY11bMV1bdF07cmV0dXJuIG8ocj9yOnQpfSxmLGYuZXhwb3J0cyx0LGUscixuKX1yZXR1cm4gcltjXS5leHBvcnRzfWZvcih2YXIgaT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxjPTA7YzxuLmxlbmd0aDtjKyspbyhuW2NdKTtyZXR1cm4gb30oezE6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9eyJkZWZhdWx0Ijp0KCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiOjd9XSwyOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPXsiZGVmYXVsdCI6dCgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6OH1dLDM6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9eyJkZWZhdWx0Ijp0KCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiOjl9XSw0OltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPXsiZGVmYXVsdCI6dCgiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MTB9XSw1OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3IuX19lc01vZHVsZT0hMCxyWyJkZWZhdWx0Il09ZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX19LHt9XSw2OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OnsiZGVmYXVsdCI6dH19ci5fX2VzTW9kdWxlPSEwO3ZhciBvPXQoIi4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLGk9bihvKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG4mJihuLndyaXRhYmxlPSEwKSwoMCxpWyJkZWZhdWx0Il0pKHQsbi5rZXksbil9fXJldHVybiBmdW5jdGlvbihlLHIsbil7cmV0dXJuIHImJnQoZS5wcm90b3R5cGUsciksbiYmdChlLG4pLGV9fSgpfSx7Ii4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6Mn1dLDc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuLi8uLi9tb2R1bGVzL19jb3JlIiksbz1uLkpTT058fChuLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gby5zdHJpbmdpZnkuYXBwbHkobyxhcmd1bWVudHMpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxOH1dLDg6W2Z1bmN0aW9uKHQsZSxyKXt0KCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Iik7dmFyIG49dCgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIpe3JldHVybiBuLmRlZmluZVByb3BlcnR5KHQsZSxyKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MTgsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOjc0fV0sOTpbZnVuY3Rpb24odCxlLHIpe3QoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIiksZS5leHBvcnRzPXQoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Qua2V5c30seyIuLi8uLi9tb2R1bGVzL19jb3JlIjoxOCwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOjc1fV0sMTA6W2Z1bmN0aW9uKHQsZSxyKXt0KCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksdCgiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksdCgiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksdCgiLi4vbW9kdWxlcy9lczYucHJvbWlzZSIpLGUuZXhwb3J0cz10KCIuLi9tb2R1bGVzL19jb3JlIikuUHJvbWlzZX0seyIuLi9tb2R1bGVzL19jb3JlIjoxOCwiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyI6NzYsIi4uL21vZHVsZXMvZXM2LnByb21pc2UiOjc3LCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjc4LCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjc5fV0sMTE6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBmdW5jdGlvbiEiKTtyZXR1cm4gdH19LHt9XSwxMjpbZnVuY3Rpb24odCxlLHIpe2UuZXhwb3J0cz1mdW5jdGlvbigpe319LHt9XSwxMzpbZnVuY3Rpb24odCxlLHIpe2UuZXhwb3J0cz1mdW5jdGlvbih0LGUscixuKXtpZighKHQgaW5zdGFuY2VvZiBlKXx8dm9pZCAwIT09biYmbiBpbiB0KXRocm93IFR5cGVFcnJvcihyKyI6IGluY29ycmVjdCBpbnZvY2F0aW9uISIpO3JldHVybiB0fX0se31dLDE0OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faXMtb2JqZWN0Iik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCFuKHQpKXRocm93IFR5cGVFcnJvcih0KyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gdH19LHsiLi9faXMtb2JqZWN0IjozNX1dLDE1OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fdG8taW9iamVjdCIpLG89dCgiLi9fdG8tbGVuZ3RoIiksaT10KCIuL190by1pbmRleCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxyLGMpe3ZhciBzLHU9bihlKSxhPW8odS5sZW5ndGgpLGY9aShjLGEpO2lmKHQmJnIhPXIpe2Zvcig7YT5mOylpZihzPXVbZisrXSxzIT1zKXJldHVybiEwfWVsc2UgZm9yKDthPmY7ZisrKWlmKCh0fHxmIGluIHUpJiZ1W2ZdPT09cilyZXR1cm4gdHx8Znx8MDtyZXR1cm4hdCYmLTF9fX0seyIuL190by1pbmRleCI6NjQsIi4vX3RvLWlvYmplY3QiOjY2LCIuL190by1sZW5ndGgiOjY3fV0sMTY6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19jb2YiKSxvPXQoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpLGk9IkFyZ3VtZW50cyI9PW4oZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKSxjPWZ1bmN0aW9uKHQsZSl7dHJ5e3JldHVybiB0W2VdfWNhdGNoKHIpe319O2UuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZSxyLHM7cmV0dXJuIHZvaWQgMD09PXQ/IlVuZGVmaW5lZCI6bnVsbD09PXQ/Ik51bGwiOiJzdHJpbmciPT10eXBlb2Yocj1jKGU9T2JqZWN0KHQpLG8pKT9yOmk/bihlKToiT2JqZWN0Ij09KHM9bihlKSkmJiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNhbGxlZT8iQXJndW1lbnRzIjpzfX0seyIuL19jb2YiOjE3LCIuL193a3MiOjcxfV0sMTc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj17fS50b1N0cmluZztlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG4uY2FsbCh0KS5zbGljZSg4LC0xKX19LHt9XSwxODpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPWUuZXhwb3J0cz17dmVyc2lvbjoiMi40LjAifTsibnVtYmVyIj09dHlwZW9mIF9fZSYmKF9fZT1uKX0se31dLDE5OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fYS1mdW5jdGlvbiIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUscil7aWYobih0KSx2b2lkIDA9PT1lKXJldHVybiB0O3N3aXRjaChyKXtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiB0LmNhbGwoZSxyKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiB0LmNhbGwoZSxyLG4pfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHIsbixvKXtyZXR1cm4gdC5jYWxsKGUscixuLG8pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9fX0seyIuL19hLWZ1bmN0aW9uIjoxMX1dLDIwOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09dCl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiK3QpO3JldHVybiB0fX0se31dLDIxOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPSF0KCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19mYWlscyI6MjV9XSwyMjpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2lzLW9iamVjdCIpLG89dCgiLi9fZ2xvYmFsIikuZG9jdW1lbnQsaT1uKG8pJiZuKG8uY3JlYXRlRWxlbWVudCk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBpP28uY3JlYXRlRWxlbWVudCh0KTp7fX19LHsiLi9fZ2xvYmFsIjoyNywiLi9faXMtb2JqZWN0IjozNX1dLDIzOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPSJjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YiLnNwbGl0KCIsIil9LHt9XSwyNDpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2dsb2JhbCIpLG89dCgiLi9fY29yZSIpLGk9dCgiLi9fY3R4IiksYz10KCIuL19oaWRlIikscz0icHJvdG90eXBlIix1PWZ1bmN0aW9uKHQsZSxyKXt2YXIgYSxmLF8sbD10JnUuRixwPXQmdS5HLGQ9dCZ1LlMsaD10JnUuUCx2PXQmdS5CLGI9dCZ1LlcseT1wP286b1tlXXx8KG9bZV09e30pLG09eVtzXSxqPXA/bjpkP25bZV06KG5bZV18fHt9KVtzXTtwJiYocj1lKTtmb3IoYSBpbiByKWY9IWwmJmomJnZvaWQgMCE9PWpbYV0sZiYmYSBpbiB5fHwoXz1mP2pbYV06clthXSx5W2FdPXAmJiJmdW5jdGlvbiIhPXR5cGVvZiBqW2FdP3JbYV06diYmZj9pKF8sbik6YiYmalthXT09Xz9mdW5jdGlvbih0KXt2YXIgZT1mdW5jdGlvbihlLHIsbil7aWYodGhpcyBpbnN0YW5jZW9mIHQpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyB0O2Nhc2UgMTpyZXR1cm4gbmV3IHQoZSk7Y2FzZSAyOnJldHVybiBuZXcgdChlLHIpfXJldHVybiBuZXcgdChlLHIsbil9cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gZVtzXT10W3NdLGV9KF8pOmgmJiJmdW5jdGlvbiI9PXR5cGVvZiBfP2koRnVuY3Rpb24uY2FsbCxfKTpfLGgmJigoeS52aXJ0dWFsfHwoeS52aXJ0dWFsPXt9KSlbYV09Xyx0JnUuUiYmbSYmIW1bYV0mJmMobSxhLF8pKSl9O3UuRj0xLHUuRz0yLHUuUz00LHUuUD04LHUuQj0xNix1Llc9MzIsdS5VPTY0LHUuUj0xMjgsZS5leHBvcnRzPXV9LHsiLi9fY29yZSI6MTgsIi4vX2N0eCI6MTksIi4vX2dsb2JhbCI6MjcsIi4vX2hpZGUiOjI5fV0sMjU6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiEhdCgpfWNhdGNoKGUpe3JldHVybiEwfX19LHt9XSwyNjpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2N0eCIpLG89dCgiLi9faXRlci1jYWxsIiksaT10KCIuL19pcy1hcnJheS1pdGVyIiksYz10KCIuL19hbi1vYmplY3QiKSxzPXQoIi4vX3RvLWxlbmd0aCIpLHU9dCgiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiKSxhPXt9LGY9e30scj1lLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIsXyxsKXt2YXIgcCxkLGgsdixiPWw/ZnVuY3Rpb24oKXtyZXR1cm4gdH06dSh0KSx5PW4ocixfLGU/MjoxKSxtPTA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGIpdGhyb3cgVHlwZUVycm9yKHQrIiBpcyBub3QgaXRlcmFibGUhIik7aWYoaShiKSl7Zm9yKHA9cyh0Lmxlbmd0aCk7cD5tO20rKylpZih2PWU/eShjKGQ9dFttXSlbMF0sZFsxXSk6eSh0W21dKSx2PT09YXx8dj09PWYpcmV0dXJuIHZ9ZWxzZSBmb3IoaD1iLmNhbGwodCk7IShkPWgubmV4dCgpKS5kb25lOylpZih2PW8oaCx5LGQudmFsdWUsZSksdj09PWF8fHY9PT1mKXJldHVybiB2fTtyLkJSRUFLPWEsci5SRVRVUk49Zn0seyIuL19hbi1vYmplY3QiOjE0LCIuL19jdHgiOjE5LCIuL19pcy1hcnJheS1pdGVyIjozNCwiLi9faXRlci1jYWxsIjozNiwiLi9fdG8tbGVuZ3RoIjo2NywiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiOjcyfV0sMjc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj1lLmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9bil9LHt9XSwyODpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXt9Lmhhc093blByb3BlcnR5O2UuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBuLmNhbGwodCxlKX19LHt9XSwyOTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX29iamVjdC1kcCIpLG89dCgiLi9fcHJvcGVydHktZGVzYyIpO2UuZXhwb3J0cz10KCIuL19kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKHQsZSxyKXtyZXR1cm4gbi5mKHQsZSxvKDEscikpfTpmdW5jdGlvbih0LGUscil7cmV0dXJuIHRbZV09cix0fX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX29iamVjdC1kcCI6NDUsIi4vX3Byb3BlcnR5LWRlc2MiOjUzfV0sMzA6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9dCgiLi9fZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuL19nbG9iYWwiOjI3fV0sMzE6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9IXQoIi4vX2Rlc2NyaXB0b3JzIikmJiF0KCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0KCIuL19kb20tY3JlYXRlIikoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fZG9tLWNyZWF0ZSI6MjIsIi4vX2ZhaWxzIjoyNX1dLDMyOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj12b2lkIDA9PT1yO3N3aXRjaChlLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuP3QoKTp0LmNhbGwocik7Y2FzZSAxOnJldHVybiBuP3QoZVswXSk6dC5jYWxsKHIsZVswXSk7Y2FzZSAyOnJldHVybiBuP3QoZVswXSxlWzFdKTp0LmNhbGwocixlWzBdLGVbMV0pO2Nhc2UgMzpyZXR1cm4gbj90KGVbMF0sZVsxXSxlWzJdKTp0LmNhbGwocixlWzBdLGVbMV0sZVsyXSk7Y2FzZSA0OnJldHVybiBuP3QoZVswXSxlWzFdLGVbMl0sZVszXSk6dC5jYWxsKHIsZVswXSxlWzFdLGVbMl0sZVszXSl9cmV0dXJuIHQuYXBwbHkocixlKX19LHt9XSwzMzpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2NvZiIpO2UuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24odCl7cmV0dXJuIlN0cmluZyI9PW4odCk/dC5zcGxpdCgiIik6T2JqZWN0KHQpfX0seyIuL19jb2YiOjE3fV0sMzQ6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19pdGVyYXRvcnMiKSxvPXQoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9QXJyYXkucHJvdG90eXBlO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dCYmKG4uQXJyYXk9PT10fHxpW29dPT09dCl9fSx7Ii4vX2l0ZXJhdG9ycyI6NDEsIi4vX3drcyI6NzF9XSwzNTpbZnVuY3Rpb24odCxlLHIpe2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIHQ/bnVsbCE9PXQ6ImZ1bmN0aW9uIj09dHlwZW9mIHR9fSx7fV0sMzY6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19hbi1vYmplY3QiKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIsbyl7dHJ5e3JldHVybiBvP2UobihyKVswXSxyWzFdKTplKHIpfWNhdGNoKGkpe3ZhciBjPXRbInJldHVybiJdO3Rocm93IHZvaWQgMCE9PWMmJm4oYy5jYWxsKHQpKSxpfX19LHsiLi9fYW4tb2JqZWN0IjoxNH1dLDM3OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3ZhciBuPXQoIi4vX29iamVjdC1jcmVhdGUiKSxvPXQoIi4vX3Byb3BlcnR5LWRlc2MiKSxpPXQoIi4vX3NldC10by1zdHJpbmctdGFnIiksYz17fTt0KCIuL19oaWRlIikoYyx0KCIuL193a3MiKSgiaXRlcmF0b3IiKSxmdW5jdGlvbigpe3JldHVybiB0aGlzfSksZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSxyKXt0LnByb3RvdHlwZT1uKGMse25leHQ6bygxLHIpfSksaSh0LGUrIiBJdGVyYXRvciIpfX0seyIuL19oaWRlIjoyOSwiLi9fb2JqZWN0LWNyZWF0ZSI6NDQsIi4vX3Byb3BlcnR5LWRlc2MiOjUzLCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6NTgsIi4vX3drcyI6NzF9XSwzODpbZnVuY3Rpb24odCxlLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj10KCIuL19saWJyYXJ5Iiksbz10KCIuL19leHBvcnQiKSxpPXQoIi4vX3JlZGVmaW5lIiksYz10KCIuL19oaWRlIikscz10KCIuL19oYXMiKSx1PXQoIi4vX2l0ZXJhdG9ycyIpLGE9dCgiLi9faXRlci1jcmVhdGUiKSxmPXQoIi4vX3NldC10by1zdHJpbmctdGFnIiksXz10KCIuL19vYmplY3QtZ3BvIiksbD10KCIuL193a3MiKSgiaXRlcmF0b3IiKSxwPSEoW10ua2V5cyYmIm5leHQiaW5bXS5rZXlzKCkpLGQ9IkBAaXRlcmF0b3IiLGg9ImtleXMiLHY9InZhbHVlcyIsYj1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIseSxtLGosZyl7YShyLGUseSk7dmFyIHgsdyxrLE89ZnVuY3Rpb24odCl7aWYoIXAmJnQgaW4gUClyZXR1cm4gUFt0XTtzd2l0Y2godCl7Y2FzZSBoOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLHQpfTtjYXNlIHY6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsdCl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLHQpfX0sTT1lKyIgSXRlcmF0b3IiLFM9bT09dixFPSExLFA9dC5wcm90b3R5cGUsVD1QW2xdfHxQW2RdfHxtJiZQW21dLFI9VHx8TyhtKSxVPW0/Uz9PKCJlbnRyaWVzIik6Ujp2b2lkIDAsQT0iQXJyYXkiPT1lP1AuZW50cmllc3x8VDpUO2lmKEEmJihrPV8oQS5jYWxsKG5ldyB0KSksayE9PU9iamVjdC5wcm90b3R5cGUmJihmKGssTSwhMCksbnx8cyhrLGwpfHxjKGssbCxiKSkpLFMmJlQmJlQubmFtZSE9PXYmJihFPSEwLFI9ZnVuY3Rpb24oKXtyZXR1cm4gVC5jYWxsKHRoaXMpfSksbiYmIWd8fCFwJiYhRSYmUFtsXXx8YyhQLGwsUiksdVtlXT1SLHVbTV09YixtKWlmKHg9e3ZhbHVlczpTP1I6Tyh2KSxrZXlzOmo/UjpPKGgpLGVudHJpZXM6VX0sZylmb3IodyBpbiB4KXcgaW4gUHx8aShQLHcseFt3XSk7ZWxzZSBvKG8uUCtvLkYqKHB8fEUpLGUseCk7cmV0dXJuIHh9fSx7Ii4vX2V4cG9ydCI6MjQsIi4vX2hhcyI6MjgsIi4vX2hpZGUiOjI5LCIuL19pdGVyLWNyZWF0ZSI6MzcsIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX2xpYnJhcnkiOjQyLCIuL19vYmplY3QtZ3BvIjo0OCwiLi9fcmVkZWZpbmUiOjU1LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6NTgsIi4vX3drcyI6NzF9XSwzOTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX3drcyIpKCJpdGVyYXRvciIpLG89ITE7dHJ5e3ZhciBpPVs3XVtuXSgpO2lbInJldHVybiJdPWZ1bmN0aW9uKCl7bz0hMH0sQXJyYXkuZnJvbShpLGZ1bmN0aW9uKCl7dGhyb3cgMn0pfWNhdGNoKGMpe31lLmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZighZSYmIW8pcmV0dXJuITE7dmFyIHI9ITE7dHJ5e3ZhciBpPVs3XSxjPWlbbl0oKTtjLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTpyPSEwfX0saVtuXT1mdW5jdGlvbigpe3JldHVybiBjfSx0KGkpfWNhdGNoKHMpe31yZXR1cm4gcn19LHsiLi9fd2tzIjo3MX1dLDQwOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJue3ZhbHVlOmUsZG9uZTohIXR9fX0se31dLDQxOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPXt9fSx7fV0sNDI6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9ITB9LHt9XSw0MzpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2dsb2JhbCIpLG89dCgiLi9fdGFzayIpLnNldCxpPW4uTXV0YXRpb25PYnNlcnZlcnx8bi5XZWJLaXRNdXRhdGlvbk9ic2VydmVyLGM9bi5wcm9jZXNzLHM9bi5Qcm9taXNlLHU9InByb2Nlc3MiPT10KCIuL19jb2YiKShjKTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgdCxlLHIsYT1mdW5jdGlvbigpe3ZhciBuLG87Zm9yKHUmJihuPWMuZG9tYWluKSYmbi5leGl0KCk7dDspe289dC5mbix0PXQubmV4dDt0cnl7bygpfWNhdGNoKGkpe3Rocm93IHQ/cigpOmU9dm9pZCAwLGl9fWU9dm9pZCAwLG4mJm4uZW50ZXIoKX07aWYodSlyPWZ1bmN0aW9uKCl7Yy5uZXh0VGljayhhKX07ZWxzZSBpZihpKXt2YXIgZj0hMCxfPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtuZXcgaShhKS5vYnNlcnZlKF8se2NoYXJhY3RlckRhdGE6ITB9KSxyPWZ1bmN0aW9uKCl7Xy5kYXRhPWY9IWZ9fWVsc2UgaWYocyYmcy5yZXNvbHZlKXt2YXIgbD1zLnJlc29sdmUoKTtyPWZ1bmN0aW9uKCl7bC50aGVuKGEpfX1lbHNlIHI9ZnVuY3Rpb24oKXtvLmNhbGwobixhKX07cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBvPXtmbjpuLG5leHQ6dm9pZCAwfTtlJiYoZS5uZXh0PW8pLHR8fCh0PW8scigpKSxlPW99fX0seyIuL19jb2YiOjE3LCIuL19nbG9iYWwiOjI3LCIuL190YXNrIjo2M31dLDQ0OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fYW4tb2JqZWN0Iiksbz10KCIuL19vYmplY3QtZHBzIiksaT10KCIuL19lbnVtLWJ1Zy1rZXlzIiksYz10KCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIikscz1mdW5jdGlvbigpe30sdT0icHJvdG90eXBlIixhPWZ1bmN0aW9uKCl7dmFyIGUscj10KCIuL19kb20tY3JlYXRlIikoImlmcmFtZSIpLG49aS5sZW5ndGgsbz0iPiI7Zm9yKHIuc3R5bGUuZGlzcGxheT0ibm9uZSIsdCgiLi9faHRtbCIpLmFwcGVuZENoaWxkKHIpLHIuc3JjPSJqYXZhc2NyaXB0OiIsZT1yLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQsZS5vcGVuKCksZS53cml0ZSgiPHNjcmlwdD5kb2N1bWVudC5GPU9iamVjdDwvc2NyaXB0IitvKSxlLmNsb3NlKCksYT1lLkY7bi0tOylkZWxldGUgYVt1XVtpW25dXTtyZXR1cm4gYSgpfTtlLmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24odCxlKXt2YXIgcjtyZXR1cm4gbnVsbCE9PXQ/KHNbdV09bih0KSxyPW5ldyBzLHNbdV09bnVsbCxyW2NdPXQpOnI9YSgpLHZvaWQgMD09PWU/cjpvKHIsZSl9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2RvbS1jcmVhdGUiOjIyLCIuL19lbnVtLWJ1Zy1rZXlzIjoyMywiLi9faHRtbCI6MzAsIi4vX29iamVjdC1kcHMiOjQ2LCIuL19zaGFyZWQta2V5Ijo1OX1dLDQ1OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fYW4tb2JqZWN0Iiksbz10KCIuL19pZTgtZG9tLWRlZmluZSIpLGk9dCgiLi9fdG8tcHJpbWl0aXZlIiksYz1PYmplY3QuZGVmaW5lUHJvcGVydHk7ci5mPXQoIi4vX2Rlc2NyaXB0b3JzIik/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKHQsZSxyKXtpZihuKHQpLGU9aShlLCEwKSxuKHIpLG8pdHJ5e3JldHVybiBjKHQsZSxyKX1jYXRjaChzKXt9aWYoImdldCJpbiByfHwic2V0ImluIHIpdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEiKTtyZXR1cm4idmFsdWUiaW4gciYmKHRbZV09ci52YWx1ZSksdH19LHsiLi9fYW4tb2JqZWN0IjoxNCwiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19pZTgtZG9tLWRlZmluZSI6MzEsIi4vX3RvLXByaW1pdGl2ZSI6Njl9XSw0NjpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX29iamVjdC1kcCIpLG89dCgiLi9fYW4tb2JqZWN0IiksaT10KCIuL19vYmplY3Qta2V5cyIpO2UuZXhwb3J0cz10KCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzOmZ1bmN0aW9uKHQsZSl7byh0KTtmb3IodmFyIHIsYz1pKGUpLHM9Yy5sZW5ndGgsdT0wO3M+dTspbi5mKHQscj1jW3UrK10sZVtyXSk7cmV0dXJuIHR9fSx7Ii4vX2FuLW9iamVjdCI6MTQsIi4vX2Rlc2NyaXB0b3JzIjoyMSwiLi9fb2JqZWN0LWRwIjo0NSwiLi9fb2JqZWN0LWtleXMiOjUwfV0sNDc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19vYmplY3QtcGllIiksbz10KCIuL19wcm9wZXJ0eS1kZXNjIiksaT10KCIuL190by1pb2JqZWN0IiksYz10KCIuL190by1wcmltaXRpdmUiKSxzPXQoIi4vX2hhcyIpLHU9dCgiLi9faWU4LWRvbS1kZWZpbmUiKSxhPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7ci5mPXQoIi4vX2Rlc2NyaXB0b3JzIik/YTpmdW5jdGlvbih0LGUpe2lmKHQ9aSh0KSxlPWMoZSwhMCksdSl0cnl7cmV0dXJuIGEodCxlKX1jYXRjaChyKXt9aWYocyh0LGUpKXJldHVybiBvKCFuLmYuY2FsbCh0LGUpLHRbZV0pfX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2hhcyI6MjgsIi4vX2llOC1kb20tZGVmaW5lIjozMSwiLi9fb2JqZWN0LXBpZSI6NTEsIi4vX3Byb3BlcnR5LWRlc2MiOjUzLCIuL190by1pb2JqZWN0Ijo2NiwiLi9fdG8tcHJpbWl0aXZlIjo2OX1dLDQ4OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faGFzIiksbz10KCIuL190by1vYmplY3QiKSxpPXQoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxjPU9iamVjdC5wcm90b3R5cGU7ZS5leHBvcnRzPU9iamVjdC5nZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCl7cmV0dXJuIHQ9byh0KSxuKHQsaSk/dFtpXToiZnVuY3Rpb24iPT10eXBlb2YgdC5jb25zdHJ1Y3RvciYmdCBpbnN0YW5jZW9mIHQuY29uc3RydWN0b3I/dC5jb25zdHJ1Y3Rvci5wcm90b3R5cGU6dCBpbnN0YW5jZW9mIE9iamVjdD9jOm51bGx9fSx7Ii4vX2hhcyI6MjgsIi4vX3NoYXJlZC1rZXkiOjU5LCIuL190by1vYmplY3QiOjY4fV0sNDk6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19oYXMiKSxvPXQoIi4vX3RvLWlvYmplY3QiKSxpPXQoIi4vX2FycmF5LWluY2x1ZGVzIikoITEpLGM9dCgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciByLHM9byh0KSx1PTAsYT1bXTtmb3IociBpbiBzKXIhPWMmJm4ocyxyKSYmYS5wdXNoKHIpO2Zvcig7ZS5sZW5ndGg+dTspbihzLHI9ZVt1KytdKSYmKH5pKGEscil8fGEucHVzaChyKSk7cmV0dXJuIGF9fSx7Ii4vX2FycmF5LWluY2x1ZGVzIjoxNSwiLi9faGFzIjoyOCwiLi9fc2hhcmVkLWtleSI6NTksIi4vX3RvLWlvYmplY3QiOjY2fV0sNTA6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCIpLG89dCgiLi9fZW51bS1idWcta2V5cyIpO2UuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7cmV0dXJuIG4odCxvKX19LHsiLi9fZW51bS1idWcta2V5cyI6MjMsIi4vX29iamVjdC1rZXlzLWludGVybmFsIjo0OX1dLDUxOltmdW5jdGlvbih0LGUscil7ci5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSx7fV0sNTI6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19leHBvcnQiKSxvPXQoIi4vX2NvcmUiKSxpPXQoIi4vX2ZhaWxzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIHI9KG8uT2JqZWN0fHx7fSlbdF18fE9iamVjdFt0XSxjPXt9O2NbdF09ZShyKSxuKG4uUytuLkYqaShmdW5jdGlvbigpe3IoMSl9KSwiT2JqZWN0IixjKX19LHsiLi9fY29yZSI6MTgsIi4vX2V4cG9ydCI6MjQsIi4vX2ZhaWxzIjoyNX1dLDUzOltmdW5jdGlvbih0LGUscil7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJue2VudW1lcmFibGU6ISgxJnQpLGNvbmZpZ3VyYWJsZTohKDImdCksd3JpdGFibGU6ISg0JnQpLHZhbHVlOmV9fX0se31dLDU0OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faGlkZSIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUscil7Zm9yKHZhciBvIGluIGUpciYmdFtvXT90W29dPWVbb106bih0LG8sZVtvXSk7cmV0dXJuIHR9fSx7Ii4vX2hpZGUiOjI5fV0sNTU6W2Z1bmN0aW9uKHQsZSxyKXtlLmV4cG9ydHM9dCgiLi9faGlkZSIpfSx7Ii4vX2hpZGUiOjI5fV0sNTY6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19pcy1vYmplY3QiKSxvPXQoIi4vX2FuLW9iamVjdCIpLGk9ZnVuY3Rpb24odCxlKXtpZihvKHQpLCFuKGUpJiZudWxsIT09ZSl0aHJvdyBUeXBlRXJyb3IoZSsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTtlLmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24oZSxyLG4pe3RyeXtuPXQoIi4vX2N0eCIpKEZ1bmN0aW9uLmNhbGwsdCgiLi9fb2JqZWN0LWdvcGQiKS5mKE9iamVjdC5wcm90b3R5cGUsIl9fcHJvdG9fXyIpLnNldCwyKSxuKGUsW10pLHI9IShlIGluc3RhbmNlb2YgQXJyYXkpfWNhdGNoKG8pe3I9ITB9cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkodCxlKSxyP3QuX19wcm90b19fPWU6bih0LGUpLHR9fSh7fSwhMSk6dm9pZCAwKSxjaGVjazppfX0seyIuL19hbi1vYmplY3QiOjE0LCIuL19jdHgiOjE5LCIuL19pcy1vYmplY3QiOjM1LCIuL19vYmplY3QtZ29wZCI6NDd9XSw1NzpbZnVuY3Rpb24odCxlLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj10KCIuL19nbG9iYWwiKSxvPXQoIi4vX2NvcmUiKSxpPXQoIi4vX29iamVjdC1kcCIpLGM9dCgiLi9fZGVzY3JpcHRvcnMiKSxzPXQoIi4vX3drcyIpKCJzcGVjaWVzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPSJmdW5jdGlvbiI9PXR5cGVvZiBvW3RdP29bdF06blt0XTtjJiZlJiYhZVtzXSYmaS5mKGUscyx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0seyIuL19jb3JlIjoxOCwiLi9fZGVzY3JpcHRvcnMiOjIxLCIuL19nbG9iYWwiOjI3LCIuL19vYmplY3QtZHAiOjQ1LCIuL193a3MiOjcxfV0sNTg6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19vYmplY3QtZHAiKS5mLG89dCgiLi9faGFzIiksaT10KCIuL193a3MiKSgidG9TdHJpbmdUYWciKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlLHIpe3QmJiFvKHQ9cj90OnQucHJvdG90eXBlLGkpJiZuKHQsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOmV9KX19LHsiLi9faGFzIjoyOCwiLi9fb2JqZWN0LWRwIjo0NSwiLi9fd2tzIjo3MX1dLDU5OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fc2hhcmVkIikoImtleXMiKSxvPXQoIi4vX3VpZCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gblt0XXx8KG5bdF09byh0KSl9fSx7Ii4vX3NoYXJlZCI6NjAsIi4vX3VpZCI6NzB9XSw2MDpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2dsb2JhbCIpLG89Il9fY29yZS1qc19zaGFyZWRfXyIsaT1uW29dfHwobltvXT17fSk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBpW3RdfHwoaVt0XT17fSl9fSx7Ii4vX2dsb2JhbCI6Mjd9XSw2MTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2FuLW9iamVjdCIpLG89dCgiLi9fYS1mdW5jdGlvbiIpLGk9dCgiLi9fd2tzIikoInNwZWNpZXMiKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt2YXIgcixjPW4odCkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PWN8fHZvaWQgMD09KHI9bihjKVtpXSk/ZTpvKHIpfX0seyIuL19hLWZ1bmN0aW9uIjoxMSwiLi9fYW4tb2JqZWN0IjoxNCwiLi9fd2tzIjo3MX1dLDYyOltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fdG8taW50ZWdlciIpLG89dCgiLi9fZGVmaW5lZCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxyKXt2YXIgaSxjLHM9U3RyaW5nKG8oZSkpLHU9bihyKSxhPXMubGVuZ3RoO3JldHVybiB1PDB8fHU+PWE/dD8iIjp2b2lkIDA6KGk9cy5jaGFyQ29kZUF0KHUpLGk8NTUyOTZ8fGk+NTYzMTl8fHUrMT09PWF8fChjPXMuY2hhckNvZGVBdCh1KzEpKTw1NjMyMHx8Yz41NzM0Mz90P3MuY2hhckF0KHUpOmk6dD9zLnNsaWNlKHUsdSsyKTooaS01NTI5Njw8MTApKyhjLTU2MzIwKSs2NTUzNil9fX0seyIuL19kZWZpbmVkIjoyMCwiLi9fdG8taW50ZWdlciI6NjV9XSw2MzpbZnVuY3Rpb24odCxlLHIpe3ZhciBuLG8saSxjPXQoIi4vX2N0eCIpLHM9dCgiLi9faW52b2tlIiksdT10KCIuL19odG1sIiksYT10KCIuL19kb20tY3JlYXRlIiksZj10KCIuL19nbG9iYWwiKSxfPWYucHJvY2VzcyxsPWYuc2V0SW1tZWRpYXRlLHA9Zi5jbGVhckltbWVkaWF0ZSxkPWYuTWVzc2FnZUNoYW5uZWwsaD0wLHY9e30sYj0ib25yZWFkeXN0YXRlY2hhbmdlIix5PWZ1bmN0aW9uKCl7dmFyIHQ9K3RoaXM7aWYodi5oYXNPd25Qcm9wZXJ0eSh0KSl7dmFyIGU9dlt0XTtkZWxldGUgdlt0XSxlKCl9fSxtPWZ1bmN0aW9uKHQpe3kuY2FsbCh0LmRhdGEpfTtsJiZwfHwobD1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspZS5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gdlsrK2hdPWZ1bmN0aW9uKCl7cygiZnVuY3Rpb24iPT10eXBlb2YgdD90OkZ1bmN0aW9uKHQpLGUpfSxuKGgpLGh9LHA9ZnVuY3Rpb24odCl7ZGVsZXRlIHZbdF19LCJwcm9jZXNzIj09dCgiLi9fY29mIikoXyk/bj1mdW5jdGlvbih0KXtfLm5leHRUaWNrKGMoeSx0LDEpKX06ZD8obz1uZXcgZCxpPW8ucG9ydDIsby5wb3J0MS5vbm1lc3NhZ2U9bSxuPWMoaS5wb3N0TWVzc2FnZSxpLDEpKTpmLmFkZEV2ZW50TGlzdGVuZXImJiJmdW5jdGlvbiI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIWYuaW1wb3J0U2NyaXB0cz8obj1mdW5jdGlvbih0KXtmLnBvc3RNZXNzYWdlKHQrIiIsIioiKX0sZi5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixtLCExKSk6bj1iIGluIGEoInNjcmlwdCIpP2Z1bmN0aW9uKHQpe3UuYXBwZW5kQ2hpbGQoYSgic2NyaXB0IikpW2JdPWZ1bmN0aW9uKCl7dS5yZW1vdmVDaGlsZCh0aGlzKSx5LmNhbGwodCl9fTpmdW5jdGlvbih0KXtzZXRUaW1lb3V0KGMoeSx0LDEpLDApfSksZS5leHBvcnRzPXtzZXQ6bCxjbGVhcjpwfX0seyIuL19jb2YiOjE3LCIuL19jdHgiOjE5LCIuL19kb20tY3JlYXRlIjoyMiwiLi9fZ2xvYmFsIjoyNywiLi9faHRtbCI6MzAsIi4vX2ludm9rZSI6MzJ9XSw2NDpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX3RvLWludGVnZXIiKSxvPU1hdGgubWF4LGk9TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9bih0KSx0PDA/byh0K2UsMCk6aSh0LGUpfX0seyIuL190by1pbnRlZ2VyIjo2NX1dLDY1OltmdW5jdGlvbih0LGUscil7dmFyIG49TWF0aC5jZWlsLG89TWF0aC5mbG9vcjtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGlzTmFOKHQ9K3QpPzA6KHQ+MD9vOm4pKHQpfX0se31dLDY2OltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9faW9iamVjdCIpLG89dCgiLi9fZGVmaW5lZCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gbihvKHQpKX19LHsiLi9fZGVmaW5lZCI6MjAsIi4vX2lvYmplY3QiOjMzfV0sNjc6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL190by1pbnRlZ2VyIiksbz1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ+MD9vKG4odCksOTAwNzE5OTI1NDc0MDk5MSk6MH19LHsiLi9fdG8taW50ZWdlciI6NjV9XSw2ODpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2RlZmluZWQiKTtlLmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChuKHQpKX19LHsiLi9fZGVmaW5lZCI6MjB9XSw2OTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX2lzLW9iamVjdCIpO2UuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2lmKCFuKHQpKXJldHVybiB0O3ZhciByLG87aWYoZSYmImZ1bmN0aW9uIj09dHlwZW9mKHI9dC50b1N0cmluZykmJiFuKG89ci5jYWxsKHQpKSlyZXR1cm4gbztpZigiZnVuY3Rpb24iPT10eXBlb2Yocj10LnZhbHVlT2YpJiYhbihvPXIuY2FsbCh0KSkpcmV0dXJuIG87aWYoIWUmJiJmdW5jdGlvbiI9PXR5cGVvZihyPXQudG9TdHJpbmcpJiYhbihvPXIuY2FsbCh0KSkpcmV0dXJuIG87dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LHsiLi9faXMtb2JqZWN0IjozNX1dLDcwOltmdW5jdGlvbih0LGUscil7dmFyIG49MCxvPU1hdGgucmFuZG9tKCk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiJTeW1ib2woIi5jb25jYXQodm9pZCAwPT09dD8iIjp0LCIpXyIsKCsrbitvKS50b1N0cmluZygzNikpfX0se31dLDcxOltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fc2hhcmVkIikoIndrcyIpLG89dCgiLi9fdWlkIiksaT10KCIuL19nbG9iYWwiKS5TeW1ib2wsYz0iZnVuY3Rpb24iPT10eXBlb2YgaSxzPWUuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gblt0XXx8KG5bdF09YyYmaVt0XXx8KGM/aTpvKSgiU3ltYm9sLiIrdCkpfTtzLnN0b3JlPW59LHsiLi9fZ2xvYmFsIjoyNywiLi9fc2hhcmVkIjo2MCwiLi9fdWlkIjo3MH1dLDcyOltmdW5jdGlvbih0LGUscil7dmFyIG49dCgiLi9fY2xhc3NvZiIpLG89dCgiLi9fd2tzIikoIml0ZXJhdG9yIiksaT10KCIuL19pdGVyYXRvcnMiKTtlLmV4cG9ydHM9dCgiLi9fY29yZSIpLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMCE9dClyZXR1cm4gdFtvXXx8dFsiQEBpdGVyYXRvciJdfHxpW24odCldfX0seyIuL19jbGFzc29mIjoxNiwiLi9fY29yZSI6MTgsIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX3drcyI6NzF9XSw3MzpbZnVuY3Rpb24odCxlLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj10KCIuL19hZGQtdG8tdW5zY29wYWJsZXMiKSxvPXQoIi4vX2l0ZXItc3RlcCIpLGk9dCgiLi9faXRlcmF0b3JzIiksYz10KCIuL190by1pb2JqZWN0Iik7ZS5leHBvcnRzPXQoIi4vX2l0ZXItZGVmaW5lIikoQXJyYXksIkFycmF5IixmdW5jdGlvbih0LGUpe3RoaXMuX3Q9Yyh0KSx0aGlzLl9pPTAsdGhpcy5faz1lfSxmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3QsZT10aGlzLl9rLHI9dGhpcy5faSsrO3JldHVybiF0fHxyPj10Lmxlbmd0aD8odGhpcy5fdD12b2lkIDAsbygxKSk6ImtleXMiPT1lP28oMCxyKToidmFsdWVzIj09ZT9vKDAsdFtyXSk6bygwLFtyLHRbcl1dKX0sInZhbHVlcyIpLGkuQXJndW1lbnRzPWkuQXJyYXksbigia2V5cyIpLG4oInZhbHVlcyIpLG4oImVudHJpZXMiKX0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjEyLCIuL19pdGVyLWRlZmluZSI6MzgsIi4vX2l0ZXItc3RlcCI6NDAsIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX3RvLWlvYmplY3QiOjY2fV0sNzQ6W2Z1bmN0aW9uKHQsZSxyKXt2YXIgbj10KCIuL19leHBvcnQiKTtuKG4uUytuLkYqIXQoIi4vX2Rlc2NyaXB0b3JzIiksIk9iamVjdCIse2RlZmluZVByb3BlcnR5OnQoIi4vX29iamVjdC1kcCIpLmZ9KX0seyIuL19kZXNjcmlwdG9ycyI6MjEsIi4vX2V4cG9ydCI6MjQsIi4vX29iamVjdC1kcCI6NDV9XSw3NTpbZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQoIi4vX3RvLW9iamVjdCIpLG89dCgiLi9fb2JqZWN0LWtleXMiKTt0KCIuL19vYmplY3Qtc2FwIikoImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBvKG4odCkpfX0pfSx7Ii4vX29iamVjdC1rZXlzIjo1MCwiLi9fb2JqZWN0LXNhcCI6NTIsIi4vX3RvLW9iamVjdCI6Njh9XSw3NjpbZnVuY3Rpb24odCxlLHIpe30se31dLDc3OltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO3ZhciBuLG8saSxjPXQoIi4vX2xpYnJhcnkiKSxzPXQoIi4vX2dsb2JhbCIpLHU9dCgiLi9fY3R4IiksYT10KCIuL19jbGFzc29mIiksZj10KCIuL19leHBvcnQiKSxfPXQoIi4vX2lzLW9iamVjdCIpLGw9KHQoIi4vX2FuLW9iamVjdCIpLHQoIi4vX2EtZnVuY3Rpb24iKSkscD10KCIuL19hbi1pbnN0YW5jZSIpLGQ9dCgiLi9fZm9yLW9mIiksaD0odCgiLi9fc2V0LXByb3RvIikuc2V0LHQoIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiKSksdj10KCIuL190YXNrIikuc2V0LGI9dCgiLi9fbWljcm90YXNrIikoKSx5PSJQcm9taXNlIixtPXMuVHlwZUVycm9yLGo9cy5wcm9jZXNzLGc9c1t5XSxqPXMucHJvY2Vzcyx4PSJwcm9jZXNzIj09YShqKSx3PWZ1bmN0aW9uKCl7fSxrPSEhZnVuY3Rpb24oKXt0cnl7dmFyIGU9Zy5yZXNvbHZlKDEpLHI9KGUuY29uc3RydWN0b3I9e30pW3QoIi4vX3drcyIpKCJzcGVjaWVzIildPWZ1bmN0aW9uKHQpe3Qodyx3KX07cmV0dXJuKHh8fCJmdW5jdGlvbiI9PXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpJiZlLnRoZW4odylpbnN0YW5jZW9mIHJ9Y2F0Y2gobil7fX0oKSxPPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9PT1lfHx0PT09ZyYmZT09PWl9LE09ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuISghXyh0KXx8ImZ1bmN0aW9uIiE9dHlwZW9mKGU9dC50aGVuKSkmJmV9LFM9ZnVuY3Rpb24odCl7cmV0dXJuIE8oZyx0KT9uZXcgRSh0KTpuZXcgbyh0KX0sRT1vPWZ1bmN0aW9uKHQpe3ZhciBlLHI7dGhpcy5wcm9taXNlPW5ldyB0KGZ1bmN0aW9uKHQsbil7aWYodm9pZCAwIT09ZXx8dm9pZCAwIT09cil0aHJvdyBtKCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvciIpO2U9dCxyPW59KSx0aGlzLnJlc29sdmU9bChlKSx0aGlzLnJlamVjdD1sKHIpfSxQPWZ1bmN0aW9uKHQpe3RyeXt0KCl9Y2F0Y2goZSl7cmV0dXJue2Vycm9yOmV9fX0sVD1mdW5jdGlvbih0LGUpe2lmKCF0Ll9uKXt0Ll9uPSEwO3ZhciByPXQuX2M7YihmdW5jdGlvbigpe2Zvcih2YXIgbj10Ll92LG89MT09dC5fcyxpPTAsYz1mdW5jdGlvbihlKXt2YXIgcixpLGM9bz9lLm9rOmUuZmFpbCxzPWUucmVzb2x2ZSx1PWUucmVqZWN0LGE9ZS5kb21haW47dHJ5e2M/KG98fCgyPT10Ll9oJiZBKHQpLHQuX2g9MSksYz09PSEwP3I9bjooYSYmYS5lbnRlcigpLHI9YyhuKSxhJiZhLmV4aXQoKSkscj09PWUucHJvbWlzZT91KG0oIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KGk9TShyKSk/aS5jYWxsKHIscyx1KTpzKHIpKTp1KG4pfWNhdGNoKGYpe3UoZil9fTtyLmxlbmd0aD5pOyljKHJbaSsrXSk7dC5fYz1bXSx0Ll9uPSExLGUmJiF0Ll9oJiZSKHQpfSl9fSxSPWZ1bmN0aW9uKHQpe3YuY2FsbChzLGZ1bmN0aW9uKCl7dmFyIGUscixuLG89dC5fdjtpZihVKHQpJiYoZT1QKGZ1bmN0aW9uKCl7eD9qLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbyx0KToocj1zLm9udW5oYW5kbGVkcmVqZWN0aW9uKT9yKHtwcm9taXNlOnQscmVhc29uOm99KToobj1zLmNvbnNvbGUpJiZuLmVycm9yJiZuLmVycm9yKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLG8pfSksdC5faD14fHxVKHQpPzI6MSksdC5fYT12b2lkIDAsZSl0aHJvdyBlLmVycm9yfSl9LFU9ZnVuY3Rpb24odCl7aWYoMT09dC5faClyZXR1cm4hMTtmb3IodmFyIGUscj10Ll9hfHx0Ll9jLG49MDtyLmxlbmd0aD5uOylpZihlPXJbbisrXSxlLmZhaWx8fCFVKGUucHJvbWlzZSkpcmV0dXJuITE7cmV0dXJuITB9LEE9ZnVuY3Rpb24odCl7di5jYWxsKHMsZnVuY3Rpb24oKXt2YXIgZTt4P2ouZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsdCk6KGU9cy5vbnJlamVjdGlvbmhhbmRsZWQpJiZlKHtwcm9taXNlOnQscmVhc29uOnQuX3Z9KX0pfSxMPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5fZHx8KGUuX2Q9ITAsZT1lLl93fHxlLGUuX3Y9dCxlLl9zPTIsZS5fYXx8KGUuX2E9ZS5fYy5zbGljZSgpKSxUKGUsITApKX0sQz1mdW5jdGlvbih0KXt2YXIgZSxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09dCl0aHJvdyBtKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyhlPU0odCkpP2IoZnVuY3Rpb24oKXt2YXIgbj17X3c6cixfZDohMX07dHJ5e2UuY2FsbCh0LHUoQyxuLDEpLHUoTCxuLDEpKX1jYXRjaChvKXtMLmNhbGwobixvKX19KTooci5fdj10LHIuX3M9MSxUKHIsITEpKX1jYXRjaChuKXtMLmNhbGwoe193OnIsX2Q6ITF9LG4pfX19O2t8fChnPWZ1bmN0aW9uKHQpe3AodGhpcyxnLHksIl9oIiksbCh0KSxuLmNhbGwodGhpcyk7dHJ5e3QodShDLHRoaXMsMSksdShMLHRoaXMsMSkpfWNhdGNoKGUpe0wuY2FsbCh0aGlzLGUpfX0sbj1mdW5jdGlvbih0KXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSxuLnByb3RvdHlwZT10KCIuL19yZWRlZmluZS1hbGwiKShnLnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbih0LGUpe3ZhciByPVMoaCh0aGlzLGcpKTtyZXR1cm4gci5vaz0iZnVuY3Rpb24iIT10eXBlb2YgdHx8dCxyLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIGUmJmUsci5kb21haW49eD9qLmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKHIpLHRoaXMuX2EmJnRoaXMuX2EucHVzaChyKSx0aGlzLl9zJiZUKHRoaXMsITEpLHIucHJvbWlzZX0sImNhdGNoIjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCx0KX19KSxFPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IG47dGhpcy5wcm9taXNlPXQsdGhpcy5yZXNvbHZlPXUoQyx0LDEpLHRoaXMucmVqZWN0PXUoTCx0LDEpfSksZihmLkcrZi5XK2YuRiohayx7UHJvbWlzZTpnfSksdCgiLi9fc2V0LXRvLXN0cmluZy10YWciKShnLHkpLHQoIi4vX3NldC1zcGVjaWVzIikoeSksaT10KCIuL19jb3JlIilbeV0sZihmLlMrZi5GKiFrLHkse3JlamVjdDpmdW5jdGlvbih0KXt2YXIgZT1TKHRoaXMpLHI9ZS5yZWplY3Q7cmV0dXJuIHIodCksZS5wcm9taXNlfX0pLGYoZi5TK2YuRiooY3x8IWspLHkse3Jlc29sdmU6ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIGcmJk8odC5jb25zdHJ1Y3Rvcix0aGlzKSlyZXR1cm4gdDt2YXIgZT1TKHRoaXMpLHI9ZS5yZXNvbHZlO3JldHVybiByKHQpLGUucHJvbWlzZX19KSxmKGYuUytmLkYqIShrJiZ0KCIuL19pdGVyLWRldGVjdCIpKGZ1bmN0aW9uKHQpe2cuYWxsKHQpWyJjYXRjaCJdKHcpfSkpLHkse2FsbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLHI9UyhlKSxuPXIucmVzb2x2ZSxvPXIucmVqZWN0LGk9UChmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxjPTE7ZCh0LCExLGZ1bmN0aW9uKHQpe3ZhciBzPWkrKyx1PSExO3IucHVzaCh2b2lkIDApLGMrKyxlLnJlc29sdmUodCkudGhlbihmdW5jdGlvbih0KXt1fHwodT0hMCxyW3NdPXQsLS1jfHxuKHIpKX0sbyl9KSwtLWN8fG4ocil9KTtyZXR1cm4gaSYmbyhpLmVycm9yKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxyPVMoZSksbj1yLnJlamVjdCxvPVAoZnVuY3Rpb24oKXtkKHQsITEsZnVuY3Rpb24odCl7ZS5yZXNvbHZlKHQpLnRoZW4oci5yZXNvbHZlLG4pfSl9KTtyZXR1cm4gbyYmbihvLmVycm9yKSxyLnByb21pc2V9fSl9LHsiLi9fYS1mdW5jdGlvbiI6MTEsIi4vX2FuLWluc3RhbmNlIjoxMywiLi9fYW4tb2JqZWN0IjoxNCwiLi9fY2xhc3NvZiI6MTYsIi4vX2NvcmUiOjE4LCIuL19jdHgiOjE5LCIuL19leHBvcnQiOjI0LCIuL19mb3Itb2YiOjI2LCIuL19nbG9iYWwiOjI3LCIuL19pcy1vYmplY3QiOjM1LCIuL19pdGVyLWRldGVjdCI6MzksIi4vX2xpYnJhcnkiOjQyLCIuL19taWNyb3Rhc2siOjQzLCIuL19yZWRlZmluZS1hbGwiOjU0LCIuL19zZXQtcHJvdG8iOjU2LCIuL19zZXQtc3BlY2llcyI6NTcsIi4vX3NldC10by1zdHJpbmctdGFnIjo1OCwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6NjEsIi4vX3Rhc2siOjYzLCIuL193a3MiOjcxfV0sNzg6W2Z1bmN0aW9uKHQsZSxyKXsidXNlIHN0cmljdCI7dmFyIG49dCgiLi9fc3RyaW5nLWF0IikoITApO3QoIi4vX2l0ZXItZGVmaW5lIikoU3RyaW5nLCJTdHJpbmciLGZ1bmN0aW9uKHQpe3RoaXMuX3Q9U3RyaW5nKHQpLHRoaXMuX2k9MH0sZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuX3Qscj10aGlzLl9pO3JldHVybiByPj1lLmxlbmd0aD97dmFsdWU6dm9pZCAwLGRvbmU6ITB9Oih0PW4oZSxyKSx0aGlzLl9pKz10Lmxlbmd0aCx7dmFsdWU6dCxkb25lOiExfSl9KX0seyIuL19pdGVyLWRlZmluZSI6MzgsIi4vX3N0cmluZy1hdCI6NjJ9XSw3OTpbZnVuY3Rpb24odCxlLHIpe3QoIi4vZXM2LmFycmF5Lml0ZXJhdG9yIik7Zm9yKHZhciBuPXQoIi4vX2dsb2JhbCIpLG89dCgiLi9faGlkZSIpLGk9dCgiLi9faXRlcmF0b3JzIiksYz10KCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxzPVsiTm9kZUxpc3QiLCJET01Ub2tlbkxpc3QiLCJNZWRpYUxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIkNTU1J1bGVMaXN0Il0sdT0wO3U8NTt1Kyspe3ZhciBhPXNbdV0sZj1uW2FdLF89ZiYmZi5wcm90b3R5cGU7XyYmIV9bY10mJm8oXyxjLGEpLGlbYV09aS5BcnJheX19LHsiLi9fZ2xvYmFsIjoyNywiLi9faGlkZSI6MjksIi4vX2l0ZXJhdG9ycyI6NDEsIi4vX3drcyI6NzEsIi4vZXM2LmFycmF5Lml0ZXJhdG9yIjo3M31dLDgwOltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OnsiZGVmYXVsdCI6dH19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPXQoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1uKG8pLGM9dCgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIikscz1uKGMpLHU9dCgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksYT1uKHUpLGY9dCgiLi4vdXRpbHMvdXRpbHMiKSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlLHIsbil7KDAsc1siZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBvPXRoaXM7by5tZXNzYWdlQnVzPW4sby5kb21haW49KDAsZi5kaXZpZGVVUkwpKGUpLmRvbWFpbixvLmh5cGVydHlVUkw9ZSxvLnJ1bnRpbWVVUkw9cn1yZXR1cm4oMCxhWyJkZWZhdWx0Il0pKHQsW3trZXk6ImRpc2NvdmVyVXNlclJlZ2lzdGVyZWQiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcyxuPXZvaWQgMCxvPXQ/dDoiLiI7bj1lP2U6ci5oeXBlcnR5VVJMO3ZhciBjPXt0eXBlOiJyZWFkIixmcm9tOm4sdG86ci5ydW50aW1lVVJMKyIvcmVnaXN0cnkvIixib2R5OntyZXNvdXJjZTpvLGNyaXRlcmlhOm59fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbih0LGUpe3IubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKHIpe3ZhciBuPXIuYm9keS5yZXNvdXJjZTtuJiYyMDA9PT1yLmJvZHkuY29kZT90KG4pOmUoImNvZGU6ICIrci5ib2R5LmNvZGUrIiBObyB1c2VyIHdhcyBub3QgZm91bmQiKX0pfSl9fV0pLHR9KCk7clsiZGVmYXVsdCJdPV8sZS5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuLi91dGlscy91dGlscyI6ODEsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo0LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6Nn1dLDgxOltmdW5jdGlvbih0LGUscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OnsiZGVmYXVsdCI6dH19ZnVuY3Rpb24gbyh0KXtpZighdCl0aHJvdyBFcnJvcigiVVJMIGlzIG5lZWRlZCB0byBzcGxpdCIpO3ZhciBlPS8oW2EtekEtWi1dKik6XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn0pKFstYS16QS1aMC05QDolLl9cK34jPVwvXSopL2dpLHI9IiQxLCQyLCQzIixuPXQucmVwbGFjZShlLHIpLnNwbGl0KCIsIik7blswXT09PXQmJihuWzBdPSJodHRwcyIsblsxXT10KTt2YXIgbz17dHlwZTpuWzBdLGRvbWFpbjpuWzFdLGlkZW50aXR5Om5bMl19O3JldHVybiBvfWZ1bmN0aW9uIGkodCl7dmFyIGU9dC5pbmRleE9mKCJAIikscj17dXNlcm5hbWU6dC5zdWJzdHJpbmcoMCxlKSxkb21haW46dC5zdWJzdHJpbmcoZSsxLHQubGVuZ3RoKX07cmV0dXJuIHJ9ZnVuY3Rpb24gYyh0KXtyZXR1cm4hKCgwLGRbImRlZmF1bHQiXSkodCkubGVuZ3RoPjApfWZ1bmN0aW9uIHModCl7aWYodClyZXR1cm4gSlNPTi5wYXJzZSgoMCxsWyJkZWZhdWx0Il0pKHQpKX1mdW5jdGlvbiB1KHQpe3ZhciBlPXQuaW5kZXhPZigiQCIpO3JldHVybiJ1c2VyOi8vIit0LnN1YnN0cmluZyhlKzEsdC5sZW5ndGgpKyIvIit0LnN1YnN0cmluZygwLGUpfWZ1bmN0aW9uIGEodCl7dmFyIGU9byh0KTtyZXR1cm4gZS5pZGVudGl0eS5yZXBsYWNlKCIvIiwiIikrIkAiK2UuZG9tYWlufWZ1bmN0aW9uIGYodCl7aWYoInVzZXI6Ly8iPT09dC5zdWJzdHJpbmcoMCw3KSl7dmFyIGU9byh0KTtpZihlLmRvbWFpbiYmZS5pZGVudGl0eSlyZXR1cm4gdDt0aHJvdyJ1c2VyVVJMIHdpdGggd3JvbmcgZm9ybWF0In1yZXR1cm4gdSh0KX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIF89dCgiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IiksbD1uKF8pLHA9dCgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksZD1uKHApO3IuZGl2aWRlVVJMPW8sci5kaXZpZGVFbWFpbD1pLHIuZW1wdHlPYmplY3Q9YyxyLmRlZXBDbG9uZT1zLHIuZ2V0VXNlclVSTEZyb21FbWFpbD11LHIuZ2V0VXNlckVtYWlsRnJvbVVSTD1hLHIuY29udmVydFRvVXNlclVSTD1mfSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSI6MSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjozfV19LHt9LFs4MF0pKDgwKX0pOw0KDQoKfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pCn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewooZnVuY3Rpb24gKGdsb2JhbCl7Ci8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLw0KDQovLyBEaXN0cmlidXRpb24gZmlsZSBmb3IgU3luY2hlci5qcyANCi8vIHZlcnNpb246IDAuMy4wDQovLyBMYXN0IGJ1aWxkOiBUaHUgSnVsIDIxIDIwMTYgMTU6MzE6MzIgR01UKzAxMDAgKFdFU1QpDQoNCiFmdW5jdGlvbihlKXtpZigib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlKW1vZHVsZS5leHBvcnRzPWUoKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7dmFyIHQ7dD0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsdC5TeW5jaGVyPWUoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG8pe2Z1bmN0aW9uIG4ocyxjKXtpZighcltzXSl7aWYoIXRbc10pe3ZhciBhPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFjJiZhKXJldHVybiBhKHMsITApO2lmKGkpcmV0dXJuIGkocywhMCk7dmFyIHU9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrcysiJyIpO3Rocm93IHUuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsdX12YXIgbD1yW3NdPXtleHBvcnRzOnt9fTt0W3NdWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciByPXRbc11bMV1bZV07cmV0dXJuIG4ocj9yOmUpfSxsLGwuZXhwb3J0cyxlLHQscixvKX1yZXR1cm4gcltzXS5leHBvcnRzfWZvcih2YXIgaT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxzPTA7czxvLmxlbmd0aDtzKyspbihvW3NdKTtyZXR1cm4gbn0oezE6W2Z1bmN0aW9uKGUsdCxyKXtPYmplY3Qub2JzZXJ2ZSYmIUFycmF5Lm9ic2VydmUmJmZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciByPWUuZ2V0Tm90aWZpZXIsbz0icGVyZm9ybUNoYW5nZSIsbj0iX29yaWdpbmFsIixpPSJzcGxpY2UiLHM9e3B1c2g6ZnVuY3Rpb24gYShlKXt2YXIgdD1hcmd1bWVudHMscz1hW25dLmFwcGx5KHRoaXMsdCk7cmV0dXJuIHIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDpzLXQubGVuZ3RoLGFkZGVkQ291bnQ6dC5sZW5ndGgscmVtb3ZlZDpbXX19KSxzfSx1bnNoaWZ0OmZ1bmN0aW9uIHUoZSl7dmFyIHQ9YXJndW1lbnRzLHM9dVtuXS5hcHBseSh0aGlzLHQpO3JldHVybiByKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6MCxhZGRlZENvdW50OnQubGVuZ3RoLHJlbW92ZWQ6W119fSksc30scG9wOmZ1bmN0aW9uIGwoKXt2YXIgZT10aGlzLmxlbmd0aCx0PWxbbl0uY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5sZW5ndGghPT1lJiZyKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6dGhpcy5sZW5ndGgsYWRkZWRDb3VudDowLHJlbW92ZWQ6W3RdfX0sdGhpcyksdH0sc2hpZnQ6ZnVuY3Rpb24gZigpe3ZhciBlPXRoaXMubGVuZ3RoLHQ9ZltuXS5jYWxsKHRoaXMpO3JldHVybiB0aGlzLmxlbmd0aCE9PWUmJnIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDowLGFkZGVkQ291bnQ6MCxyZW1vdmVkOlt0XX19LHRoaXMpLHR9LHNwbGljZTpmdW5jdGlvbiBkKGUsdCl7dmFyIHM9YXJndW1lbnRzLGM9ZFtuXS5hcHBseSh0aGlzLHMpO3JldHVybihjLmxlbmd0aHx8cy5sZW5ndGg+MikmJnIodGhpcylbb10oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDplLGFkZGVkQ291bnQ6cy5sZW5ndGgtMixyZW1vdmVkOmN9fSx0aGlzKSxjfX07Zm9yKHZhciBjIGluIHMpc1tjXVtuXT10LnByb3RvdHlwZVtjXSx0LnByb3RvdHlwZVtjXT1zW2NdO3Qub2JzZXJ2ZT1mdW5jdGlvbih0LHIpe3JldHVybiBlLm9ic2VydmUodCxyLFsiYWRkIiwidXBkYXRlIiwiZGVsZXRlIixpXSl9LHQudW5vYnNlcnZlPWUudW5vYnNlcnZlfShPYmplY3QsQXJyYXkpfSx7fV0sMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSI6MTh9XSwzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZSI6MTl9XSw0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6MjB9XSw1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6MjF9XSw2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjoyMn1dLDc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiOjIzfV0sODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6MjR9XSw5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MjV9XSwxMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sIjoyNn1dLDExOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvciIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IiOjI3fV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ci5fX2VzTW9kdWxlPSEwLHJbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0se31dLDEzOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLGk9byhuKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPXRbcl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG8mJihvLndyaXRhYmxlPSEwKSwoMCxpWyJkZWZhdWx0Il0pKGUsby5rZXksbyl9fXJldHVybiBmdW5jdGlvbih0LHIsbyl7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbyYmZSh0LG8pLHR9fSgpfSx7Ii4uL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6NH1dLDE0OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxpPW8obikscz1lKCIuLi9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxjPW8ocyk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uIGEoZSx0LHIpe251bGw9PT1lJiYoZT1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBvPSgwLGNbImRlZmF1bHQiXSkoZSx0KTtpZih2b2lkIDA9PT1vKXt2YXIgbj0oMCxpWyJkZWZhdWx0Il0pKGUpO3JldHVybiBudWxsPT09bj92b2lkIDA6YShuLHQscil9aWYoInZhbHVlImluIG8pcmV0dXJuIG8udmFsdWU7dmFyIHM9by5nZXQ7aWYodm9pZCAwIT09cylyZXR1cm4gcy5jYWxsKHIpfX0seyIuLi9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjUsIi4uL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjZ9XSwxNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIiksaT1vKG4pLHM9ZSgiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlIiksYz1vKHMpLGE9ZSgiLi4vaGVscGVycy90eXBlb2YiKSx1PW8oYSk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgIisoInVuZGVmaW5lZCI9PXR5cGVvZiB0PyJ1bmRlZmluZWQiOigwLHVbImRlZmF1bHQiXSkodCkpKTtlLnByb3RvdHlwZT0oMCxjWyJkZWZhdWx0Il0pKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoaVsiZGVmYXVsdCJdPygwLGlbImRlZmF1bHQiXSkoZSx0KTplLl9fcHJvdG9fXz10KX19LHsiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlIjozLCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIjo4LCIuLi9oZWxwZXJzL3R5cGVvZiI6MTd9XSwxNjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9oZWxwZXJzL3R5cGVvZiIpLGk9byhuKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpO3JldHVybiF0fHwib2JqZWN0IiE9PSgidW5kZWZpbmVkIj09dHlwZW9mIHQ/InVuZGVmaW5lZCI6KDAsaVsiZGVmYXVsdCJdKSh0KSkmJiJmdW5jdGlvbiIhPXR5cGVvZiB0P2U6dH19LHsiLi4vaGVscGVycy90eXBlb2YiOjE3fV0sMTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG49ZSgiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiKSxpPW8obikscz1lKCIuLi9jb3JlLWpzL3N5bWJvbCIpLGM9byhzKSxhPSJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJiJzeW1ib2wiPT10eXBlb2YgaVsiZGVmYXVsdCJdP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJmUuY29uc3RydWN0b3I9PT1jWyJkZWZhdWx0Il0/InN5bWJvbCI6dHlwZW9mIGV9O3JbImRlZmF1bHQiXT0iZnVuY3Rpb24iPT10eXBlb2YgY1siZGVmYXVsdCJdJiYic3ltYm9sIj09PWEoaVsiZGVmYXVsdCJdKT9mdW5jdGlvbihlKXtyZXR1cm4idW5kZWZpbmVkIj09dHlwZW9mIGU/InVuZGVmaW5lZCI6YShlKX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJmUuY29uc3RydWN0b3I9PT1jWyJkZWZhdWx0Il0/InN5bWJvbCI6InVuZGVmaW5lZCI9PXR5cGVvZiBlPyJ1bmRlZmluZWQiOmEoZSl9fSx7Ii4uL2NvcmUtanMvc3ltYm9sIjoxMCwiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiOjExfV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIiksbj1vLkpTT058fChvLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbi5zdHJpbmdpZnkuYXBwbHkobixhcmd1bWVudHMpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNX1dLDE5OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZSIpO3ZhciBvPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uY3JlYXRlKGUsdCl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlIjoxMDB9XSwyMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiKTt2YXIgbz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7cmV0dXJuIG8uZGVmaW5lUHJvcGVydHkoZSx0LHIpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSI6MTAxfV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIik7dmFyIG89ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjEwMn1dLDIyOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5nZXRQcm90b3R5cGVPZn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiOjEwM31dLDIzOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5rZXlzfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI6MTA0fV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LnNldFByb3RvdHlwZU9mfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiI6MTA1fV0sMjU6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksZSgiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksZSgiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksZSgiLi4vbW9kdWxlcy9lczYucHJvbWlzZSIpLHQuZXhwb3J0cz1lKCIuLi9tb2R1bGVzL19jb3JlIikuUHJvbWlzZX0seyIuLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyI6MTA2LCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIjoxMDcsIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTA4LCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjExMn1dLDI2OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIiksZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciIpLGUoIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5TeW1ib2x9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjEwNiwiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIjoxMDksIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciI6MTEwLCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZSI6MTExfV0sMjc6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiKSxlKCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCIpLmYoIml0ZXJhdG9yIil9LHsiLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCI6OTYsIi4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTA4LCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjExMn1dLDI4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMzA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbyl7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW8mJm8gaW4gZSl0aHJvdyBUeXBlRXJyb3IocisiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiKTtyZXR1cm4gZX19LHt9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbyhlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGV9fSx7Ii4vX2lzLW9iamVjdCI6NTR9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWlvYmplY3QiKSxuPWUoIi4vX3RvLWxlbmd0aCIpLGk9ZSgiLi9fdG8taW5kZXgiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscixzKXt2YXIgYyxhPW8odCksdT1uKGEubGVuZ3RoKSxsPWkocyx1KTtpZihlJiZyIT1yKXtmb3IoO3U+bDspaWYoYz1hW2wrK10sYyE9YylyZXR1cm4hMH1lbHNlIGZvcig7dT5sO2wrKylpZigoZXx8bCBpbiBhKSYmYVtsXT09PXIpcmV0dXJuIGV8fGx8fDA7cmV0dXJuIWUmJi0xfX19LHsiLi9fdG8taW5kZXgiOjg4LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tbGVuZ3RoIjo5MX1dLDMzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fY29mIiksbj1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1vKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSkscz1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChyKXt9fTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixjO3JldHVybiB2b2lkIDA9PT1lPyJVbmRlZmluZWQiOm51bGw9PT1lPyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9cyh0PU9iamVjdChlKSxuKSk/cjppP28odCk6Ik9iamVjdCI9PShjPW8odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6Y319LHsiLi9fY29mIjozNCwiLi9fd2tzIjo5N31dLDM0OltmdW5jdGlvbihlLHQscil7dmFyIG89e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz10LmV4cG9ydHM9e3ZlcnNpb246IjIuNC4wIn07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9byl9LHt9XSwzNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2EtZnVuY3Rpb24iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG8oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixvKXtyZXR1cm4gZS5jYWxsKHQscixvKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG8sbil7cmV0dXJuIGUuY2FsbCh0LHIsbyxuKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LHsiLi9fYS1mdW5jdGlvbiI6Mjh9XSwzNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZih2b2lkIDA9PWUpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIitlKTtyZXR1cm4gZX19LHt9XSwzODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZmFpbHMiOjQzfV0sMzk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pcy1vYmplY3QiKSxuPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50LGk9byhuKSYmbyhuLmNyZWF0ZUVsZW1lbnQpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9uLmNyZWF0ZUVsZW1lbnQoZSk6e319fSx7Ii4vX2dsb2JhbCI6NDUsIi4vX2lzLW9iamVjdCI6NTR9XSw0MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSx7fV0sNDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cyIpLG49ZSgiLi9fb2JqZWN0LWdvcHMiKSxpPWUoIi4vX29iamVjdC1waWUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9byhlKSxyPW4uZjtpZihyKWZvcih2YXIgcyxjPXIoZSksYT1pLmYsdT0wO2MubGVuZ3RoPnU7KWEuY2FsbChlLHM9Y1t1KytdKSYmdC5wdXNoKHMpO3JldHVybiB0fX0seyIuL19vYmplY3QtZ29wcyI6NzEsIi4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXBpZSI6NzV9XSw0MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9fY29yZSIpLGk9ZSgiLi9fY3R4Iikscz1lKCIuL19oaWRlIiksYz0icHJvdG90eXBlIixhPWZ1bmN0aW9uKGUsdCxyKXt2YXIgdSxsLGYsZD1lJmEuRixfPWUmYS5HLHA9ZSZhLlMsYj1lJmEuUCxoPWUmYS5CLHk9ZSZhLlcsdj1fP246blt0XXx8KG5bdF09e30pLGo9dltjXSxtPV8/bzpwP29bdF06KG9bdF18fHt9KVtjXTtfJiYocj10KTtmb3IodSBpbiByKWw9IWQmJm0mJnZvaWQgMCE9PW1bdV0sbCYmdSBpbiB2fHwoZj1sP21bdV06clt1XSx2W3VdPV8mJiJmdW5jdGlvbiIhPXR5cGVvZiBtW3VdP3JbdV06aCYmbD9pKGYsbyk6eSYmbVt1XT09Zj9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LHIsbyl7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LHIpfXJldHVybiBuZXcgZSh0LHIsbyl9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdFtjXT1lW2NdLHR9KGYpOmImJiJmdW5jdGlvbiI9PXR5cGVvZiBmP2koRnVuY3Rpb24uY2FsbCxmKTpmLGImJigodi52aXJ0dWFsfHwodi52aXJ0dWFsPXt9KSlbdV09ZixlJmEuUiYmaiYmIWpbdV0mJnMoaix1LGYpKSl9O2EuRj0xLGEuRz0yLGEuUz00LGEuUD04LGEuQj0xNixhLlc9MzIsYS5VPTY0LGEuUj0xMjgsdC5leHBvcnRzPWF9LHsiLi9fY29yZSI6MzUsIi4vX2N0eCI6MzYsIi4vX2dsb2JhbCI6NDUsIi4vX2hpZGUiOjQ3fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKHQpe3JldHVybiEwfX19LHt9XSw0NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2N0eCIpLG49ZSgiLi9faXRlci1jYWxsIiksaT1lKCIuL19pcy1hcnJheS1pdGVyIikscz1lKCIuL19hbi1vYmplY3QiKSxjPWUoIi4vX3RvLWxlbmd0aCIpLGE9ZSgiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiKSx1PXt9LGw9e30scj10LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsZixkKXt2YXIgXyxwLGIsaCx5PWQ/ZnVuY3Rpb24oKXtyZXR1cm4gZX06YShlKSx2PW8ocixmLHQ/MjoxKSxqPTA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgaXRlcmFibGUhIik7aWYoaSh5KSl7Zm9yKF89YyhlLmxlbmd0aCk7Xz5qO2orKylpZihoPXQ/dihzKHA9ZVtqXSlbMF0scFsxXSk6dihlW2pdKSxoPT09dXx8aD09PWwpcmV0dXJuIGh9ZWxzZSBmb3IoYj15LmNhbGwoZSk7IShwPWIubmV4dCgpKS5kb25lOylpZihoPW4oYix2LHAudmFsdWUsdCksaD09PXV8fGg9PT1sKXJldHVybiBofTtyLkJSRUFLPXUsci5SRVRVUk49bH0seyIuL19hbi1vYmplY3QiOjMxLCIuL19jdHgiOjM2LCIuL19pcy1hcnJheS1pdGVyIjo1MiwiLi9faXRlci1jYWxsIjo1NSwiLi9fdG8tbGVuZ3RoIjo5MSwiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiOjk4fV0sNDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz10LmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9byl9LHt9XSw0NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXt9Lmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBvLmNhbGwoZSx0KX19LHt9XSw0NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1kcCIpLG49ZSgiLi9fcHJvcGVydHktZGVzYyIpO3QuZXhwb3J0cz1lKCIuL19kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gby5mKGUsdCxuKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX29iamVjdC1kcCI6NjYsIi4vX3Byb3BlcnR5LWRlc2MiOjc3fV0sNDg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZSgiLi9fZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuL19nbG9iYWwiOjQ1fV0sNDk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9IWUoIi4vX2Rlc2NyaXB0b3JzIikmJiFlKCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShlKCIuL19kb20tY3JlYXRlIikoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2ZhaWxzIjo0M31dLDUwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbz12b2lkIDA9PT1yO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBvP2UoKTplLmNhbGwocik7Y2FzZSAxOnJldHVybiBvP2UodFswXSk6ZS5jYWxsKHIsdFswXSk7Y2FzZSAyOnJldHVybiBvP2UodFswXSx0WzFdKTplLmNhbGwocix0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gbz9lKHRbMF0sdFsxXSx0WzJdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBvP2UodFswXSx0WzFdLHRbMl0sdFszXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0sdFszXSl9cmV0dXJuIGUuYXBwbHkocix0KX19LHt9XSw1MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NvZiIpO3QuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIlN0cmluZyI9PW8oZSk/ZS5zcGxpdCgiIik6T2JqZWN0KGUpfX0seyIuL19jb2YiOjM0fV0sNTI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pdGVyYXRvcnMiKSxuPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9QXJyYXkucHJvdG90eXBlO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmKG8uQXJyYXk9PT1lfHxpW25dPT09ZSl9fSx7Ii4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTd9XSw1MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NvZiIpO3QuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4iQXJyYXkiPT1vKGUpfX0seyIuL19jb2YiOjM0fV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0se31dLDU1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fYW4tb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG4pe3RyeXtyZXR1cm4gbj90KG8ocilbMF0sclsxXSk6dChyKX1jYXRjaChpKXt2YXIgcz1lWyJyZXR1cm4iXTt0aHJvdyB2b2lkIDAhPT1zJiZvKHMuY2FsbChlKSksaX19fSx7Ii4vX2FuLW9iamVjdCI6MzF9XSw1NjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCIuL19vYmplY3QtY3JlYXRlIiksbj1lKCIuL19wcm9wZXJ0eS1kZXNjIiksaT1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLHM9e307ZSgiLi9faGlkZSIpKHMsZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9byhzLHtuZXh0Om4oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LHsiLi9faGlkZSI6NDcsIi4vX29iamVjdC1jcmVhdGUiOjY1LCIuL19wcm9wZXJ0eS1kZXNjIjo3NywiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL193a3MiOjk3fV0sNTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fbGlicmFyeSIpLG49ZSgiLi9fZXhwb3J0IiksaT1lKCIuL19yZWRlZmluZSIpLHM9ZSgiLi9faGlkZSIpLGM9ZSgiLi9faGFzIiksYT1lKCIuL19pdGVyYXRvcnMiKSx1PWUoIi4vX2l0ZXItY3JlYXRlIiksbD1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLGY9ZSgiLi9fb2JqZWN0LWdwbyIpLGQ9ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksXz0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxwPSJAQGl0ZXJhdG9yIixiPSJrZXlzIixoPSJ2YWx1ZXMiLHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLHYsaixtLGcpe3Uocix0LHYpO3ZhciB3LE8sayx4PWZ1bmN0aW9uKGUpe2lmKCFfJiZlIGluIFIpcmV0dXJuIFJbZV07c3dpdGNoKGUpe2Nhc2UgYjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX07Y2FzZSBoOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LEM9dCsiIEl0ZXJhdG9yIixFPWo9PWgsUz0hMSxSPWUucHJvdG90eXBlLFQ9UltkXXx8UltwXXx8aiYmUltqXSxNPVR8fHgoaiksUD1qP0U/eCgiZW50cmllcyIpOk06dm9pZCAwLEE9IkFycmF5Ij09dD9SLmVudHJpZXN8fFQ6VDtpZihBJiYoaz1mKEEuY2FsbChuZXcgZSkpLGshPT1PYmplY3QucHJvdG90eXBlJiYobChrLEMsITApLG98fGMoayxkKXx8cyhrLGQseSkpKSxFJiZUJiZULm5hbWUhPT1oJiYoUz0hMCxNPWZ1bmN0aW9uKCl7cmV0dXJuIFQuY2FsbCh0aGlzKX0pLG8mJiFnfHwhXyYmIVMmJlJbZF18fHMoUixkLE0pLGFbdF09TSxhW0NdPXksailpZih3PXt2YWx1ZXM6RT9NOngoaCksa2V5czptP006eChiKSxlbnRyaWVzOlB9LGcpZm9yKE8gaW4gdylPIGluIFJ8fGkoUixPLHdbT10pO2Vsc2UgbihuLlArbi5GKihffHxTKSx0LHcpO3JldHVybiB3fX0seyIuL19leHBvcnQiOjQyLCIuL19oYXMiOjQ2LCIuL19oaWRlIjo0NywiLi9faXRlci1jcmVhdGUiOjU2LCIuL19pdGVyYXRvcnMiOjYwLCIuL19saWJyYXJ5Ijo2MiwiLi9fb2JqZWN0LWdwbyI6NzIsIi4vX3JlZGVmaW5lIjo3OSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL193a3MiOjk3fV0sNTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxuPSExO3RyeXt2YXIgaT1bN11bb10oKTtpWyJyZXR1cm4iXT1mdW5jdGlvbigpe249ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChzKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFuKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10scz1pW29dKCk7cy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbb109ZnVuY3Rpb24oKXtyZXR1cm4gc30sZShpKX1jYXRjaChjKXt9cmV0dXJuIHJ9fSx7Ii4vX3drcyI6OTd9XSw1OTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LHt9XSw2MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17fX0se31dLDYxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWtleXMiKSxuPWUoIi4vX3RvLWlvYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsaT1uKGUpLHM9byhpKSxjPXMubGVuZ3RoLGE9MDtjPmE7KWlmKGlbcj1zW2ErK11dPT09dClyZXR1cm4gcn19LHsiLi9fb2JqZWN0LWtleXMiOjc0LCIuL190by1pb2JqZWN0Ijo5MH1dLDYyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSEwfSx7fV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL191aWQiKSgibWV0YSIpLG49ZSgiLi9faXMtb2JqZWN0IiksaT1lKCIuL19oYXMiKSxzPWUoIi4vX29iamVjdC1kcCIpLmYsYz0wLGE9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sdT0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiBhKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSksbD1mdW5jdGlvbihlKXtzKGUsbyx7dmFsdWU6e2k6Ik8iKyArK2Msdzp7fX19KX0sZj1mdW5jdGlvbihlLHQpe2lmKCFuKGUpKXJldHVybiJzeW1ib2wiPT10eXBlb2YgZT9lOigic3RyaW5nIj09dHlwZW9mIGU/IlMiOiJQIikrZTtpZighaShlLG8pKXtpZighYShlKSlyZXR1cm4iRiI7aWYoIXQpcmV0dXJuIkUiO2woZSl9cmV0dXJuIGVbb10uaX0sZD1mdW5jdGlvbihlLHQpe2lmKCFpKGUsbykpe2lmKCFhKGUpKXJldHVybiEwO2lmKCF0KXJldHVybiExO2woZSl9cmV0dXJuIGVbb10ud30sXz1mdW5jdGlvbihlKXtyZXR1cm4gdSYmcC5ORUVEJiZhKGUpJiYhaShlLG8pJiZsKGUpLGV9LHA9dC5leHBvcnRzPXtLRVk6byxORUVEOiExLGZhc3RLZXk6ZixnZXRXZWFrOmQsb25GcmVlemU6X319LHsiLi9fZmFpbHMiOjQzLCIuL19oYXMiOjQ2LCIuL19pcy1vYmplY3QiOjU0LCIuL19vYmplY3QtZHAiOjY2LCIuL191aWQiOjk0fV0sNjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX3Rhc2siKS5zZXQsaT1vLk11dGF0aW9uT2JzZXJ2ZXJ8fG8uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixzPW8ucHJvY2VzcyxjPW8uUHJvbWlzZSxhPSJwcm9jZXNzIj09ZSgiLi9fY29mIikocyk7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLHU9ZnVuY3Rpb24oKXt2YXIgbyxuO2ZvcihhJiYobz1zLmRvbWFpbikmJm8uZXhpdCgpO2U7KXtuPWUuZm4sZT1lLm5leHQ7dHJ5e24oKX1jYXRjaChpKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxpfX10PXZvaWQgMCxvJiZvLmVudGVyKCl9O2lmKGEpcj1mdW5jdGlvbigpe3MubmV4dFRpY2sodSl9O2Vsc2UgaWYoaSl7dmFyIGw9ITAsZj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkodSkub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe2YuZGF0YT1sPSFsfX1lbHNlIGlmKGMmJmMucmVzb2x2ZSl7dmFyIGQ9Yy5yZXNvbHZlKCk7cj1mdW5jdGlvbigpe2QudGhlbih1KX19ZWxzZSByPWZ1bmN0aW9uKCl7bi5jYWxsKG8sdSl9O3JldHVybiBmdW5jdGlvbihvKXt2YXIgbj17Zm46byxuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1uKSxlfHwoZT1uLHIoKSksdD1ufX19LHsiLi9fY29mIjozNCwiLi9fZ2xvYmFsIjo0NSwiLi9fdGFzayI6ODd9XSw2NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWRwcyIpLGk9ZSgiLi9fZW51bS1idWcta2V5cyIpLHM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLGM9ZnVuY3Rpb24oKXt9LGE9InByb3RvdHlwZSIsdT1mdW5jdGlvbigpe3ZhciB0LHI9ZSgiLi9fZG9tLWNyZWF0ZSIpKCJpZnJhbWUiKSxvPWkubGVuZ3RoLG49Ij4iO2ZvcihyLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGUoIi4vX2h0bWwiKS5hcHBlbmRDaGlsZChyKSxyLnNyYz0iamF2YXNjcmlwdDoiLHQ9ci5jb250ZW50V2luZG93LmRvY3VtZW50LHQub3BlbigpLHQud3JpdGUoIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8L3NjcmlwdCIrbiksdC5jbG9zZSgpLHU9dC5GO28tLTspZGVsZXRlIHVbYV1baVtvXV07cmV0dXJuIHUoKX07dC5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhjW2FdPW8oZSkscj1uZXcgYyxjW2FdPW51bGwscltzXT1lKTpyPXUoKSx2b2lkIDA9PT10P3I6bihyLHQpfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kb20tY3JlYXRlIjozOSwiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX2h0bWwiOjQ4LCIuL19vYmplY3QtZHBzIjo2NywiLi9fc2hhcmVkLWtleSI6ODN9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpLG49ZSgiLi9faWU4LWRvbS1kZWZpbmUiKSxpPWUoIi4vX3RvLXByaW1pdGl2ZSIpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobyhlKSx0PWkodCwhMCksbyhyKSxuKXRyeXtyZXR1cm4gcyhlLHQscil9Y2F0Y2goYyl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9faWU4LWRvbS1kZWZpbmUiOjQ5LCIuL190by1wcmltaXRpdmUiOjkzfV0sNjc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3QtZHAiKSxuPWUoIi4vX2FuLW9iamVjdCIpLGk9ZSgiLi9fb2JqZWN0LWtleXMiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe24oZSk7Zm9yKHZhciByLHM9aSh0KSxjPXMubGVuZ3RoLGE9MDtjPmE7KW8uZihlLHI9c1thKytdLHRbcl0pO3JldHVybiBlfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX29iamVjdC1kcCI6NjYsIi4vX29iamVjdC1rZXlzIjo3NH1dLDY4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LXBpZSIpLG49ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fdG8taW9iamVjdCIpLHM9ZSgiLi9fdG8tcHJpbWl0aXZlIiksYz1lKCIuL19oYXMiKSxhPWUoIi4vX2llOC1kb20tZGVmaW5lIiksdT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP3U6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1zKHQsITApLGEpdHJ5e3JldHVybiB1KGUsdCl9Y2F0Y2gocil7fWlmKGMoZSx0KSlyZXR1cm4gbighby5mLmNhbGwoZSx0KSxlW3RdKX19LHsiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19oYXMiOjQ2LCIuL19pZTgtZG9tLWRlZmluZSI6NDksIi4vX29iamVjdC1waWUiOjc1LCIuL19wcm9wZXJ0eS1kZXNjIjo3NywiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLXByaW1pdGl2ZSI6OTN9XSw2OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWlvYmplY3QiKSxuPWUoIi4vX29iamVjdC1nb3BuIikuZixpPXt9LnRvU3RyaW5nLHM9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXSxjPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXtyZXR1cm4gcy5zbGljZSgpfX07dC5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIHMmJiJbb2JqZWN0IFdpbmRvd10iPT1pLmNhbGwoZSk/YyhlKTpuKG8oZSkpfX0seyIuL19vYmplY3QtZ29wbiI6NzAsIi4vX3RvLWlvYmplY3QiOjkwfV0sNzA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCIpLG49ZSgiLi9fZW51bS1idWcta2V5cyIpLmNvbmNhdCgibGVuZ3RoIiwicHJvdG90eXBlIik7ci5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbihlKXtyZXR1cm4gbyhlLG4pfX0seyIuL19lbnVtLWJ1Zy1rZXlzIjo0MCwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjczfV0sNzE6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc30se31dLDcyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faGFzIiksbj1lKCIuL190by1vYmplY3QiKSxpPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxzPU9iamVjdC5wcm90b3R5cGU7dC5leHBvcnRzPU9iamVjdC5nZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24oZSl7cmV0dXJuIGU9bihlKSxvKGUsaSk/ZVtpXToiZnVuY3Rpb24iPT10eXBlb2YgZS5jb25zdHJ1Y3RvciYmZSBpbnN0YW5jZW9mIGUuY29uc3RydWN0b3I/ZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGU6ZSBpbnN0YW5jZW9mIE9iamVjdD9zOm51bGx9fSx7Ii4vX2hhcyI6NDYsIi4vX3NoYXJlZC1rZXkiOjgzLCIuL190by1vYmplY3QiOjkyfV0sNzM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19oYXMiKSxuPWUoIi4vX3RvLWlvYmplY3QiKSxpPWUoIi4vX2FycmF5LWluY2x1ZGVzIikoITEpLHM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLGM9bihlKSxhPTAsdT1bXTtmb3IociBpbiBjKXIhPXMmJm8oYyxyKSYmdS5wdXNoKHIpO2Zvcig7dC5sZW5ndGg+YTspbyhjLHI9dFthKytdKSYmKH5pKHUscil8fHUucHVzaChyKSk7cmV0dXJuIHV9fSx7Ii4vX2FycmF5LWluY2x1ZGVzIjozMiwiLi9faGFzIjo0NiwiLi9fc2hhcmVkLWtleSI6ODMsIi4vX3RvLWlvYmplY3QiOjkwfV0sNzQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCIpLG49ZSgiLi9fZW51bS1idWcta2V5cyIpO3QuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG8oZSxuKX19LHsiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX29iamVjdC1rZXlzLWludGVybmFsIjo3M31dLDc1OltmdW5jdGlvbihlLHQscil7ci5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSx7fV0sNzY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKSxuPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2ZhaWxzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9KG4uT2JqZWN0fHx7fSlbZV18fE9iamVjdFtlXSxzPXt9O3NbZV09dChyKSxvKG8uUytvLkYqaShmdW5jdGlvbigpe3IoMSl9KSwiT2JqZWN0IixzKX19LHsiLi9fY29yZSI6MzUsIi4vX2V4cG9ydCI6NDIsIi4vX2ZhaWxzIjo0M31dLDc3OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue2VudW1lcmFibGU6ISgxJmUpLGNvbmZpZ3VyYWJsZTohKDImZSksd3JpdGFibGU6ISg0JmUpLHZhbHVlOnR9fX0se31dLDc4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faGlkZSIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuIGluIHQpciYmZVtuXT9lW25dPXRbbl06byhlLG4sdFtuXSk7cmV0dXJuIGV9fSx7Ii4vX2hpZGUiOjQ3fV0sNzk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZSgiLi9faGlkZSIpfSx7Ii4vX2hpZGUiOjQ3fV0sODA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pcy1vYmplY3QiKSxuPWUoIi4vX2FuLW9iamVjdCIpLGk9ZnVuY3Rpb24oZSx0KXtpZihuKGUpLCFvKHQpJiZudWxsIT09dCl0aHJvdyBUeXBlRXJyb3IodCsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTt0LmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24odCxyLG8pe3RyeXtvPWUoIi4vX2N0eCIpKEZ1bmN0aW9uLmNhbGwsZSgiLi9fb2JqZWN0LWdvcGQiKS5mKE9iamVjdC5wcm90b3R5cGUsIl9fcHJvdG9fXyIpLnNldCwyKSxvKHQsW10pLHI9ISh0IGluc3RhbmNlb2YgQXJyYXkpfWNhdGNoKG4pe3I9ITB9cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSx0KSxyP2UuX19wcm90b19fPXQ6byhlLHQpLGV9fSh7fSwhMSk6dm9pZCAwKSxjaGVjazppfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19jdHgiOjM2LCIuL19pcy1vYmplY3QiOjU0LCIuL19vYmplY3QtZ29wZCI6Njh9XSw4MTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2NvcmUiKSxpPWUoIi4vX29iamVjdC1kcCIpLHM9ZSgiLi9fZGVzY3JpcHRvcnMiKSxjPWUoIi4vX3drcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PSJmdW5jdGlvbiI9PXR5cGVvZiBuW2VdP25bZV06b1tlXTtzJiZ0JiYhdFtjXSYmaS5mKHQsYyx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0seyIuL19jb3JlIjozNSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19nbG9iYWwiOjQ1LCIuL19vYmplY3QtZHAiOjY2LCIuL193a3MiOjk3fV0sODI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3QtZHAiKS5mLG49ZSgiLi9faGFzIiksaT1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UmJiFuKGU9cj9lOmUucHJvdG90eXBlLGkpJiZvKGUsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LHsiLi9faGFzIjo0NiwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fd2tzIjo5N31dLDgzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fc2hhcmVkIikoImtleXMiKSxuPWUoIi4vX3VpZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gb1tlXXx8KG9bZV09bihlKSl9fSx7Ii4vX3NoYXJlZCI6ODQsIi4vX3VpZCI6OTR9XSw4NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49Il9fY29yZS1qc19zaGFyZWRfXyIsaT1vW25dfHwob1tuXT17fSk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpW2VdfHwoaVtlXT17fSl9fSx7Ii4vX2dsb2JhbCI6NDV9XSw4NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpLG49ZSgiLi9fYS1mdW5jdGlvbiIpLGk9ZSgiLi9fd2tzIikoInNwZWNpZXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW8oZSkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PXN8fHZvaWQgMD09KHI9byhzKVtpXSk/dDpuKHIpfX0seyIuL19hLWZ1bmN0aW9uIjoyOCwiLi9fYW4tb2JqZWN0IjozMSwiLi9fd2tzIjo5N31dLDg2OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW50ZWdlciIpLG49ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyKXt2YXIgaSxzLGM9U3RyaW5nKG4odCkpLGE9byhyKSx1PWMubGVuZ3RoO3JldHVybiBhPDB8fGE+PXU/ZT8iIjp2b2lkIDA6KGk9Yy5jaGFyQ29kZUF0KGEpLGk8NTUyOTZ8fGk+NTYzMTl8fGErMT09PXV8fChzPWMuY2hhckNvZGVBdChhKzEpKTw1NjMyMHx8cz41NzM0Mz9lP2MuY2hhckF0KGEpOmk6ZT9jLnNsaWNlKGEsYSsyKTooaS01NTI5Njw8MTApKyhzLTU2MzIwKSs2NTUzNil9fX0seyIuL19kZWZpbmVkIjozNywiLi9fdG8taW50ZWdlciI6ODl9XSw4NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvLG4saSxzPWUoIi4vX2N0eCIpLGM9ZSgiLi9faW52b2tlIiksYT1lKCIuL19odG1sIiksdT1lKCIuL19kb20tY3JlYXRlIiksbD1lKCIuL19nbG9iYWwiKSxmPWwucHJvY2VzcyxkPWwuc2V0SW1tZWRpYXRlLF89bC5jbGVhckltbWVkaWF0ZSxwPWwuTWVzc2FnZUNoYW5uZWwsYj0wLGg9e30seT0ib25yZWFkeXN0YXRlY2hhbmdlIix2PWZ1bmN0aW9uKCl7dmFyIGU9K3RoaXM7aWYoaC5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIHQ9aFtlXTtkZWxldGUgaFtlXSx0KCl9fSxqPWZ1bmN0aW9uKGUpe3YuY2FsbChlLmRhdGEpfTtkJiZffHwoZD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspdC5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gaFsrK2JdPWZ1bmN0aW9uKCl7YygiZnVuY3Rpb24iPT10eXBlb2YgZT9lOkZ1bmN0aW9uKGUpLHQpfSxvKGIpLGJ9LF89ZnVuY3Rpb24oZSl7ZGVsZXRlIGhbZV19LCJwcm9jZXNzIj09ZSgiLi9fY29mIikoZik/bz1mdW5jdGlvbihlKXtmLm5leHRUaWNrKHModixlLDEpKX06cD8obj1uZXcgcCxpPW4ucG9ydDIsbi5wb3J0MS5vbm1lc3NhZ2U9aixvPXMoaS5wb3N0TWVzc2FnZSxpLDEpKTpsLmFkZEV2ZW50TGlzdGVuZXImJiJmdW5jdGlvbiI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIWwuaW1wb3J0U2NyaXB0cz8obz1mdW5jdGlvbihlKXtsLnBvc3RNZXNzYWdlKGUrIiIsIioiKX0sbC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixqLCExKSk6bz15IGluIHUoInNjcmlwdCIpP2Z1bmN0aW9uKGUpe2EuYXBwZW5kQ2hpbGQodSgic2NyaXB0IikpW3ldPWZ1bmN0aW9uKCl7YS5yZW1vdmVDaGlsZCh0aGlzKSx2LmNhbGwoZSl9fTpmdW5jdGlvbihlKXtzZXRUaW1lb3V0KHModixlLDEpLDApfSksdC5leHBvcnRzPXtzZXQ6ZCxjbGVhcjpffX0seyIuL19jb2YiOjM0LCIuL19jdHgiOjM2LCIuL19kb20tY3JlYXRlIjozOSwiLi9fZ2xvYmFsIjo0NSwiLi9faHRtbCI6NDgsIi4vX2ludm9rZSI6NTB9XSw4ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWludGVnZXIiKSxuPU1hdGgubWF4LGk9TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9byhlKSxlPDA/bihlK3QsMCk6aShlLHQpfX0seyIuL190by1pbnRlZ2VyIjo4OX1dLDg5OltmdW5jdGlvbihlLHQscil7dmFyIG89TWF0aC5jZWlsLG49TWF0aC5mbG9vcjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9uOm8pKGUpfX0se31dLDkwOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faW9iamVjdCIpLG49ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19LHsiLi9fZGVmaW5lZCI6MzcsIi4vX2lvYmplY3QiOjUxfV0sOTE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pbnRlZ2VyIiksbj1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MD9uKG8oZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LHsiLi9fdG8taW50ZWdlciI6ODl9XSw5MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChvKGUpKX19LHsiLi9fZGVmaW5lZCI6Mzd9XSw5MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFvKGUpKXJldHVybiBlO3ZhciByLG47aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFvKG49ci5jYWxsKGUpKSlyZXR1cm4gbjtpZigiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnZhbHVlT2YpJiYhbyhuPXIuY2FsbChlKSkpcmV0dXJuIG47aWYoIXQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbyhuPXIuY2FsbChlKSkpcmV0dXJuIG47dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LHsiLi9faXMtb2JqZWN0Ijo1NH1dLDk0OltmdW5jdGlvbihlLHQscil7dmFyIG89MCxuPU1hdGgucmFuZG9tKCk7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJTeW1ib2woIi5jb25jYXQodm9pZCAwPT09ZT8iIjplLCIpXyIsKCsrbytuKS50b1N0cmluZygzNikpfX0se31dLDk1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj1lKCIuL19jb3JlIiksaT1lKCIuL19saWJyYXJ5Iikscz1lKCIuL193a3MtZXh0IiksYz1lKCIuL19vYmplY3QtZHAiKS5mO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1uLlN5bWJvbHx8KG4uU3ltYm9sPWk/e306by5TeW1ib2x8fHt9KTsiXyI9PWUuY2hhckF0KDApfHxlIGluIHR8fGModCxlLHt2YWx1ZTpzLmYoZSl9KX19LHsiLi9fY29yZSI6MzUsIi4vX2dsb2JhbCI6NDUsIi4vX2xpYnJhcnkiOjYyLCIuL19vYmplY3QtZHAiOjY2LCIuL193a3MtZXh0Ijo5Nn1dLDk2OltmdW5jdGlvbihlLHQscil7ci5mPWUoIi4vX3drcyIpfSx7Ii4vX3drcyI6OTd9XSw5NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3NoYXJlZCIpKCJ3a3MiKSxuPWUoIi4vX3VpZCIpLGk9ZSgiLi9fZ2xvYmFsIikuU3ltYm9sLHM9ImZ1bmN0aW9uIj09dHlwZW9mIGksYz10LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG9bZV18fChvW2VdPXMmJmlbZV18fChzP2k6bikoIlN5bWJvbC4iK2UpKX07Yy5zdG9yZT1vfSx7Ii4vX2dsb2JhbCI6NDUsIi4vX3NoYXJlZCI6ODQsIi4vX3VpZCI6OTR9XSw5ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NsYXNzb2YiKSxuPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9ZSgiLi9faXRlcmF0b3JzIik7dC5leHBvcnRzPWUoIi4vX2NvcmUiKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbbl18fGVbIkBAaXRlcmF0b3IiXXx8aVtvKGUpXX19LHsiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3fV0sOTk6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fYWRkLXRvLXVuc2NvcGFibGVzIiksbj1lKCIuL19pdGVyLXN0ZXAiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLHM9ZSgiLi9fdG8taW9iamVjdCIpO3QuZXhwb3J0cz1lKCIuL19pdGVyLWRlZmluZSIpKEFycmF5LCJBcnJheSIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PXMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG4oMSkpOiJrZXlzIj09dD9uKDAscik6InZhbHVlcyI9PXQ/bigwLGVbcl0pOm4oMCxbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG8oImtleXMiKSxvKCJ2YWx1ZXMiKSxvKCJlbnRyaWVzIil9LHsiLi9fYWRkLXRvLXVuc2NvcGFibGVzIjoyOSwiLi9faXRlci1kZWZpbmUiOjU3LCIuL19pdGVyLXN0ZXAiOjU5LCIuL19pdGVyYXRvcnMiOjYwLCIuL190by1pb2JqZWN0Ijo5MH1dLDEwMDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2V4cG9ydCIpO28oby5TLCJPYmplY3QiLHtjcmVhdGU6ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpfSl9LHsiLi9fZXhwb3J0Ijo0MiwiLi9fb2JqZWN0LWNyZWF0ZSI6NjV9XSwxMDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKTtvKG8uUytvLkYqIWUoIi4vX2Rlc2NyaXB0b3JzIiksIk9iamVjdCIse2RlZmluZVByb3BlcnR5OmUoIi4vX29iamVjdC1kcCIpLmZ9KX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2V4cG9ydCI6NDIsIi4vX29iamVjdC1kcCI6NjZ9XSwxMDI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pb2JqZWN0Iiksbj1lKCIuL19vYmplY3QtZ29wZCIpLmY7ZSgiLi9fb2JqZWN0LXNhcCIpKCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4obyhlKSx0KX19KX0seyIuL19vYmplY3QtZ29wZCI6NjgsIi4vX29iamVjdC1zYXAiOjc2LCIuL190by1pb2JqZWN0Ijo5MH1dLDEwMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWdwbyIpO2UoIi4vX29iamVjdC1zYXAiKSgiZ2V0UHJvdG90eXBlT2YiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0pfSx7Ii4vX29iamVjdC1ncG8iOjcyLCIuL19vYmplY3Qtc2FwIjo3NiwiLi9fdG8tb2JqZWN0Ijo5Mn1dLDEwNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWtleXMiKTtlKCIuL19vYmplY3Qtc2FwIikoImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0pfSx7Ii4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXNhcCI6NzYsIi4vX3RvLW9iamVjdCI6OTJ9XSwxMDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKTtvKG8uUywiT2JqZWN0Iix7c2V0UHJvdG90eXBlT2Y6ZSgiLi9fc2V0LXByb3RvIikuc2V0fSl9LHsiLi9fZXhwb3J0Ijo0MiwiLi9fc2V0LXByb3RvIjo4MH1dLDEwNjpbZnVuY3Rpb24oZSx0LHIpe30se31dLDEwNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbyxuLGkscz1lKCIuL19saWJyYXJ5IiksYz1lKCIuL19nbG9iYWwiKSxhPWUoIi4vX2N0eCIpLHU9ZSgiLi9fY2xhc3NvZiIpLGw9ZSgiLi9fZXhwb3J0IiksZj1lKCIuL19pcy1vYmplY3QiKSxkPShlKCIuL19hbi1vYmplY3QiKSxlKCIuL19hLWZ1bmN0aW9uIikpLF89ZSgiLi9fYW4taW5zdGFuY2UiKSxwPWUoIi4vX2Zvci1vZiIpLGI9KGUoIi4vX3NldC1wcm90byIpLnNldCxlKCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIikpLGg9ZSgiLi9fdGFzayIpLnNldCx5PWUoIi4vX21pY3JvdGFzayIpKCksdj0iUHJvbWlzZSIsaj1jLlR5cGVFcnJvcixtPWMucHJvY2VzcyxnPWNbdl0sbT1jLnByb2Nlc3Msdz0icHJvY2VzcyI9PXUobSksTz1mdW5jdGlvbigpe30saz0hIWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PWcucmVzb2x2ZSgxKSxyPSh0LmNvbnN0cnVjdG9yPXt9KVtlKCIuL193a3MiKSgic3BlY2llcyIpXT1mdW5jdGlvbihlKXtlKE8sTyl9O3JldHVybih3fHwiZnVuY3Rpb24iPT10eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50KSYmdC50aGVuKE8paW5zdGFuY2VvZiByfWNhdGNoKG8pe319KCkseD1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8ZT09PWcmJnQ9PT1pfSxDPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiEoIWYoZSl8fCJmdW5jdGlvbiIhPXR5cGVvZih0PWUudGhlbikpJiZ0fSxFPWZ1bmN0aW9uKGUpe3JldHVybiB4KGcsZSk/bmV3IFMoZSk6bmV3IG4oZSl9LFM9bj1mdW5jdGlvbihlKXt2YXIgdCxyO3RoaXMucHJvbWlzZT1uZXcgZShmdW5jdGlvbihlLG8pe2lmKHZvaWQgMCE9PXR8fHZvaWQgMCE9PXIpdGhyb3cgaigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1vfSksdGhpcy5yZXNvbHZlPWQodCksdGhpcy5yZWplY3Q9ZChyKX0sUj1mdW5jdGlvbihlKXt0cnl7ZSgpfWNhdGNoKHQpe3JldHVybntlcnJvcjp0fX19LFQ9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO3koZnVuY3Rpb24oKXtmb3IodmFyIG89ZS5fdixuPTE9PWUuX3MsaT0wLHM9ZnVuY3Rpb24odCl7dmFyIHIsaSxzPW4/dC5vazp0LmZhaWwsYz10LnJlc29sdmUsYT10LnJlamVjdCx1PXQuZG9tYWluO3RyeXtzPyhufHwoMj09ZS5faCYmQShlKSxlLl9oPTEpLHM9PT0hMD9yPW86KHUmJnUuZW50ZXIoKSxyPXMobyksdSYmdS5leGl0KCkpLHI9PT10LnByb21pc2U/YShqKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihpPUMocikpP2kuY2FsbChyLGMsYSk6YyhyKSk6YShvKX1jYXRjaChsKXthKGwpfX07ci5sZW5ndGg+aTspcyhyW2krK10pO2UuX2M9W10sZS5fbj0hMSx0JiYhZS5faCYmTShlKX0pfX0sTT1mdW5jdGlvbihlKXtoLmNhbGwoYyxmdW5jdGlvbigpe3ZhciB0LHIsbyxuPWUuX3Y7aWYoUChlKSYmKHQ9UihmdW5jdGlvbigpe3c/bS5lbWl0KCJ1bmhhbmRsZWRSZWplY3Rpb24iLG4sZSk6KHI9Yy5vbnVuaGFuZGxlZHJlamVjdGlvbik/cih7cHJvbWlzZTplLHJlYXNvbjpufSk6KG89Yy5jb25zb2xlKSYmby5lcnJvciYmby5lcnJvcigiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIixuKX0pLGUuX2g9d3x8UChlKT8yOjEpLGUuX2E9dm9pZCAwLHQpdGhyb3cgdC5lcnJvcn0pfSxQPWZ1bmN0aW9uKGUpe2lmKDE9PWUuX2gpcmV0dXJuITE7Zm9yKHZhciB0LHI9ZS5fYXx8ZS5fYyxvPTA7ci5sZW5ndGg+bzspaWYodD1yW28rK10sdC5mYWlsfHwhUCh0LnByb21pc2UpKXJldHVybiExO3JldHVybiEwfSxBPWZ1bmN0aW9uKGUpe2guY2FsbChjLGZ1bmN0aW9uKCl7dmFyIHQ7dz9tLmVtaXQoInJlamVjdGlvbkhhbmRsZWQiLGUpOih0PWMub25yZWplY3Rpb25oYW5kbGVkKSYmdCh7cHJvbWlzZTplLHJlYXNvbjplLl92fSl9KX0sRD1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2R8fCh0Ll9kPSEwLHQ9dC5fd3x8dCx0Ll92PWUsdC5fcz0yLHQuX2F8fCh0Ll9hPXQuX2Muc2xpY2UoKSksVCh0LCEwKSl9LE49ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzO2lmKCFyLl9kKXtyLl9kPSEwLHI9ci5fd3x8cjt0cnl7aWYocj09PWUpdGhyb3cgaigiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGYiKTsodD1DKGUpKT95KGZ1bmN0aW9uKCl7dmFyIG89e193OnIsX2Q6ITF9O3RyeXt0LmNhbGwoZSxhKE4sbywxKSxhKEQsbywxKSl9Y2F0Y2gobil7RC5jYWxsKG8sbil9fSk6KHIuX3Y9ZSxyLl9zPTEsVChyLCExKSl9Y2F0Y2gobyl7RC5jYWxsKHtfdzpyLF9kOiExfSxvKX19fTtrfHwoZz1mdW5jdGlvbihlKXtfKHRoaXMsZyx2LCJfaCIpLGQoZSksby5jYWxsKHRoaXMpO3RyeXtlKGEoTix0aGlzLDEpLGEoRCx0aGlzLDEpKX1jYXRjaCh0KXtELmNhbGwodGhpcyx0KX19LG89ZnVuY3Rpb24oZSl7dGhpcy5fYz1bXSx0aGlzLl9hPXZvaWQgMCx0aGlzLl9zPTAsdGhpcy5fZD0hMSx0aGlzLl92PXZvaWQgMCx0aGlzLl9oPTAsdGhpcy5fbj0hMX0sby5wcm90b3R5cGU9ZSgiLi9fcmVkZWZpbmUtYWxsIikoZy5wcm90b3R5cGUse3RoZW46ZnVuY3Rpb24oZSx0KXt2YXIgcj1FKGIodGhpcyxnKSk7cmV0dXJuIHIub2s9ImZ1bmN0aW9uIiE9dHlwZW9mIGV8fGUsci5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPXc/bS5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmVCh0aGlzLCExKSxyLnByb21pc2V9LCJjYXRjaCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksUz1mdW5jdGlvbigpe3ZhciBlPW5ldyBvO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT1hKE4sZSwxKSx0aGlzLnJlamVjdD1hKEQsZSwxKX0pLGwobC5HK2wuVytsLkYqIWsse1Byb21pc2U6Z30pLGUoIi4vX3NldC10by1zdHJpbmctdGFnIikoZyx2KSxlKCIuL19zZXQtc3BlY2llcyIpKHYpLGk9ZSgiLi9fY29yZSIpW3ZdLGwobC5TK2wuRiohayx2LHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9RSh0aGlzKSxyPXQucmVqZWN0O3JldHVybiByKGUpLA0KdC5wcm9taXNlfX0pLGwobC5TK2wuRiooc3x8IWspLHYse3Jlc29sdmU6ZnVuY3Rpb24oZSl7aWYoZSBpbnN0YW5jZW9mIGcmJngoZS5jb25zdHJ1Y3Rvcix0aGlzKSlyZXR1cm4gZTt2YXIgdD1FKHRoaXMpLHI9dC5yZXNvbHZlO3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqIShrJiZlKCIuL19pdGVyLWRldGVjdCIpKGZ1bmN0aW9uKGUpe2cuYWxsKGUpWyJjYXRjaCJdKE8pfSkpLHYse2FsbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9RSh0KSxvPXIucmVzb2x2ZSxuPXIucmVqZWN0LGk9UihmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxzPTE7cChlLCExLGZ1bmN0aW9uKGUpe3ZhciBjPWkrKyxhPSExO3IucHVzaCh2b2lkIDApLHMrKyx0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXthfHwoYT0hMCxyW2NdPWUsLS1zfHxvKHIpKX0sbil9KSwtLXN8fG8ocil9KTtyZXR1cm4gaSYmbihpLmVycm9yKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPUUodCksbz1yLnJlamVjdCxuPVIoZnVuY3Rpb24oKXtwKGUsITEsZnVuY3Rpb24oZSl7dC5yZXNvbHZlKGUpLnRoZW4oci5yZXNvbHZlLG8pfSl9KTtyZXR1cm4gbiYmbyhuLmVycm9yKSxyLnByb21pc2V9fSl9LHsiLi9fYS1mdW5jdGlvbiI6MjgsIi4vX2FuLWluc3RhbmNlIjozMCwiLi9fYW4tb2JqZWN0IjozMSwiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19jdHgiOjM2LCIuL19leHBvcnQiOjQyLCIuL19mb3Itb2YiOjQ0LCIuL19nbG9iYWwiOjQ1LCIuL19pcy1vYmplY3QiOjU0LCIuL19pdGVyLWRldGVjdCI6NTgsIi4vX2xpYnJhcnkiOjYyLCIuL19taWNyb3Rhc2siOjY0LCIuL19yZWRlZmluZS1hbGwiOjc4LCIuL19zZXQtcHJvdG8iOjgwLCIuL19zZXQtc3BlY2llcyI6ODEsIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6ODUsIi4vX3Rhc2siOjg3LCIuL193a3MiOjk3fV0sMTA4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX3N0cmluZy1hdCIpKCEwKTtlKCIuL19pdGVyLWRlZmluZSIpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1vKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHsiLi9faXRlci1kZWZpbmUiOjU3LCIuL19zdHJpbmctYXQiOjg2fV0sMTA5OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9faGFzIiksaT1lKCIuL19kZXNjcmlwdG9ycyIpLHM9ZSgiLi9fZXhwb3J0IiksYz1lKCIuL19yZWRlZmluZSIpLGE9ZSgiLi9fbWV0YSIpLktFWSx1PWUoIi4vX2ZhaWxzIiksbD1lKCIuL19zaGFyZWQiKSxmPWUoIi4vX3NldC10by1zdHJpbmctdGFnIiksZD1lKCIuL191aWQiKSxfPWUoIi4vX3drcyIpLHA9ZSgiLi9fd2tzLWV4dCIpLGI9ZSgiLi9fd2tzLWRlZmluZSIpLGg9ZSgiLi9fa2V5b2YiKSx5PWUoIi4vX2VudW0ta2V5cyIpLHY9ZSgiLi9faXMtYXJyYXkiKSxqPWUoIi4vX2FuLW9iamVjdCIpLG09ZSgiLi9fdG8taW9iamVjdCIpLGc9ZSgiLi9fdG8tcHJpbWl0aXZlIiksdz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksTz1lKCIuL19vYmplY3QtY3JlYXRlIiksaz1lKCIuL19vYmplY3QtZ29wbi1leHQiKSx4PWUoIi4vX29iamVjdC1nb3BkIiksQz1lKCIuL19vYmplY3QtZHAiKSxFPWUoIi4vX29iamVjdC1rZXlzIiksUz14LmYsUj1DLmYsVD1rLmYsTT1vLlN5bWJvbCxQPW8uSlNPTixBPVAmJlAuc3RyaW5naWZ5LEQ9InByb3RvdHlwZSIsTj1fKCJfaGlkZGVuIiksTD1fKCJ0b1ByaW1pdGl2ZSIpLEY9e30ucHJvcGVydHlJc0VudW1lcmFibGUsST1sKCJzeW1ib2wtcmVnaXN0cnkiKSxVPWwoInN5bWJvbHMiKSx6PWwoIm9wLXN5bWJvbHMiKSxIPU9iamVjdFtEXSxWPSJmdW5jdGlvbiI9PXR5cGVvZiBNLEI9by5RT2JqZWN0LEo9IUJ8fCFCW0RdfHwhQltEXS5maW5kQ2hpbGQsVz1pJiZ1KGZ1bmN0aW9uKCl7cmV0dXJuIDchPU8oUih7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiBSKHRoaXMsImEiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1TKEgsdCk7byYmZGVsZXRlIEhbdF0sUihlLHQsciksbyYmZSE9PUgmJlIoSCx0LG8pfTpSLFk9ZnVuY3Rpb24oZSl7dmFyIHQ9VVtlXT1PKE1bRF0pO3JldHVybiB0Ll9rPWUsdH0scT1WJiYic3ltYm9sIj09dHlwZW9mIE0uaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIE19LEs9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPT09SCYmSyh6LHQsciksaihlKSx0PWcodCwhMCksaihyKSxuKFUsdCk/KHIuZW51bWVyYWJsZT8obihlLE4pJiZlW05dW3RdJiYoZVtOXVt0XT0hMSkscj1PKHIse2VudW1lcmFibGU6dygwLCExKX0pKToobihlLE4pfHxSKGUsTix3KDEse30pKSxlW05dW3RdPSEwKSxXKGUsdCxyKSk6UihlLHQscil9LEc9ZnVuY3Rpb24oZSx0KXtqKGUpO2Zvcih2YXIgcixvPXkodD1tKHQpKSxuPTAsaT1vLmxlbmd0aDtpPm47KUsoZSxyPW9bbisrXSx0W3JdKTtyZXR1cm4gZX0sWj1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P08oZSk6RyhPKGUpLHQpfSxYPWZ1bmN0aW9uKGUpe3ZhciB0PUYuY2FsbCh0aGlzLGU9ZyhlLCEwKSk7cmV0dXJuISh0aGlzPT09SCYmbihVLGUpJiYhbih6LGUpKSYmKCEodHx8IW4odGhpcyxlKXx8IW4oVSxlKXx8bih0aGlzLE4pJiZ0aGlzW05dW2VdKXx8dCl9LCQ9ZnVuY3Rpb24oZSx0KXtpZihlPW0oZSksdD1nKHQsITApLGUhPT1IfHwhbihVLHQpfHxuKHosdCkpe3ZhciByPVMoZSx0KTtyZXR1cm4hcnx8IW4oVSx0KXx8bihlLE4pJiZlW05dW3RdfHwoci5lbnVtZXJhYmxlPSEwKSxyfX0sUT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1UKG0oZSkpLG89W10saT0wO3IubGVuZ3RoPmk7KW4oVSx0PXJbaSsrXSl8fHQ9PU58fHQ9PWF8fG8ucHVzaCh0KTtyZXR1cm4gb30sZWU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9ZT09PUgsbz1UKHI/ejptKGUpKSxpPVtdLHM9MDtvLmxlbmd0aD5zOykhbihVLHQ9b1tzKytdKXx8ciYmIW4oSCx0KXx8aS5wdXNoKFVbdF0pO3JldHVybiBpfTtWfHwoTT1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBNKXRocm93IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yISIpO3ZhciBlPWQoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApLHQ9ZnVuY3Rpb24ocil7dGhpcz09PUgmJnQuY2FsbCh6LHIpLG4odGhpcyxOKSYmbih0aGlzW05dLGUpJiYodGhpc1tOXVtlXT0hMSksVyh0aGlzLGUsdygxLHIpKX07cmV0dXJuIGkmJkomJlcoSCxlLHtjb25maWd1cmFibGU6ITAsc2V0OnR9KSxZKGUpfSxjKE1bRF0sInRvU3RyaW5nIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSkseC5mPSQsQy5mPUssZSgiLi9fb2JqZWN0LWdvcG4iKS5mPWsuZj1RLGUoIi4vX29iamVjdC1waWUiKS5mPVgsZSgiLi9fb2JqZWN0LWdvcHMiKS5mPWVlLGkmJiFlKCIuL19saWJyYXJ5IikmJmMoSCwicHJvcGVydHlJc0VudW1lcmFibGUiLFgsITApLHAuZj1mdW5jdGlvbihlKXtyZXR1cm4gWShfKGUpKX0pLHMocy5HK3MuVytzLkYqIVYse1N5bWJvbDpNfSk7Zm9yKHZhciB0ZT0iaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMiLnNwbGl0KCIsIikscmU9MDt0ZS5sZW5ndGg+cmU7KV8odGVbcmUrK10pO2Zvcih2YXIgdGU9RShfLnN0b3JlKSxyZT0wO3RlLmxlbmd0aD5yZTspYih0ZVtyZSsrXSk7cyhzLlMrcy5GKiFWLCJTeW1ib2wiLHsiZm9yIjpmdW5jdGlvbihlKXtyZXR1cm4gbihJLGUrPSIiKT9JW2VdOklbZV09TShlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKHEoZSkpcmV0dXJuIGgoSSxlKTt0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIHN5bWJvbCEiKX0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7Sj0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7Sj0hMX19KSxzKHMuUytzLkYqIVYsIk9iamVjdCIse2NyZWF0ZTpaLGRlZmluZVByb3BlcnR5OkssZGVmaW5lUHJvcGVydGllczpHLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjokLGdldE93blByb3BlcnR5TmFtZXM6USxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ZWV9KSxQJiZzKHMuUytzLkYqKCFWfHx1KGZ1bmN0aW9uKCl7dmFyIGU9TSgpO3JldHVybiJbbnVsbF0iIT1BKFtlXSl8fCJ7fSIhPUEoe2E6ZX0pfHwie30iIT1BKE9iamVjdChlKSl9KSksIkpTT04iLHtzdHJpbmdpZnk6ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT09ZSYmIXEoZSkpe2Zvcih2YXIgdCxyLG89W2VdLG49MTthcmd1bWVudHMubGVuZ3RoPm47KW8ucHVzaChhcmd1bWVudHNbbisrXSk7cmV0dXJuIHQ9b1sxXSwiZnVuY3Rpb24iPT10eXBlb2YgdCYmKHI9dCksIXImJnYodCl8fCh0PWZ1bmN0aW9uKGUsdCl7aWYociYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksIXEodCkpcmV0dXJuIHR9KSxvWzFdPXQsQS5hcHBseShQLG8pfX19KSxNW0RdW0xdfHxlKCIuL19oaWRlIikoTVtEXSxMLE1bRF0udmFsdWVPZiksZihNLCJTeW1ib2wiKSxmKE1hdGgsIk1hdGgiLCEwKSxmKG8uSlNPTiwiSlNPTiIsITApfSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZW51bS1rZXlzIjo0MSwiLi9fZXhwb3J0Ijo0MiwiLi9fZmFpbHMiOjQzLCIuL19nbG9iYWwiOjQ1LCIuL19oYXMiOjQ2LCIuL19oaWRlIjo0NywiLi9faXMtYXJyYXkiOjUzLCIuL19rZXlvZiI6NjEsIi4vX2xpYnJhcnkiOjYyLCIuL19tZXRhIjo2MywiLi9fb2JqZWN0LWNyZWF0ZSI6NjUsIi4vX29iamVjdC1kcCI6NjYsIi4vX29iamVjdC1nb3BkIjo2OCwiLi9fb2JqZWN0LWdvcG4iOjcwLCIuL19vYmplY3QtZ29wbi1leHQiOjY5LCIuL19vYmplY3QtZ29wcyI6NzEsIi4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXBpZSI6NzUsIi4vX3Byb3BlcnR5LWRlc2MiOjc3LCIuL19yZWRlZmluZSI6NzksIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc2hhcmVkIjo4NCwiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLXByaW1pdGl2ZSI6OTMsIi4vX3VpZCI6OTQsIi4vX3drcyI6OTcsIi4vX3drcy1kZWZpbmUiOjk1LCIuL193a3MtZXh0Ijo5Nn1dLDExMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4vX3drcy1kZWZpbmUiKSgiYXN5bmNJdGVyYXRvciIpfSx7Ii4vX3drcy1kZWZpbmUiOjk1fV0sMTExOltmdW5jdGlvbihlLHQscil7ZSgiLi9fd2tzLWRlZmluZSIpKCJvYnNlcnZhYmxlIil9LHsiLi9fd2tzLWRlZmluZSI6OTV9XSwxMTI6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL2VzNi5hcnJheS5pdGVyYXRvciIpO2Zvcih2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2hpZGUiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLHM9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIiksYz1bIk5vZGVMaXN0IiwiRE9NVG9rZW5MaXN0IiwiTWVkaWFMaXN0IiwiU3R5bGVTaGVldExpc3QiLCJDU1NSdWxlTGlzdCJdLGE9MDthPDU7YSsrKXt2YXIgdT1jW2FdLGw9b1t1XSxmPWwmJmwucHJvdG90eXBlO2YmJiFmW3NdJiZuKGYscyx1KSxpW3VdPWkuQXJyYXl9fSx7Ii4vX2dsb2JhbCI6NDUsIi4vX2hpZGUiOjQ3LCIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3LCIuL2VzNi5hcnJheS5pdGVyYXRvciI6OTl9XSwxMTM6W2Z1bmN0aW9uKGUsdCxyKXtPYmplY3Qub2JzZXJ2ZXx8ZnVuY3Rpb24oZSx0LHIsbyl7InVzZSBzdHJpY3QiO3ZhciBuLGkscz1bImFkZCIsInVwZGF0ZSIsImRlbGV0ZSIsInJlY29uZmlndXJlIiwic2V0UHJvdG90eXBlIiwicHJldmVudEV4dGVuc2lvbnMiXSxjPXQuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1lLmNhbGwodCl9fShlLnByb3RvdHlwZS50b1N0cmluZyksYT10LnByb3RvdHlwZS5pbmRleE9mP3QuaW5kZXhPZnx8ZnVuY3Rpb24oZSxyLG8pe3JldHVybiB0LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZSxyLG8pfTpmdW5jdGlvbihlLHQscil7Zm9yKHZhciBvPXJ8fDA7bzxlLmxlbmd0aDtvKyspaWYoZVtvXT09PXQpcmV0dXJuIG87cmV0dXJuLTF9LHU9ci5NYXAhPT1vJiZNYXAucHJvdG90eXBlLmZvckVhY2g/ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IE1hcH06ZnVuY3Rpb24oKXt2YXIgZT1bXSx0PVtdO3JldHVybntzaXplOjAsaGFzOmZ1bmN0aW9uKHQpe3JldHVybiBhKGUsdCk+LTF9LGdldDpmdW5jdGlvbihyKXtyZXR1cm4gdFthKGUscildfSxzZXQ6ZnVuY3Rpb24ocixvKXt2YXIgbj1hKGUscik7bj09PS0xPyhlLnB1c2gociksdC5wdXNoKG8pLHRoaXMuc2l6ZSsrKTp0W25dPW99LCJkZWxldGUiOmZ1bmN0aW9uKHIpe3ZhciBvPWEoZSxyKTtvPi0xJiYoZS5zcGxpY2UobywxKSx0LnNwbGljZShvLDEpLHRoaXMuc2l6ZS0tKX0sZm9yRWFjaDpmdW5jdGlvbihyKXtmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rKylyLmNhbGwoYXJndW1lbnRzWzFdLHRbb10sZVtvXSx0aGlzKX19fSxsPWUuZ2V0T3duUHJvcGVydHlOYW1lcz9mdW5jdGlvbigpe3ZhciB0PWUuZ2V0T3duUHJvcGVydHlOYW1lczt0cnl7YXJndW1lbnRzLmNhbGxlZX1jYXRjaChyKXt2YXIgbz0odChhKS5qb2luKCIgIikrIiAiKS5yZXBsYWNlKC9wcm90b3R5cGUgfGxlbmd0aCB8bmFtZSAvZywiIikuc2xpY2UoMCwtMSkuc3BsaXQoIiAiKTtvLmxlbmd0aCYmKHQ9ZnVuY3Rpb24odCl7dmFyIHI9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0KWZvcih2YXIgbixpPTA7aTxvLmxlbmd0aDspKG49YShyLG9baSsrXSkpPi0xJiZyLnNwbGljZShuLDEpO3JldHVybiByfSl9cmV0dXJuIHR9KCk6ZnVuY3Rpb24odCl7dmFyIHIsbyxuPVtdO2lmKCJoYXNPd25Qcm9wZXJ0eSJpbiB0KWZvcihyIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShyKSYmbi5wdXNoKHIpO2Vsc2V7bz1lLmhhc093blByb3BlcnR5O2ZvcihyIGluIHQpby5jYWxsKHQscikmJm4ucHVzaChyKX1yZXR1cm4gYyh0KSYmbi5wdXNoKCJsZW5ndGgiKSxufSxmPWUuZ2V0UHJvdG90eXBlT2YsZD1lLmRlZmluZVByb3BlcnRpZXMmJmUuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLF89ci5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHIud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbigpe3ZhciBlPStuZXcgRGF0ZSx0PWU7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cigodD0rbmV3IERhdGUpLWUpfSwxNyl9fSgpLHA9ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPW4uZ2V0KGUpO28/KGgobyxlKSxtKGUsbyx0LHIpKToobz1iKGUpLG0oZSxvLHQsciksMT09PW4uc2l6ZSYmXyh5KSl9LGI9ZnVuY3Rpb24odCxyKXt2YXIgbyxpPWwodCkscz1bXSxjPTAscj17aGFuZGxlcnM6dSgpLGZyb3plbjohIWUuaXNGcm96ZW4mJmUuaXNGcm96ZW4odCksZXh0ZW5zaWJsZTohZS5pc0V4dGVuc2libGV8fGUuaXNFeHRlbnNpYmxlKHQpLHByb3RvOmYmJmYodCkscHJvcGVydGllczppLHZhbHVlczpzLG5vdGlmaWVyOmoodCxyKX07aWYoZClmb3Iobz1yLmRlc2NyaXB0b3JzPVtdO2M8aS5sZW5ndGg7KW9bY109ZCh0LGlbY10pLHNbY109dFtpW2MrK11dO2Vsc2UgZm9yKDtjPGkubGVuZ3RoOylzW2NdPXRbaVtjKytdXTtyZXR1cm4gbi5zZXQodCxyKSxyfSxoPWZ1bmN0aW9uKCl7dmFyIHQ9ZD9mdW5jdGlvbihlLHQscixvLG4pe3ZhciBpPXQucHJvcGVydGllc1tyXSxzPWVbaV0sYz10LnZhbHVlc1tyXSxhPXQuZGVzY3JpcHRvcnNbcl07InZhbHVlImluIG4mJihjPT09cz8wPT09YyYmMS9jIT09MS9zOmM9PT1jfHxzPT09cykmJihnKGUsdCx7bmFtZTppLHR5cGU6InVwZGF0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6Y30sbyksdC52YWx1ZXNbcl09cyksIWEuY29uZmlndXJhYmxlfHxuLmNvbmZpZ3VyYWJsZSYmbi53cml0YWJsZT09PWEud3JpdGFibGUmJm4uZW51bWVyYWJsZT09PWEuZW51bWVyYWJsZSYmbi5nZXQ9PT1hLmdldCYmbi5zZXQ9PT1hLnNldHx8KGcoZSx0LHtuYW1lOmksdHlwZToicmVjb25maWd1cmUiLG9iamVjdDplLG9sZFZhbHVlOmN9LG8pLHQuZGVzY3JpcHRvcnNbcl09bil9OmZ1bmN0aW9uKGUsdCxyLG8pe3ZhciBuPXQucHJvcGVydGllc1tyXSxpPWVbbl0scz10LnZhbHVlc1tyXTsocz09PWk/MD09PXMmJjEvcyE9PTEvaTpzPT09c3x8aT09PWkpJiYoZyhlLHQse25hbWU6bix0eXBlOiJ1cGRhdGUiLG9iamVjdDplLG9sZFZhbHVlOnN9LG8pLHQudmFsdWVzW3JdPWkpfSxyPWQ/ZnVuY3Rpb24oZSxyLG8sbixpKXtmb3IodmFyIHMsYz1yLmxlbmd0aDtvJiZjLS07KW51bGwhPT1yW2NdJiYocz1kKGUscltjXSksby0tLHM/dChlLG4sYyxpLHMpOihnKGUsbix7bmFtZTpyW2NdLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6bi52YWx1ZXNbY119LGkpLG4ucHJvcGVydGllcy5zcGxpY2UoYywxKSxuLnZhbHVlcy5zcGxpY2UoYywxKSxuLmRlc2NyaXB0b3JzLnNwbGljZShjLDEpKSl9OmZ1bmN0aW9uKGUsdCxyLG8sbil7Zm9yKHZhciBpPXQubGVuZ3RoO3ImJmktLTspbnVsbCE9PXRbaV0mJihnKGUsbyx7bmFtZTp0W2ldLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6by52YWx1ZXNbaV19LG4pLG8ucHJvcGVydGllcy5zcGxpY2UoaSwxKSxvLnZhbHVlcy5zcGxpY2UoaSwxKSxyLS0pfTtyZXR1cm4gZnVuY3Rpb24obyxuLGkpe2lmKG8uaGFuZGxlcnMuc2l6ZSYmIW8uZnJvemVuKXt2YXIgcyxjLHUsXyxwLGIsaCx5LHY9by52YWx1ZXMsaj1vLmRlc2NyaXB0b3JzLG09MDtpZihvLmV4dGVuc2libGUpaWYocz1vLnByb3BlcnRpZXMuc2xpY2UoKSxjPXMubGVuZ3RoLHU9bChuKSxqKXtmb3IoO208dS5sZW5ndGg7KXA9dVttKytdLF89YShzLHApLHk9ZChuLHApLF89PT0tMT8oZyhuLG8se25hbWU6cCx0eXBlOiJhZGQiLG9iamVjdDpufSxpKSxvLnByb3BlcnRpZXMucHVzaChwKSx2LnB1c2gobltwXSksai5wdXNoKHkpKTooc1tfXT1udWxsLGMtLSx0KG4sbyxfLGkseSkpO3IobixzLGMsbyxpKSxlLmlzRXh0ZW5zaWJsZShuKXx8KG8uZXh0ZW5zaWJsZT0hMSxnKG4sbyx7dHlwZToicHJldmVudEV4dGVuc2lvbnMiLG9iamVjdDpufSxpKSxvLmZyb3plbj1lLmlzRnJvemVuKG4pKX1lbHNle2Zvcig7bTx1Lmxlbmd0aDspcD11W20rK10sXz1hKHMscCksYj1uW3BdLF89PT0tMT8oZyhuLG8se25hbWU6cCx0eXBlOiJhZGQiLG9iamVjdDpufSxpKSxvLnByb3BlcnRpZXMucHVzaChwKSx2LnB1c2goYikpOihzW19dPW51bGwsYy0tLHQobixvLF8saSkpO3IobixzLGMsbyxpKX1lbHNlIGlmKCFvLmZyb3plbil7Zm9yKDttPHMubGVuZ3RoO20rKylwPXNbbV0sdChuLG8sbSxpLGQobixwKSk7ZS5pc0Zyb3plbihuKSYmKG8uZnJvemVuPSEwKX1mJiYoaD1mKG4pLGghPT1vLnByb3RvJiYoZyhuLG8se3R5cGU6InNldFByb3RvdHlwZSIsbmFtZToiX19wcm90b19fIixvYmplY3Q6bixvbGRWYWx1ZTpvLnByb3RvfSksby5wcm90bz1oKSl9fX0oKSx5PWZ1bmN0aW9uKCl7bi5zaXplJiYobi5mb3JFYWNoKGgpLGkuZm9yRWFjaCh2KSxfKHkpKX0sdj1mdW5jdGlvbihlLHQpe3ZhciByPWUuY2hhbmdlUmVjb3JkcztyLmxlbmd0aCYmKGUuY2hhbmdlUmVjb3Jkcz1bXSx0KHIpKX0saj1mdW5jdGlvbihlLHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDImJih0PW4uZ2V0KGUpKSx0JiZ0Lm5vdGlmaWVyfHx7bm90aWZ5OmZ1bmN0aW9uKHQpe3QudHlwZTt2YXIgcj1uLmdldChlKTtpZihyKXt2YXIgbyxpPXtvYmplY3Q6ZX07Zm9yKG8gaW4gdCkib2JqZWN0IiE9PW8mJihpW29dPXRbb10pO2coZSxyLGkpfX0scGVyZm9ybUNoYW5nZTpmdW5jdGlvbih0LHIpe2lmKCJzdHJpbmciIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcgY2hhbmdlVHlwZSIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBwZXJmb3JtIG5vbi1mdW5jdGlvbiIpO3ZhciBpLHMsYz1uLmdldChlKSxhPWFyZ3VtZW50c1syXSx1PWE9PT1vP3IoKTpyLmNhbGwoYSk7aWYoYyYmaChjLGUsdCksYyYmdSYmIm9iamVjdCI9PXR5cGVvZiB1KXtzPXtvYmplY3Q6ZSx0eXBlOnR9O2ZvcihpIGluIHUpIm9iamVjdCIhPT1pJiYidHlwZSIhPT1pJiYoc1tpXT11W2ldKTtnKGUsYyxzKX19fX0sbT1mdW5jdGlvbihlLHQscixvKXt2YXIgbj1pLmdldChyKTtufHxpLnNldChyLG49e29ic2VydmVkOnUoKSxjaGFuZ2VSZWNvcmRzOltdfSksbi5vYnNlcnZlZC5zZXQoZSx7YWNjZXB0TGlzdDpvLnNsaWNlKCksZGF0YTp0fSksdC5oYW5kbGVycy5zZXQocixuKX0sZz1mdW5jdGlvbihlLHQscixvKXt0LmhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49dC5vYnNlcnZlZC5nZXQoZSkuYWNjZXB0TGlzdDsoInN0cmluZyIhPXR5cGVvZiBvfHxhKG4sbyk9PT0tMSkmJmEobixyLnR5cGUpPi0xJiZ0LmNoYW5nZVJlY29yZHMucHVzaChyKX0pfTtuPXUoKSxpPXUoKSxlLm9ic2VydmU9ZnVuY3Rpb24odCxyLG4pe2lmKCF0fHwib2JqZWN0IiE9dHlwZW9mIHQmJiJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBvYnNlcnZlIG5vbi1vYmplY3QiKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygcil0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3Qub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTtpZihlLmlzRnJvemVuJiZlLmlzRnJvemVuKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIGEgZnJvemVuIGZ1bmN0aW9uIG9iamVjdCIpO2lmKG49PT1vKW49cztlbHNlIGlmKCFufHwib2JqZWN0IiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcigiVGhpcmQgYXJndW1lbnQgdG8gT2JqZWN0Lm9ic2VydmUgbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzLiIpO3JldHVybiBwKHQscixuKSx0fSxlLnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PT1lfHwib2JqZWN0IiE9dHlwZW9mIGUmJiJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC51bm9ic2VydmUgY2Fubm90IHVub2JzZXJ2ZSBub24tb2JqZWN0Iik7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LnVub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTt2YXIgcixvPWkuZ2V0KHQpO3JldHVybiBvJiYocj1vLm9ic2VydmVkLmdldChlKSkmJihvLm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLF8oZnVuY3Rpb24oKXt2KG8sdCl9KSwxPT09by5vYnNlcnZlZC5zaXplJiZvLm9ic2VydmVkLmhhcyhlKT9pWyJkZWxldGUiXSh0KTpvLm9ic2VydmVkWyJkZWxldGUiXShlKSwxPT09ci5kYXRhLmhhbmRsZXJzLnNpemU/blsiZGVsZXRlIl0oZSk6ci5kYXRhLmhhbmRsZXJzWyJkZWxldGUiXSh0KSksZX0sZS5nZXROb3RpZmllcj1mdW5jdGlvbih0KXtpZihudWxsPT09dHx8Im9iamVjdCIhPXR5cGVvZiB0JiYiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QuZ2V0Tm90aWZpZXIgY2Fubm90IGdldE5vdGlmaWVyIG5vbi1vYmplY3QiKTtyZXR1cm4gZS5pc0Zyb3plbiYmZS5pc0Zyb3plbih0KT9udWxsOmoodCl9LGUuZGVsaXZlckNoYW5nZVJlY29yZHM9ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LmRlbGl2ZXJDaGFuZ2VSZWNvcmRzIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO3ZhciB0PWkuZ2V0KGUpO3QmJih0Lm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLHYodCxlKSl9fShPYmplY3QsQXJyYXksdGhpcyl9LHt9XSwxMTQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5EYXRhT2JqZWN0T2JzZXJ2ZXI9ci5EYXRhT2JqZWN0UmVwb3J0ZXI9ci5TeW5jaGVyPXZvaWQgMCxlKCJvYmplY3Qub2JzZXJ2ZSIpLGUoImFycmF5Lm9ic2VydmUiKTt2YXIgbj1lKCIuL3N5bmNoZXIvU3luY2hlciIpLGk9byhuKSxzPWUoIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxjPW8ocyksYT1lKCIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIiksdT1vKGEpO3IuU3luY2hlcj1pWyJkZWZhdWx0Il0sci5EYXRhT2JqZWN0UmVwb3J0ZXI9Y1siZGVmYXVsdCJdLHIuRGF0YU9iamVjdE9ic2VydmVyPXVbImRlZmF1bHQiXX0seyIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIjoxMTcsIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOCwiLi9zeW5jaGVyL1N5bmNoZXIiOjEyMSwiYXJyYXkub2JzZXJ2ZSI6MSwib2JqZWN0Lm9ic2VydmUiOjExM31dLDExNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHU9byhhKSxsPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGY9byhsKSxkPWUoIi4vU3luY09iamVjdCIpLF89byhkKSxwPWUoIi4vRGF0YU9iamVjdENoaWxkIiksYj1vKHApLGg9ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSx5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBjPXRoaXM7Yy5fc3luY2hlcj10LGMuX3VybD1yLGMuX3NjaGVtYT1vLGMuX3N0YXR1cz1uLGMuX3N5bmNPYmo9bmV3IF9bImRlZmF1bHQiXShpKSxjLl9jaGlsZHJlbnM9cyxjLl92ZXJzaW9uPTAsYy5fY2hpbGRJZD0wLGMuX2NoaWxkcmVuT2JqZWN0cz17fSxjLl9jaGlsZHJlbkxpc3RlbmVycz1bXSxjLl9vd25lcj10Ll9vd25lcixjLl9idXM9dC5fYnVzfXJldHVybigwLGZbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLHI9dC5fdXJsKyIvY2hpbGRyZW4vIjt0Ll9jaGlsZHJlbnMmJnQuX2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKG8pe3ZhciBuPXIrbyxpPXQuX2J1cy5hZGRMaXN0ZW5lcihuLGZ1bmN0aW9uKHIpe2lmKHIuZnJvbSE9PWUuX293bmVyKXN3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC1DaGlsZHJlbi1SQ1Y6ICIsciksci50eXBlKXtjYXNlImNyZWF0ZSI6dC5fb25DaGlsZENyZWF0ZShyKTticmVhaztjYXNlImRlbGV0ZSI6Y29uc29sZS5sb2cocik7YnJlYWs7ZGVmYXVsdDp0Ll9jaGFuZ2VDaGlsZHJlbihyKX19KTt0Ll9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5yZW1vdmUoKX0pLCgwLGNbImRlZmF1bHQiXSkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoaWxkcmVuT2JqZWN0c1t0XS5fcmVsZWFzZUxpc3RlbmVycygpfSl9fSx7a2V5OiJwYXVzZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToicmVzdW1lIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJzdG9wIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJhZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3IuX2NoaWxkSWQrKzt2YXIgbz1yLl9vd25lcisiIyIrci5fY2hpbGRJZCxuPXIuX3VybCsiL2NoaWxkcmVuLyIrZSxzPXt0eXBlOiJjcmVhdGUiLGZyb206ci5fb3duZXIsdG86bixib2R5OntyZXNvdXJjZTpvLHZhbHVlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlKXt2YXIgaT1yLl9idXMucG9zdE1lc3NhZ2Uocyk7Y29uc29sZS5sb2coImNyZWF0ZS1yZXBvcnRlci1jaGlsZCggIityLl9vd25lcisiICk6ICIscyk7dmFyIGM9bmV3IGJbImRlZmF1bHQiXShyLG8sdCxyLl9vd25lcixpKTtjLm9uQ2hhbmdlKGZ1bmN0aW9uKGUpe3IuX29uQ2hhbmdlKGUse3BhdGg6bixjaGlsZElkOm99KX0pLHIuX2NoaWxkcmVuT2JqZWN0c1tvXT1jLGUoYyl9KX19LHtrZXk6Im9uQWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyPWV9fSx7a2V5OiJfb25DaGlsZENyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZTtjb25zb2xlLmxvZygiY3JlYXRlLW9ic2VydmVyLWNoaWxkKCAiK3QuX293bmVyKyIgKTogIixlKTt2YXIgbz1uZXcgYlsiZGVmYXVsdCJdKHQscixlLmJvZHkudmFsdWUpO3QuX2NoaWxkcmVuT2JqZWN0c1tyXT1vLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc291cmNlOnQuX293bmVyfX0pfSk7dmFyIG49e3R5cGU6ZS50eXBlLGZyb206ZS5mcm9tLHVybDplLnRvLHZhbHVlOmUuYm9keS52YWx1ZSxjaGlsZElkOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5fTt0Ll9vbkFkZENoaWxkcmVuSGFuZGxlciYmKGNvbnNvbGUubG9nKCJBREQtQ0hJTERSRU4tRVZFTlQ6ICIsbiksdC5fb25BZGRDaGlsZHJlbkhhbmRsZXIobikpfX0se2tleToiX29uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fdmVyc2lvbisrLCJvbiI9PT1yLl9zdGF0dXMpe3ZhciBvPXt0eXBlOiJ1cGRhdGUiLGZyb206ci5fdXJsLHRvOnIuX3VybCsiL2NoYW5nZXMiLGJvZHk6e3ZlcnNpb246ci5fdmVyc2lvbixzb3VyY2U6ci5fb3duZXIsYXR0cmlidXRlOmUuZmllbGR9fTtlLm9UeXBlPT09ZC5PYmplY3RUeXBlLk9CSkVDVD9lLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSYmKG8uYm9keS52YWx1ZT1lLmRhdGEpOihvLmJvZHkuYXR0cmlidXRlVHlwZT1lLm9UeXBlLG8uYm9keS52YWx1ZT1lLmRhdGEsZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5VUERBVEUmJihvLmJvZHkub3BlcmF0aW9uPWUuY1R5cGUpKSx0JiYoby50bz10LnBhdGgsby5ib2R5LnJlc291cmNlPXQuY2hpbGRJZCksci5fYnVzLnBvc3RNZXNzYWdlKG8pfX19LHtrZXk6Il9jaGFuZ2VPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl92ZXJzaW9uKzE9PT10LmJvZHkudmVyc2lvbil7ci5fdmVyc2lvbisrO3ZhciBvPXQuYm9keS5hdHRyaWJ1dGUsbj0oMCxoLmRlZXBDbG9uZSkodC5ib2R5LnZhbHVlKSxpPWUuZmluZEJlZm9yZShvKTtpZih0LmJvZHkuYXR0cmlidXRlVHlwZT09PWQuT2JqZWN0VHlwZS5BUlJBWSlpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLkFERCl7dmFyIHM9aS5vYmosYz1pLmxhc3Q7QXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShzLFtjLDBdLmNvbmNhdChuKSl9ZWxzZSBpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSl7dmFyIGE9aS5vYmosdT1pLmxhc3Q7YS5zcGxpY2UodSxuKX1lbHNlIGkub2JqW2kubGFzdF09bjtlbHNlIHQuYm9keS52YWx1ZT9pLm9ialtpLmxhc3RdPW46ZGVsZXRlIGkub2JqW2kubGFzdF19ZWxzZSBjb25zb2xlLmxvZygiVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gIityLl92ZXJzaW9uKyIsIG1zZyA9PiAiK3QuYm9keS52ZXJzaW9uKyIpIil9fSx7a2V5OiJfY2hhbmdlQ2hpbGRyZW4iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Y29uc29sZS5sb2coIkNoYW5nZSBjaGlsZHJlbjogIix0Ll9vd25lcixlKTt2YXIgcj1lLmJvZHkucmVzb3VyY2Usbz10Ll9jaGlsZHJlbk9iamVjdHNbcl07bz90Ll9jaGFuZ2VPYmplY3Qoby5fc3luY09iaixlKTpjb25zb2xlLmxvZygiTm8gY2hpbGRyZW4gZm91bmQgZm9yOiAiLHIpfX0se2tleToidXJsIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0se2tleToic2NoZW1hIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NoZW1hfX0se2tleToic3RhdHVzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdHVzfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6ImNoaWxkcmVucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVuT2JqZWN0c319XSksZX0oKTtyWyJkZWZhdWx0Il09eSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjIsIi4vRGF0YU9iamVjdENoaWxkIjoxMTYsIi4vU3luY09iamVjdCI6MTIwLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo5LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTE2OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGM9byhzKSxhPWUoIi4vU3luY09iamVjdCIpLHU9byhhKSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuLHMpeygwLGlbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgYz10aGlzO2MuX3BhcmVudD10LGMuX2NoaWxkSWQ9cixjLl9vd25lcj1uLGMuX21zZ0lkPXMsYy5fc3luY09iaj1uZXcgdVsiZGVmYXVsdCJdKG8pLGMuX2J1cz10Ll9idXMsYy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX293bmVyJiYoZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX293bmVyLGZ1bmN0aW9uKHQpeyJyZXNwb25zZSI9PT10LnR5cGUmJnQuaWQ9PT1lLl9tc2dJZCYmKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZToiLHQpLGUuX29uUmVzcG9uc2UodCkpfSkpfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lciYmZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztkZWxldGUgZS5fcGFyZW50Ll9jaGlsZHJlbltlLl9jaGlsZElkXSxlLl9yZWxlYXNlTGlzdGVuZXJzKCl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKHQpe2UodCl9KX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5ib2R5LnNvdXJjZSxjb2RlOmUuYm9keS5jb2RlfTt0Ll9vblJlc3BvbnNlSGFuZGxlciYmdC5fb25SZXNwb25zZUhhbmRsZXIocil9fSx7a2V5OiJjaGlsZElkIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRJZH19LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWwsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL1N5bmNPYmplY3QiOjEyMCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDExNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW8oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW8obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLF89byhkKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW8ocCksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW8oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW8odiksbT1lKCIuL0RhdGFPYmplY3RDaGlsZCIpLGc9byhtKSx3PXtBTlk6ImFueSIsU1RBUlQ6InN0YXJ0IixFWEFDVDoiZXhhY3QifSxPPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG8sbixzLGEsbCl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBmPSgwLF9bImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbyxuLHMuZGF0YSxhKSksZD1mO3JldHVybiBkLl92ZXJzaW9uPWwsZC5fZmlsdGVycz17fSxkLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7ZC5fb25GaWx0ZXIoZSl9KSwoMCxpWyJkZWZhdWx0Il0pKHMuY2hpbGRyZW5zKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PXMuY2hpbGRyZW5zW2VdO2QuX2NoaWxkcmVuT2JqZWN0c1tlXT1uZXcgZ1siZGVmYXVsdCJdKGQsZSx0KX0pLGQuX2FsbG9jYXRlTGlzdGVuZXJzKCksZn1yZXR1cm4oMCx5WyJkZWZhdWx0Il0pKHQsZSksKDAsZlsiZGVmYXVsdCJdKSh0LFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCsiL2NoYW5nZXMiLGZ1bmN0aW9uKHQpeyJ1cGRhdGUiPT09dC50eXBlJiYoY29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdfX0se2tleToidW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJ1bnN1YnNjcmliZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLG89e3R5cGU6dy5FWEFDVCxjYWxsYmFjazp0fSxuPWUuaW5kZXhPZigiKiIpO249PT1lLmxlbmd0aC0xJiYoMD09PW4/by50eXBlPXcuQU5ZOihvLnR5cGU9dy5TVEFSVCxyPWUuc3Vic3RyKDAsZS5sZW5ndGgtMSkpKSx0aGlzLl9maWx0ZXJzW3JdPW99fSx7a2V5OiJfb25GaWx0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsaVsiZGVmYXVsdCJdKSh0Ll9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPXQuX2ZpbHRlcnNbcl07by50eXBlPT09dy5BTlk/by5jYWxsYmFjayhlKTpvLnR5cGU9PT13LlNUQVJUPzA9PT1lLmZpZWxkLmluZGV4T2YocikmJm8uY2FsbGJhY2soZSk6by50eXBlPT09dy5FWEFDVCYmZS5maWVsZD09PXImJm8uY2FsbGJhY2soZSl9KX19XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Tyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vRGF0YU9iamVjdCI6MTE1LCIuL0RhdGFPYmplY3RDaGlsZCI6MTE2LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExODpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW8oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW8obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLF89byhkKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW8ocCksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW8oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW8odiksbT1lKCIuLi91dGlscy91dGlscy5qcyIpLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbyxuLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBhPSgwLF9bImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbyxuLGkscykpLGw9YTtyZXR1cm4gbC5fc3Vic2NyaXB0aW9ucz17fSxsLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RSZXBvcnRlci0iK3IrIi1TRU5EOiAiLGUpLGwuX29uQ2hhbmdlKGUpfSksbC5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxhfXJldHVybigwLHlbImRlZmF1bHQiXSkodCxlKSwoMCxmWyJkZWZhdWx0Il0pKHQsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9vYmplY3RMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe3N3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC0iK2UuX3VybCsiLVJDVjogIix0KSx0LnR5cGUpe2Nhc2UicmVzcG9uc2UiOmUuX29uUmVzcG9uc2UodCk7YnJlYWs7Y2FzZSJyZWFkIjplLl9vblJlYWQodCl9fSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfcmVsZWFzZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX29iamVjdExpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiaW52aXRlT2JzZXJ2ZXJzIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ImNyZWF0ZSIsZnJvbTp0Ll9zeW5jaGVyLl9vd25lcix0bzp0Ll9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6dC5fdXJsLHNjaGVtYTp0Ll9zY2hlbWEsdmFsdWU6dC5fc3luY09iai5kYXRhLGF1dGhvcmlzZTplfX07dC5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToiZGVsZXRlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLURFTEVURTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fcmVwb3J0ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvblN1YnNjcmlwdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyPWV9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToib25SZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlYWRIYW5kbGVyPWV9fSx7a2V5OiJfb25Gb3J3YXJkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3N3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLVJDVjogIixlKSxlLmJvZHkudHlwZSl7Y2FzZSJzdWJzY3JpYmUiOnQuX29uU3Vic2NyaWJlKGUpO2JyZWFrO2Nhc2UidW5zdWJzY3JpYmUiOnQuX29uVW5TdWJzY3JpYmUoZSl9fX0se2tleToiX29uU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbz17dHlwZTplLmJvZHkudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNjZXB0OmZ1bmN0aW9uKCl7dmFyIG89e3VybDpyLHN0YXR1czoib24ifTt0Ll9zdWJzY3JpcHRpb25zW3JdPW87dmFyIG49e307cmV0dXJuKDAsaVsiZGVmYXVsdCJdKSh0Ll9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9dC5fY2hpbGRyZW5PYmplY3RzW2VdLmRhdGE7bltlXT0oMCxtLmRlZXBDbG9uZSkocil9KSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc2NoZW1hOnQuX3NjaGVtYSx2ZXJzaW9uOnQuX3ZlcnNpb24sdmFsdWU6e2RhdGE6KDAsbS5kZWVwQ2xvbmUpKHQuZGF0YSksY2hpbGRyZW5zOm59fX0pLG99LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDMsZGVzYzpyfX0pfX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIlNVQlNDUklQVElPTi1FVkVOVDogIixvKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIobykpfX0se2tleToiX29uVW5TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxvPXQuX3N1YnNjcmlwdGlvbnNbcl07ZGVsZXRlIHQuX3N1YnNjcmlwdGlvbnNbcl07dmFyIG49e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsb2JqZWN0Om99O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJVTi1TVUJTQ1JJUFRJT04tRVZFTlQ6ICIsbiksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKG4pKX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sY29kZTplLmJvZHkuY29kZX07dC5fb25SZXNwb25zZUhhbmRsZXImJihjb25zb2xlLmxvZygiUkVTUE9OU0UtRVZFTlQ6ICIsciksdC5fb25SZXNwb25zZUhhbmRsZXIocikpfX0se2tleToiX29uUmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGFjY2VwdDpmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCx2YWx1ZTooMCxtLmRlZXBDbG9uZSkodC5kYXRhKX19KX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMSxkZXNjOnJ9fSl9fTt0Ll9vblJlYWRIYW5kbGVyJiYoY29uc29sZS5sb2coIlJFQUQtRVZFTlQ6ICIsciksdC5fb25SZWFkSGFuZGxlcihyKSl9fSx7a2V5OiJzdWJzY3JpcHRpb25zIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3Vic2NyaXB0aW9uc319XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Zyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjIsIi4vRGF0YU9iamVjdCI6MTE1LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExOTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxjPW8ocyksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG8sbil7KDAsaVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBzPXRoaXM7cy5fb3duZXI9dCxzLl91cmw9cixzLl9idXM9byxzLl9jaGlsZHJlbj1uLHMuX2NoYW5nZXM9W10scy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFQcm92aXNpb25hbC0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VzLnB1c2godCl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJhcHBseSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9jaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCl9KX19LHtrZXk6ImNoaWxkcmVuIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW59fV0pLGV9KCk7clsiZGVmYXVsdCJdPWEsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIwOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuT2JqZWN0VHlwZT1yLkNoYW5nZVR5cGU9dm9pZCAwO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLHU9byhhKSxsPWUoIi4uL3V0aWxzL3V0aWxzLmpzIiksZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciByPXRoaXM7ci5fb2JzZXJ2ZXJzPVtdLHIuX2ZpbHRlcnM9e30sdD9yLl9kYXRhPSgwLGwuZGVlcENsb25lKSh0KTpyLl9kYXRhPXt9LHIuX2ludGVybmFsT2JzZXJ2ZShuZXcgZCxyLl9kYXRhKX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6Im9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5wdXNoKGUpfX0se2tleToiZmluZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zcGxpdCgiLiIpO3JldHVybiB0aGlzLl9maW5kV2l0aFNwbGl0KHQpfX0se2tleToiZmluZEJlZm9yZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e30scj1lLnNwbGl0KCIuIik7cmV0dXJuIHQubGFzdD1yLnBvcCgpLHQub2JqPXRoaXMuX2ZpbmRXaXRoU3BsaXQociksdH19LHtrZXk6Il9maW5kV2l0aFNwbGl0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9kYXRhO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7dD10W2VdfSksdH19LHtrZXk6Il9maXJlRXZlbnQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QoZSl9KX19LHtrZXk6Il9pc09ic2VydmFibGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbnN0cnVjdG9yPT09T2JqZWN0fHxlLmNvbnN0cnVjdG9yPT09QXJyYXl9fSx7a2V5OiJfaW50ZXJuYWxPYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5faXNPYnNlcnZhYmxlKHQpKXt2YXIgbz1mdW5jdGlvbih0KXtyLl9vbkNoYW5nZXMoZSx0KX07aWYodC5jb25zdHJ1Y3Rvcj09PU9iamVjdCl7T2JqZWN0Lm9ic2VydmUodCxvKTtmb3IodmFyIG4gaW4gdClyLl9pc09ic2VydmFibGUodFtuXSkmJnIuX2ludGVybmFsT2JzZXJ2ZShlWyJuZXciXShuKSx0W25dKX1lbHNlIGlmKHQuY29uc3RydWN0b3I9PT1BcnJheSl7QXJyYXkub2JzZXJ2ZSh0LG8pO2Zvcih2YXIgaSBpbiB0KWlmKHIuX2lzT2JzZXJ2YWJsZSh0W2ldKSl7dmFyIHM9ZVsibmV3Il0obmV3IF8odFtpXSxpKSk7ci5faW50ZXJuYWxPYnNlcnZlKHMsdFtpXSl9fX19fSx7a2V5OiJfb25DaGFuZ2VzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7Zm9yKHZhciBvIGluIHQpe3ZhciBuPXRbb10ub2JqZWN0LGk9dm9pZCAwO2lmKG4uY29uc3RydWN0b3I9PT1PYmplY3QmJihpPWIuT0JKRUNUKSxuLmNvbnN0cnVjdG9yPT09QXJyYXkmJihpPWIuQVJSQVkpLCJzcGxpY2UiPT09dFtvXS50eXBlKSFmdW5jdGlvbigpe3ZhciBzPXRbb10uaW5kZXgsYz1lWyJuZXciXSgiIitzKSxhPWMudG9TdHJpbmcoKSx1PXRbb10ucmVtb3ZlZC5sZW5ndGg7aWYoMCE9PXUpe3ZhciBmPXRbb10ucmVtb3ZlZDtmLmZvckVhY2goZnVuY3Rpb24odCxvKXtyLl9pc09ic2VydmFibGUodCkmJmUucmVtb3ZlSW5kZXgocytvKX0pLHIuX2ZpcmVFdmVudCh7Y1R5cGU6cC5SRU1PVkUsb1R5cGU6aSxmaWVsZDphLGRhdGE6dX0pfXZhciBkPXRbb10uYWRkZWRDb3VudDtpZigwIT09ZCl7dmFyIGI9bi5zbGljZShzLHMrZCk7Yi5mb3JFYWNoKGZ1bmN0aW9uKHQsbyl7aWYoci5faXNPYnNlcnZhYmxlKHQpKXt2YXIgbj1lWyJuZXciXShuZXcgXyh0LHMrbykpO3IuX2ludGVybmFsT2JzZXJ2ZShuLHQpfX0pLHIuX2ZpcmVFdmVudCh7Y1R5cGU6cC5BREQsb1R5cGU6aSxmaWVsZDphLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGIpfSl9cyE9PW4ubGVuZ3RoLTEmJmUucmVJbmRleEZyb20obil9KCk7ZWxzZXt2YXIgcz1lWyJuZXciXSh0W29dLm5hbWUpLGM9cy50b1N0cmluZygpO2lmKGMuaW5kZXhPZigiU3ltYm9sIikhPT0tMSljb250aW51ZTt2YXIgYT1uW3Rbb10ubmFtZV07InVwZGF0ZSI9PT10W29dLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6cC5VUERBVEUsb1R5cGU6aSxmaWVsZDpjLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGEpfSksImFkZCI9PT10W29dLnR5cGUmJih0aGlzLl9pbnRlcm5hbE9ic2VydmUocyxhKSx0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnAuQURELG9UeXBlOmksZmllbGQ6YyxkYXRhOigwLGwuZGVlcENsb25lKShhKX0pKSwiZGVsZXRlIj09PXRbb10udHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTpwLlJFTU9WRSxvVHlwZTppLGZpZWxkOmN9KX19fX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGF9fV0pLGV9KCksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSksdGhpcy5fcGF0aD1bXSx0aGlzLl9vYnNlcnZhYmxlcz17fX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6InJlbW92ZUluZGV4Iix2YWx1ZTpmdW5jdGlvbihlKXtkZWxldGUgdGhpcy5fb2JzZXJ2YWJsZXNbZV19fSx7a2V5OiJyZUluZGV4RnJvbSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczsoMCxpWyJkZWZhdWx0Il0pKHRoaXMuX29ic2VydmFibGVzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPXQuX29ic2VydmFibGVzW3JdLG49ZS5pbmRleE9mKG8ub2JqKTtvLmlkeCE9biYmKG8uaWR4PW4sZGVsZXRlIHQuX29ic2VydmFibGVzW3JdLHQuX29ic2VydmFibGVzW25dPW8pfSl9fSx7a2V5OiJuZXciLHZhbHVlOmZ1bmN0aW9uKGUpe2UuY29uc3RydWN0b3I9PV8mJih0aGlzLl9vYnNlcnZhYmxlc1tlLmlkeF09ZSk7dmFyIHQ9dGhpcy5jbG9uZSgpO3JldHVybiB0Ll9wYXRoLnB1c2goZSksdH19LHtrZXk6ImNsb25lIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PW5ldyBlO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24oZSl7dC5fcGF0aC5wdXNoKGUpfSksdH19LHtrZXk6InRvU3RyaW5nIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPSIiO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24odCxyKXswPT09cj9lPXQudG9TdHJpbmcoKTplKz0iLiIrdC50b1N0cmluZygpfSksZX19XSksZX0oKSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLm9iaj10LHRoaXMuaWR4PXJ9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJ0b1N0cmluZyIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pZHgudG9TdHJpbmcoKX19XSksZX0oKSxwPXIuQ2hhbmdlVHlwZT17VVBEQVRFOiJ1cGRhdGUiLEFERDoiYWRkIixSRU1PVkU6InJlbW92ZSJ9LGI9ci5PYmplY3RUeXBlPXtPQkpFQ1Q6Im9iamVjdCIsQVJSQVk6ImFycmF5In07clsiZGVmYXVsdCJdPWZ9LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIxOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1vKG4pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksYz1vKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksdT1vKGEpLGw9ZSgiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxmPW8obCksZD1lKCIuL0RhdGFPYmplY3RPYnNlcnZlciIpLF89byhkKSxwPWUoIi4vRGF0YVByb3Zpc2lvbmFsIiksYj1vKHApLGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixvKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIG49dGhpcztuLl9vd25lcj10LG4uX2J1cz1yLG4uX3N1YlVSTD1vLnJ1bnRpbWVVUkwrIi9zbSIsbi5fcmVwb3J0ZXJzPXt9LG4uX29ic2VydmVycz17fSxuLl9wcm92aXNpb25hbHM9e30sci5hZGRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKGNvbnNvbGUubG9nKCJTeW5jaGVyLVJDVjogIixlKSxlLnR5cGUpe2Nhc2UiZm9yd2FyZCI6bi5fb25Gb3J3YXJkKGUpO2JyZWFrO2Nhc2UiY3JlYXRlIjpuLl9vblJlbW90ZUNyZWF0ZShlKTticmVhaztjYXNlImRlbGV0ZSI6bi5fb25SZW1vdGVEZWxldGUoZSl9fSl9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJjcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbz10aGlzO3IucmVwb3J0ZXI9by5fb3duZXIsci5zY2hlbWE9ZTt2YXIgbj17dHlwZToiY3JlYXRlIixmcm9tOm8uX293bmVyLHRvOm8uX3N1YlVSTCxib2R5OntzY2hlbWE6ZSx2YWx1ZTpyLGF1dGhvcmlzZTp0fX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24odCxpKXtvLl9idXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihuKXtpZihjb25zb2xlLmxvZygiY3JlYXRlLXJlc3BvbnNlOiAiLG4pLDIwMD09PW4uYm9keS5jb2RlKXt2YXIgcz1uLmJvZHkucmVzb3VyY2UsYz1uZXcgZlsiZGVmYXVsdCJdKG8scyxlLCJvbiIscixuLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpO28uX3JlcG9ydGVyc1tzXT1jLHQoYyl9ZWxzZSBpKG4uYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJzdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxvPXt0eXBlOiJzdWJzY3JpYmUiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e3NjaGVtYTplLHJlc291cmNlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihuLGkpe3IuX2J1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKG8pe2NvbnNvbGUubG9nKCJzdWJzY3JpYmUtcmVzcG9uc2U6ICIsbyk7dmFyIHM9ci5fcHJvdmlzaW9uYWxzW3RdO2lmKGRlbGV0ZSByLl9wcm92aXNpb25hbHNbdF0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLG8uYm9keS5jb2RlPDIwMClzPW5ldyBiWyJkZWZhdWx0Il0oci5fb3duZXIsdCxyLl9idXMsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSxyLl9wcm92aXNpb25hbHNbdF09cztlbHNlIGlmKDIwMD09PW8uYm9keS5jb2RlKXt2YXIgYz1uZXcgX1siZGVmYXVsdCJdKHIsdCxlLCJvbiIsby5ib2R5LnZhbHVlLHMuY2hpbGRyZW4sby5ib2R5LnZlcnNpb24pO3IuX29ic2VydmVyc1t0XT1jLG4oYykscy5hcHBseShjKX1lbHNlIGkoby5ib2R5LmRlc2MpfSl9KX19LHtrZXk6InJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZToicmVhZCIsZnJvbTp0Ll9vd25lcix0bzplfTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLG8pe3QuX2J1cy5wb3N0TWVzc2FnZShyLGZ1bmN0aW9uKHQpew0KY29uc29sZS5sb2coInJlYWQtcmVzcG9uc2U6ICIsdCksMjAwPT09dC5ib2R5LmNvZGU/ZSh0LmJvZHkudmFsdWUpOm8odC5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Im9uTm90aWZpY2F0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXI9ZX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10Ll9yZXBvcnRlcnNbZS5ib2R5LnRvXTtyLl9vbkZvcndhcmQoZSl9fSx7a2V5OiJfb25SZW1vdGVDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmZyb20uc2xpY2UoMCwtMTMpLG89e3R5cGU6ZS50eXBlLGZyb206ZS5ib2R5LnNvdXJjZSx1cmw6cixzY2hlbWE6ZS5ib2R5LnNjaGVtYSx2YWx1ZTplLmJvZHkudmFsdWUsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbz0yMDA7ciYmKG89ciksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6b319KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsbyksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG8pKX19LHtrZXk6Il9vblJlbW90ZURlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZSxvPXQuX29ic2VydmVyc1tyXTtpZihvKXt2YXIgbj17dHlwZTplLnR5cGUsdXJsOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbj0yMDA7ciYmKG49ciksMjAwPT09biYmb1siZGVsZXRlIl0oKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpuLHNvdXJjZTp0Ll9vd25lcn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsbiksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG4pKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwNCxzb3VyY2U6dC5fb3duZXJ9fSl9fSx7a2V5OiJvd25lciIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX293bmVyfX0se2tleToicmVwb3J0ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVwb3J0ZXJzfX0se2tleToib2JzZXJ2ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzfX1dKSxlfSgpO3JbImRlZmF1bHQiXT1oLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi9EYXRhT2JqZWN0T2JzZXJ2ZXIiOjExNywiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOCwiLi9EYXRhUHJvdmlzaW9uYWwiOjExOSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjksImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMjI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1mdW5jdGlvbiBuKGUpe2lmKCFlKXRocm93IEVycm9yKCJVUkwgaXMgbmVlZGVkIHRvIHNwbGl0Iik7dmFyIHQ9LyhbYS16QS1aLV0qKTpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2kscj0iJDEsJDIsJDMiLG89ZS5yZXBsYWNlKHQscikuc3BsaXQoIiwiKTtvWzBdPT09ZSYmKG9bMF09Imh0dHBzIixvWzFdPWUpO3ZhciBuPXt0eXBlOm9bMF0sZG9tYWluOm9bMV0saWRlbnRpdHk6b1syXX07cmV0dXJuIG59ZnVuY3Rpb24gaShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKSxyPXt1c2VybmFtZTplLnN1YnN0cmluZygwLHQpLGRvbWFpbjplLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpfTtyZXR1cm4gcn1mdW5jdGlvbiBzKGUpe3JldHVybiEoKDAscFsiZGVmYXVsdCJdKShlKS5sZW5ndGg+MCl9ZnVuY3Rpb24gYyhlKXtpZihlKXJldHVybiBKU09OLnBhcnNlKCgwLGRbImRlZmF1bHQiXSkoZSkpfWZ1bmN0aW9uIGEoZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJuInVzZXI6Ly8iK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsdCl9ZnVuY3Rpb24gdShlKXt2YXIgdD1uKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoIi8iLCIiKSsiQCIrdC5kb21haW59ZnVuY3Rpb24gbChlKXtpZigidXNlcjovLyI9PT1lLnN1YnN0cmluZygwLDcpKXt2YXIgdD1uKGUpO2lmKHQuZG9tYWluJiZ0LmlkZW50aXR5KXJldHVybiBlO3Rocm93InVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQifXJldHVybiBhKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgZj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiKSxkPW8oZiksXz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxwPW8oXyk7ci5kaXZpZGVVUkw9bixyLmRpdmlkZUVtYWlsPWksci5lbXB0eU9iamVjdD1zLHIuZGVlcENsb25lPWMsci5nZXRVc2VyVVJMRnJvbUVtYWlsPWEsci5nZXRVc2VyRW1haWxGcm9tVVJMPXUsci5jb252ZXJ0VG9Vc2VyVVJMPWx9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoyLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjd9XX0se30sWzExNF0pKDExNCl9KTsNCg0KCn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSAidW5kZWZpbmVkIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSAidW5kZWZpbmVkIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSAidW5kZWZpbmVkIiA/IHdpbmRvdyA6IHt9KQp9LHt9XSw0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKInVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogICAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTsKCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKLyoqDQogKiBTaW1wbGUgY2xhc3MgZm9yIGVhc2llciBsb2dnaW5nDQogKi8KCnZhciBMb2dnZXIgPSBmdW5jdGlvbiAoKSB7CiAgICBmdW5jdGlvbiBMb2dnZXIobmFtZSkgewogICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2dnZXIpOwoKICAgICAgICB0aGlzLnByZWZpeCA9IG5hbWUgKyAiICI7CiAgICAgICAgdGhpcy5jID0gY29uc29sZTsKICAgIH0KCiAgICBfY3JlYXRlQ2xhc3MoTG9nZ2VyLCBbewogICAgICAgIGtleTogImQiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiBkKG1zZykgewogICAgICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICAgICAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldOwogICAgICAgICAgICB9CgogICAgICAgICAgICBhcmd1bWVudHNbMF0gPSB0aGlzLnByZWZpeCArIGFyZ3VtZW50c1swXTsKICAgICAgICAgICAgdGhpcy5jLmRlYnVnLmFwcGx5KHRoaXMuYywgYXJndW1lbnRzKTsKICAgICAgICB9CiAgICB9LCB7CiAgICAgICAga2V5OiAibCIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGwobXNnKSB7CiAgICAgICAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yID4gMSA/IF9sZW4yIC0gMSA6IDApLCBfa2V5MiA9IDE7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHsKICAgICAgICAgICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGFyZ3VtZW50c1swXSA9IHRoaXMucHJlZml4ICsgYXJndW1lbnRzWzBdOwogICAgICAgICAgICB0aGlzLmMubG9nLmFwcGx5KHRoaXMuYywgYXJndW1lbnRzKTsKICAgICAgICB9CiAgICB9LCB7CiAgICAgICAga2V5OiAiaSIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGkobXNnKSB7CiAgICAgICAgICAgIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4zID4gMSA/IF9sZW4zIC0gMSA6IDApLCBfa2V5MyA9IDE7IF9rZXkzIDwgX2xlbjM7IF9rZXkzKyspIHsKICAgICAgICAgICAgICAgIGFyZ3NbX2tleTMgLSAxXSA9IGFyZ3VtZW50c1tfa2V5M107CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGFyZ3VtZW50c1swXSA9IHRoaXMucHJlZml4ICsgYXJndW1lbnRzWzBdOwogICAgICAgICAgICB0aGlzLmMuaW5mby5hcHBseSh0aGlzLmMsIGFyZ3VtZW50cyk7CiAgICAgICAgfQogICAgfSwgewogICAgICAgIGtleTogInciLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiB3KG1zZykgewogICAgICAgICAgICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuNCA+IDEgPyBfbGVuNCAtIDEgOiAwKSwgX2tleTQgPSAxOyBfa2V5NCA8IF9sZW40OyBfa2V5NCsrKSB7CiAgICAgICAgICAgICAgICBhcmdzW19rZXk0IC0gMV0gPSBhcmd1bWVudHNbX2tleTRdOwogICAgICAgICAgICB9CgogICAgICAgICAgICBhcmd1bWVudHNbMF0gPSB0aGlzLnByZWZpeCArIGFyZ3VtZW50c1swXTsKICAgICAgICAgICAgdGhpcy5jLndhcm4uYXBwbHkodGhpcy5jLCBhcmd1bWVudHMpOwogICAgICAgIH0KICAgIH0sIHsKICAgICAgICBrZXk6ICJlIiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZShtc2cpIHsKICAgICAgICAgICAgZm9yICh2YXIgX2xlbjUgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjUgPiAxID8gX2xlbjUgLSAxIDogMCksIF9rZXk1ID0gMTsgX2tleTUgPCBfbGVuNTsgX2tleTUrKykgewogICAgICAgICAgICAgICAgYXJnc1tfa2V5NSAtIDFdID0gYXJndW1lbnRzW19rZXk1XTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgYXJndW1lbnRzWzBdID0gdGhpcy5wcmVmaXggKyBhcmd1bWVudHNbMF07CiAgICAgICAgICAgIHRoaXMuYy5lcnJvci5hcHBseSh0aGlzLmMsIGFyZ3VtZW50cyk7CiAgICAgICAgfQogICAgfV0pOwoKICAgIHJldHVybiBMb2dnZXI7Cn0oKTsKCmV4cG9ydHMuZGVmYXVsdCA9IExvZ2dlcjsKbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWyJkZWZhdWx0Il07Cgp9LHt9XSw1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogICAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsgfSB9OyB9KCk7Cgp2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTsKCmV4cG9ydHMuZGVmYXVsdCA9IGFjdGl2YXRlOwoKdmFyIF9TeW5jaGVyID0gcmVxdWlyZSgnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyJyk7Cgp2YXIgX0h5cGVydHlEaXNjb3ZlcnkgPSByZXF1aXJlKCdzZXJ2aWNlLWZyYW1ld29yay9kaXN0L0h5cGVydHlEaXNjb3ZlcnknKTsKCnZhciBfSHlwZXJ0eURpc2NvdmVyeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9IeXBlcnR5RGlzY292ZXJ5KTsKCnZhciBfSWRlbnRpdHlNYW5hZ2VyID0gcmVxdWlyZSgnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9JZGVudGl0eU1hbmFnZXInKTsKCnZhciBfSWRlbnRpdHlNYW5hZ2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0lkZW50aXR5TWFuYWdlcik7Cgp2YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvdXRpbHMnKTsKCnZhciBfRXZlbnRFbWl0dGVyMiA9IHJlcXVpcmUoJy4uL3V0aWxzL0V2ZW50RW1pdHRlcicpOwoKdmFyIF9FdmVudEVtaXR0ZXIzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRXZlbnRFbWl0dGVyMik7Cgp2YXIgX0xvZ2dlciA9IHJlcXVpcmUoJy4vTG9nZ2VyJyk7Cgp2YXIgX0xvZ2dlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Mb2dnZXIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSA/IGNhbGwgOiBzZWxmOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfSAvKiBqc2hpbnQgdW5kZWY6IHRydWUgKi8KCnZhciBsID0gbmV3IF9Mb2dnZXIyLmRlZmF1bHQoIlJPT01VSSIpOwp2YXIgcm9vbVNlcnZlcklkZW50aXR5ID0gIm9wZW5pZHRlc3QxMEBnbWFpbC5jb20iOwoKdmFyIFJvb21DbGllbnQgPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikgewogICAgX2luaGVyaXRzKFJvb21DbGllbnQsIF9FdmVudEVtaXR0ZXIpOwoKICAgIC8qKg0KICAgICAqIENyZWF0ZSBhIG5ldyBSb29tQ2xpZW50DQogICAgICogQHBhcmFtIHtzdHJpbmd9IGh5cGVydHlVUkwgLSBVUkwgb2YgdGhlIGh5cGVydHkNCiAgICAgKiBAcGFyYW0ge01pbmlCdXN9IGJ1cyAtIE1pbmlCdXMNCiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29uZmlndXJhdGlvbiAtIGNvbmZpZ3VyYXRpb24gb2YgaHlwZXJ0eQ0KICAgICAqLwoKICAgIGZ1bmN0aW9uIFJvb21DbGllbnQoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKSB7CiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvb21DbGllbnQpOwoKICAgICAgICBpZiAoIWh5cGVydHlVUkwpIHRocm93IG5ldyBFcnJvcignVGhlIGh5cGVydHlVUkwgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CiAgICAgICAgaWYgKCFidXMpIHRocm93IG5ldyBFcnJvcignVGhlIE1pbmlCdXMgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CiAgICAgICAgaWYgKCFjb25maWd1cmF0aW9uKSB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBjb25maWd1cmF0aW9uIGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpOwoKICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUm9vbUNsaWVudCkuY2FsbCh0aGlzKSk7CgogICAgICAgIGwuZCgiaHlwZXJ0eVVSTDoiLCBoeXBlcnR5VVJMKTsKICAgICAgICBsLmQoImJ1czoiLCBidXMpOwogICAgICAgIGwuZCgiY29uZmlndXJhdGlvbjoiLCBjb25maWd1cmF0aW9uKTsKCiAgICAgICAgLy8gbWFrZSBwYXJhbWV0ZXJzIGF2YWlsYWJsZQogICAgICAgIF90aGlzLmh5cGVydHlVUkwgPSBoeXBlcnR5VVJMOwogICAgICAgIF90aGlzLmJ1cyA9IGJ1czsKICAgICAgICBfdGhpcy5jb25maWd1cmF0aW9uID0gY29uZmlndXJhdGlvbjsKCiAgICAgICAgLy8gY3JlYXRlIENvbnRleHQgU2NoZW1hIFVSTAogICAgICAgIF90aGlzLmNvbnRleHRTY2hlbWFVUkwgPSAnaHlwZXJ0eS1jYXRhbG9ndWU6Ly8nICsgKDAsIF91dGlscy5kaXZpZGVVUkwpKGh5cGVydHlVUkwpLmRvbWFpbiArICcvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db250ZXh0JzsKCiAgICAgICAgLy8gZGlzY292ZXJ5IHN0dWZmCiAgICAgICAgX3RoaXMuaHlwZXJ0eURpc2NvdmVyeSA9IG5ldyBfSHlwZXJ0eURpc2NvdmVyeTIuZGVmYXVsdChoeXBlcnR5VVJMLCBidXMpOwogICAgICAgIF90aGlzLmlkZW50aXR5TWFuYWdlciA9IG5ldyBfSWRlbnRpdHlNYW5hZ2VyMi5kZWZhdWx0KGh5cGVydHlVUkwsIGNvbmZpZ3VyYXRpb24ucnVudGltZVVSTCwgYnVzKTsKCiAgICAgICAgLy8gU3luY2hlcgogICAgICAgIF90aGlzLnN5bmNoZXIgPSBuZXcgX1N5bmNoZXIuU3luY2hlcihoeXBlcnR5VVJMLCBidXMsIGNvbmZpZ3VyYXRpb24pOwoKICAgICAgICAvLyB0aGlzIHByb21pc2UgY2hhaW4gcmVwcmVzZW50cyB0aGUgY29tcGxldGUgc2V0dXAgcHJvY2VzcwogICAgICAgIC8vIDEuIChhKSBkaXNjb3ZlciB0aGUgYXNzb2NpYXRlZCBpZGVudGl0eSBhbmQgKGIpIGdldCB0aGUgVVJMIG9mIHRoZSBSb29tU2VydmVyIGh5cGVydHkKICAgICAgICAvLyAyLiBnZXQgU3luY09iamVjdCBVUkxzIG9mIHJvb21zIHRoaXMgaWRlbnRpdHkgaXMgYWxsb3dlZCB0byBzdWJzY3JpYmUgdG8gZnJvbSB0aGUgUm9vbVNlcnZlciBoeXBlcnR5CiAgICAgICAgLy8gMy4gc3Vic2NyaWJlIHRvIHRob3NlIG9iamVjdHMKICAgICAgICBQcm9taXNlLmFsbChbX3RoaXMuZGlzY292ZXJJZGVudGl0eSgpLCBfdGhpcy5nZXRSb29tU2VydmVySHlwZXJ0eVVSTChyb29tU2VydmVySWRlbnRpdHkpXSkudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKTsKCiAgICAgICAgICAgIHZhciBpZGVudGl0eSA9IF9yZWYyWzBdOwogICAgICAgICAgICB2YXIgaHlwZXJ0eVVSTCA9IF9yZWYyWzFdOwoKICAgICAgICAgICAgX3RoaXMucm9vbVNlcnZlclVSTCA9IGh5cGVydHlVUkw7CiAgICAgICAgICAgIF90aGlzLmlkZW50aXR5ID0gaWRlbnRpdHk7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5yZXF1ZXN0Um9vbVVSTHMoaWRlbnRpdHksIGh5cGVydHlVUkwpOwogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHVybHMpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLnN1YnNjcmliZVRvUm9vbXModXJscyk7CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoc3luY1Jvb21zKSB7CiAgICAgICAgICAgIGwuZCgiSW5pdGlhbGl6YXRpb24gZG9uZSwgcm9vbSBTeW5jT2JqZWN0czoiLCBzeW5jUm9vbXMpOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBfdGhpczsKICAgIH0KCiAgICAvKioNCiAgICAgKiBEaXNjb3ZlciB0aGUgaWRlbnRpdHkgYXNzb2NpYXRlZCB3aXRoIHRoaXMgaHlwZXJ0eQ0KICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSAtIGZ1bGZpbGxzIHdpdGggdGhlIGlkZW50aXR5IHRoaXMgaHlwZXJ0eSBpcyBhc3NvY2lhdGVkIHdpdGgNCiAgICAgKi8KCgogICAgX2NyZWF0ZUNsYXNzKFJvb21DbGllbnQsIFt7CiAgICAgICAga2V5OiAnZGlzY292ZXJJZGVudGl0eScsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2NvdmVySWRlbnRpdHkoKSB7CiAgICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgICAgICAgbC5kKCJkaXNjb3ZlcklkZW50aXR5Iik7CiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICAvLyBmaXJzdCBkaXNjb3ZlclVzZXJSZWdpc3RlcmVkIGNhbGwKICAgICAgICAgICAgICAgIF90aGlzMi5pZGVudGl0eU1hbmFnZXIuZGlzY292ZXJVc2VyUmVnaXN0ZXJlZCgpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB1c2VyIGlzIGFuIG9iamVjdCwgaXQgaXMgYXNzdW1lZCB0aGUgZGlzY292ZXJ5IHN1Y2NlZWRlZAogICAgICAgICAgICAgICAgICAgIGlmICh1c2VyIGluc3RhbmNlb2YgT2JqZWN0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGwuZCgiZGlzY292ZXJlZCB1c2VyIGlkZW50aXR5OiIsIHVzZXIpOwogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdG9wIGludGVydmFsIGlmIGlkZW50aXR5IGlzIGtub3duCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodXNlci51c2VybmFtZSk7IC8vVE9ETyBtYXliZSBhIGRpZmZlcmVudCBwcm9wZXJ0eSB3aWxsIGJlIHVzZWQsIHRha2UgdXNlcm5hbWUgZm9yIG5vdwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlcnJvclN0cmluZyA9ICJkaXNjb3ZlcmluZyB1c2VyIGlkZW50aXR5IHNob3VsZCBoYXZlIHJldHVybmVkIHdpdGggYW4gb2JqZWN0LCBidXQgaW5zdGVhZCByZXR1cm5lZCB3aXRoOiAiICsgdXNlcjsKICAgICAgICAgICAgICAgICAgICAgICAgbC53KGVycm9yU3RyaW5nKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yU3RyaW5nKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICAgIGwudygiZGlzY292ZXJpbmcgdXNlciBpZGVudGl0eSBmYWlsZWQgd2l0aDoiLCBlKTsKICAgICAgICAgICAgICAgICAgICBsLmQoInRyeWluZyBkaXNjb3ZlcnkgYWdhaW4gYWZ0ZXIgYSB0aW1lb3V0Iik7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgZGlzY292ZXJ5IGZhaWxzLCByZXRyeSBhZnRlciBzb21lIHRpbWVvdXQKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5kaXNjb3ZlcklkZW50aXR5KCkudGhlbihyZXNvbHZlKTsKICAgICAgICAgICAgICAgICAgICB9LCA1MDApOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldHMgdGhlIGh5cGVydHlVUkwgb2YgdGhlIFJvb21TZXJ2ZXIgaHlwZXJ0eQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gcm9vbVNlcnZlclVSTCAtIGlkZW50aXR5IHRoYXQgdGhlIGRlc2lyZWQgUm9vbVNlcnZlciBoeXBlcnR5IGlzIGFzc29jaWF0ZWQgdG8NCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2V9IC0gZnVsZmlsbHMgd2l0aCB0aGUgaHlwZXJ0eVVSTCBvZiB0aGUgUm9vbVNlcnZlciBoeXBlcnR5DQogICAgICAgICAqLwoKICAgIH0sIHsKICAgICAgICBrZXk6ICdnZXRSb29tU2VydmVySHlwZXJ0eVVSTCcsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJvb21TZXJ2ZXJIeXBlcnR5VVJMKHJvb21TZXJ2ZXJVUkwpIHsKICAgICAgICAgICAgbC5kKCJnZXRSb29tU2VydmVySHlwZXJ0eVVSTDoiLCBbcm9vbVNlcnZlclVSTF0pOwogICAgICAgICAgICByZXR1cm4gdGhpcy5oeXBlcnR5RGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlcihyb29tU2VydmVyVVJMLCBudWxsKS50aGVuKGZ1bmN0aW9uIChoeXBlcnRpZXMpIHsKICAgICAgICAgICAgICAgIC8vbC5kKCJmb3VuZCBoeXBlcnRpZXM6ICIsIGh5cGVydGllcyk7CiAgICAgICAgICAgICAgICB2YXIgbGF0ZXN0Um9vbVNlcnZlckh5cGVydHkgPSB2b2lkIDA7CiAgICAgICAgICAgICAgICB2YXIgbGF0ZXN0RGF0ZSA9IHZvaWQgMDsKICAgICAgICAgICAgICAgIHZhciBoeXBlcnR5ID0gdm9pZCAwOwogICAgICAgICAgICAgICAgLy8gaXRlcmF0ZSB0aHJvdWdoIGh5cGVydGllcyB0byBmaW5kIG1vc3QgY3VycmVudCBSb29tU2VydmVyIGh5cGVydHkKICAgICAgICAgICAgICAgIGZvciAoaHlwZXJ0eSBpbiBoeXBlcnRpZXMpIHsKICAgICAgICAgICAgICAgICAgICBoeXBlcnR5ID0gaHlwZXJ0aWVzW2h5cGVydHldOwogICAgICAgICAgICAgICAgICAgIC8vbC5kKCJjaGVja2luZyBoeXBlcnR5IiwgaHlwZXJ0eSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIG5hbWUgPSBoeXBlcnR5LmRlc2NyaXB0b3Iuc3Vic3RyaW5nKGh5cGVydHkuZGVzY3JpcHRvci5sYXN0SW5kZXhPZignLycpICsgMSk7CiAgICAgICAgICAgICAgICAgICAgLy9sLmQoImNoZWNraW5nIG5hbWU6IiwgbmFtZSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUgPT09ICJSb29tU2VydmVyIikgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9IGh5cGVydHkuc3RhcnRpbmdUaW1lOwogICAgICAgICAgICAgICAgICAgICAgICAvL2wuZCgiaXMgcm9vbSBzZXJ2ZXIgaHlwZXJ0eSB3aXRoIHN0YXJ0aW5nVGltZToiLCBkYXRlKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFsYXRlc3REYXRlIHx8IGRhdGUgPiBsYXRlc3REYXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2wuZCgiaXMgbmV3IGxhdGVzdCBoeXBlcnR5OiIsIGRhdGUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF0ZXN0RGF0ZSA9IGRhdGU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXRlc3RSb29tU2VydmVySHlwZXJ0eSA9IGh5cGVydHk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAobGF0ZXN0Um9vbVNlcnZlckh5cGVydHkpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbGF0ZXN0Um9vbVNlcnZlckh5cGVydHkuaHlwZXJ0eUlEOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBsLmUoIlVuYWJsZSB0byBmaW5kIFJvb21TZXJ2ZXIgaHlwZXJ0eSEiKTsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICAvKioNCiAgICAgICAgICogU3Vic2NyaWJlcyB0byBlYWNoIFN5bmNPYmplY3QgZWFjaCBVUkwgaW4gdGhlIHByb3ZpZGVkIGFycmF5IHBvaW50cyB0bw0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSB1cmxzIC0gYXJyYXkgb2YgVVJMcyB0aGF0IHBvaW50IHRvIFN5bmNPYmplY3RzDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSAtIGZ1bGZpbGxzIHdpdGggYW4gYXJyYXkgb2YgU3luY09iamVjdHMNCiAgICAgICAgICovCgogICAgfSwgewogICAgICAgIGtleTogJ3N1YnNjcmliZVRvUm9vbXMnLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzdWJzY3JpYmVUb1Jvb21zKHVybHMpIHsKICAgICAgICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAgICAgICBsLmQoInN1YnNjcmliZVRvUm9vbXM6IiwgW3VybHNdKTsKICAgICAgICAgICAgdmFyIHN1YnNjcmliZVByb21pc2VzID0gW107CiAgICAgICAgICAgIHVybHMuZm9yRWFjaChmdW5jdGlvbiAodXJsKSB7CiAgICAgICAgICAgICAgICB2YXIgcCA9IF90aGlzMy5zdWJzY3JpYmUodXJsKTsKICAgICAgICAgICAgICAgIHN1YnNjcmliZVByb21pc2VzLnB1c2gocCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoc3Vic2NyaWJlUHJvbWlzZXMpOwogICAgICAgIH0KCiAgICAgICAgLyoqDQogICAgICAgICAqIFJlcXVlc3RzIGEgbGlzdCBvZiBVUkxzIG9mIFN5bmNPYmplY3RzIHJlcHJlc2VudGluZyByb29tcyBmcm9tIHRoZSBkZXNpcmVkIHJlbW90ZSBoeXBlcnR5DQogICAgICAgICAqIHRoYXQgdGhlIGdpdmVuIGlkZW50aXR5IGlzIGFsbG93ZWQgdG8gbW9uaXRvciAmIGNvbnRyb2wNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGlkZW50aXR5IC0gaWRlbnRpdHkgcHJvdmlkZWQgdG8gdGhlIHJlbW90ZSBoeXBlcnR5IHRvIGRlY2lkZSB3aGljaCBVUkxzIGl0IHdpbGwgcmV0dXJuIChhY2Nlc3MgY29udHJvbCkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHJlbW90ZUh5cGVydHlVUkwgLSBoeXBlcnR5IFVSTCBwb2ludGluZyB0byB0aGUgcmVtb3RlIChSb29tU2VydmVyKSBoeXBlcnR5DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSAtIGZ1bGZpbGxzIHdpdGggYW4gYXJyYXkgb2YgU3luY09iamVjdCBVUkxzDQogICAgICAgICAqLwoKICAgIH0sIHsKICAgICAgICBrZXk6ICdyZXF1ZXN0Um9vbVVSTHMnLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZXF1ZXN0Um9vbVVSTHMoaWRlbnRpdHksIHJlbW90ZUh5cGVydHlVUkwpIHsKICAgICAgICAgICAgbC5kKCJyZXF1ZXN0Um9vbVVSTHM6IiwgW2lkZW50aXR5LCByZW1vdGVIeXBlcnR5VVJMXSk7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGVPblJlbW90ZShyZW1vdGVIeXBlcnR5VVJMLCAiZ2V0Um9vbXMiLCBbaWRlbnRpdHldKTsKICAgICAgICB9CgogICAgICAgIC8qKg0KICAgICAgICAgKiBpbnZva2VzIGEgZnVuY3Rpb24gYXQgdGhlIHJlbW90ZSBoeXBlcnR5DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSByZW1vdGVIeXBlcnR5VVJMIC0gVVJMIG9mIHRoZSByZW1vdGUgaHlwZXJ0eQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kIC0gbmFtZSBvZiB0aGUgZnVuY3Rpb24gdG8gYmUgaW52b2tlZA0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBwYXJhbXMgLSBwYXJhbWV0ZXJzIHByb3ZpZGVkIGZvciB0aGUgcmVtb3RlIGZ1bmN0aW9uDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSAtIGZ1bGZpbGxzIHdpdGggdGhlIHJlc3VsdCBvZiB0aGUgcmVtb3RlIGZ1bmN0aW9uIGNhbGwNCiAgICAgICAgICovCgogICAgfSwgewogICAgICAgIGtleTogJ2V4ZWN1dGVPblJlbW90ZScsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGV4ZWN1dGVPblJlbW90ZShyZW1vdGVIeXBlcnR5VVJMLCBtZXRob2QsIHBhcmFtcykgewogICAgICAgICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICBpZiAoIXJlbW90ZUh5cGVydHlVUkwgfHwgIW1ldGhvZCkgewogICAgICAgICAgICAgICAgICAgIHJlamVjdCgiaHlwZXJ0eSBVUkwgKCIgKyByZW1vdGVIeXBlcnR5VVJMICsgIikgYW5kIG1ldGhvZCAoIiArIG1ldGhvZCArICIpIGFyZSBtYW5kYXRvcnkhIik7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy8gY3JlYXQgZXhlY3V0ZSBtZXNzYWdlCiAgICAgICAgICAgICAgICB2YXIgbXNnID0gewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdleGVjdXRlJywgZnJvbTogX3RoaXM0Lmh5cGVydHlVUkwsIHRvOiByZW1vdGVIeXBlcnR5VVJMLAogICAgICAgICAgICAgICAgICAgIGJvZHk6IHsgbWV0aG9kOiBtZXRob2QsIHBhcmFtczogcGFyYW1zIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAvLyBzZW5kIG1lc3NhZ2UsIHJlc29sdmUgb24gcmVwbHkKICAgICAgICAgICAgICAgIF90aGlzNC5idXMucG9zdE1lc3NhZ2UobXNnLCBmdW5jdGlvbiAocmVwbHkpIHsKICAgICAgICAgICAgICAgICAgICBsLmQoImdvdCAiICsgbWV0aG9kICsgIiByZXBseSEiLCByZXBseSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybHMgPSByZXBseS5ib2R5LnZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHVybHMpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGwuZSgiZ2V0Um9vbXMgcmVxdWVzdCByZWplY3RlZCAoIiArIHJlcGx5LmJvZHkuY29kZSArICIpOiIsIHJlcGx5LmJvZHkudmFsdWUpOwogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QocmVwbHkuYm9keS52YWx1ZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgLyoqDQogICAgICAgICAqIFN1YnNjcmliZSB0byBhbiBvYmplY3QgdXNpbmcgdGhlIFN5bmNoZXINCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHJvb21VUkwgLSBVUkwgb2YgdGhlIG9iamVjdA0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gLSBQcm9taXNlIHRoYXQgZnVsZmlsbHMgd2l0aCB0aGUgc3Vic2NyaWJlZCBvYmplY3QNCiAgICAgICAgICovCgogICAgfSwgewogICAgICAgIGtleTogJ3N1YnNjcmliZScsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHN1YnNjcmliZShyb29tVVJMKSB7CiAgICAgICAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgICAgICAgbC5kKCJzdWJzY3JpYmU6IiwgW3Jvb21VUkxdKTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3luY2hlci5zdWJzY3JpYmUodGhpcy5jb250ZXh0U2NoZW1hVVJMLCByb29tVVJMKS50aGVuKGZ1bmN0aW9uIChyb29tKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oInN1YnNjcmliZWQgdG8gb2JqZWN0OiIsIHJvb20pOwoKICAgICAgICAgICAgICAgIC8vIHJlZ2lzdGVyIG9uQ2hhbmdlIGNhbGxiYWNrCiAgICAgICAgICAgICAgICByb29tLm9uQ2hhbmdlKCcqJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgbC5kKCdvbkNoYW5nZSByZWNlaXZlZDonLCBldmVudCk7CiAgICAgICAgICAgICAgICAgICAgbC5kKCJjdXJyZW50IHJvb20gc3RhdGU6Iiwgcm9vbSk7CiAgICAgICAgICAgICAgICAgICAgX3RoaXM1LnRyaWdnZXIoJ2NoYW5nZWRSb29tJywgcm9vbSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAvLyB0cmlnZ2VyIHRoZSBuZXdSb29tIGV2ZW50CiAgICAgICAgICAgICAgICBfdGhpczUudHJpZ2dlcignbmV3Um9vbScsIHJvb20pOwoKICAgICAgICAgICAgICAgIC8vIG1ha2UgaXQgYXZhaWxhYmxlIGZvciBhZGRDaGlsZCB0ZXN0CiAgICAgICAgICAgICAgICBfdGhpczUucm9vbSA9IHJvb207CiAgICAgICAgICAgICAgICByZXR1cm4gcm9vbTsKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihyZWFzb24pOwogICAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIC8qKg0KICAgICAgICAgKiBleGVjdXRlcyBhbiBhY3Rpb24gb24gdGhlIFJvb21TZXJ2ZXIgaHlwZXJ0eQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGV2aWNlTmFtZSAtIG5hbWUgb2YgdGhlIHRhcmdldCBkZXZpY2UsIGUuZy4gIm15RGV2aWNlIg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gb2JqZWN0VHlwZSAtIHRoZSB0eXBlIG9mIHRoZSB0YXJnZXQgZGV2aWNlIHBhcnQgdGhhdCBpcyBiZWluZyBjb250cm9sbGVkLCBlLmcuICJsaWdodCINCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG9iamVjdElkIC0gdGhlIElEIG9mIHRoZSB0YXJnZXQgZGV2aWNlJ3MgcGFydCB0aGF0IGlzIGJlaW5nIGNvbnRyb2xsZWQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHJlc291cmNlVHlwZSAtIHRoZSByZXNvdXJjZSB0aGF0IGlzIGJlaW5nIGNoYW5nZWQsIGUuZy4gImlzT24iDQogICAgICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgLSB0aGUgdmFsdWUgdGhhdCB0aGUgcmVzb3VyY2UgaXMgYmVpbmcgY2hhbmdlZCB0bw0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gLSBmdWxmaWxscyB3aXRoIHRoZSByZXN1bHQgb2YgdGhlIHJlbW90ZSBmdW5jdGlvbiBjYWxsDQogICAgICAgICAqLwoKICAgIH0sIHsKICAgICAgICBrZXk6ICdzZW5kQWN0aW9uJywKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc2VuZEFjdGlvbihkZXZpY2VOYW1lLCBvYmplY3RUeXBlLCBvYmplY3RJZCwgcmVzb3VyY2VUeXBlLCB2YWx1ZSkgewogICAgICAgICAgICAvLyBleGFtcGxlOiB7Im1vZGUiOiJ3cml0ZSIsICJkZXZpY2VOYW1lIjogIm15UmFzcGJlcnJ5IiwgIm9iamVjdFR5cGUiOiAibGlnaHQiLCAib2JqZWN0SWQiOiAiMSIsICJyZXNvdXJjZVR5cGUiOiAiaXNPbiIsICJ2YWx1ZSI6ICJmYWxzZSJ9CiAgICAgICAgICAgIHZhciBqc29uID0gewogICAgICAgICAgICAgICAgIm1vZGUiOiAid3JpdGUiLAogICAgICAgICAgICAgICAgImRldmljZU5hbWUiOiBkZXZpY2VOYW1lLAogICAgICAgICAgICAgICAgIm9iamVjdFR5cGUiOiBvYmplY3RUeXBlLAogICAgICAgICAgICAgICAgIm9iamVjdElkIjogb2JqZWN0SWQsCiAgICAgICAgICAgICAgICAicmVzb3VyY2VUeXBlIjogcmVzb3VyY2VUeXBlLAogICAgICAgICAgICAgICAgInZhbHVlIjogdmFsdWUKICAgICAgICAgICAgfTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0ZU9uUmVtb3RlKHRoaXMucm9vbVNlcnZlclVSTCwgImFjdGlvbiIsIFtqc29uXSk7CiAgICAgICAgfQogICAgfV0pOwoKICAgIHJldHVybiBSb29tQ2xpZW50Owp9KF9FdmVudEVtaXR0ZXIzLmRlZmF1bHQpOwoKZnVuY3Rpb24gYWN0aXZhdGUoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKSB7CgogICAgcmV0dXJuIHsKICAgICAgICBuYW1lOiAnUm9vbUNsaWVudCcsCiAgICAgICAgaW5zdGFuY2U6IG5ldyBSb29tQ2xpZW50KGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbikKICAgIH07Cn0KbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Cgp9LHsiLi4vdXRpbHMvRXZlbnRFbWl0dGVyIjo2LCIuLi91dGlscy91dGlscyI6NywiLi9Mb2dnZXIiOjQsInNlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvSHlwZXJ0eURpc2NvdmVyeSI6MSwic2VydmljZS1mcmFtZXdvcmsvZGlzdC9JZGVudGl0eU1hbmFnZXIiOjIsInNlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlciI6M31dLDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewoidXNlIHN0cmljdCI7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgICB2YWx1ZTogdHJ1ZQp9KTsKCnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpOwoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgovKioNCiAqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KICogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiAqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KICogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiAqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KICogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KICogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQogKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KICoNCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQogKg0KICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCiAqDQogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQogKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCiAqKi8KCi8qKg0KICogRXZlbnRFbWl0dGVyDQogKiBBbGwgY2xhc3NlcyB3aGljaCBleHRlbmRzIHRoaXMsIGNhbiBoYXZlIGFkZEV2ZW50TGlzdGVuZXIgYW5kIHRyaWdnZXIgZXZlbnRzOw0KICovCgp2YXIgRXZlbnRFbWl0dGVyID0gZnVuY3Rpb24gKCkgewoKICAgIC8qKg0KICAgICAqIEluaXRpYWxpemVzIHRoZSBFdmVudEVtaXR0ZXINCiAgICAgKi8KCiAgICBmdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7CiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV2ZW50RW1pdHRlcik7CgogICAgICAgIC8vIHNldCB1cCBsaXN0ZW5lciBob2xkZXIKICAgICAgICB0aGlzLl9fZXZlbnRMaXN0ZW5lcnMgPSB7fTsKICAgIH0KCiAgICAvKioNCiAgICAgKiBhZGRFdmVudExpc3RlbmVyIGxpc3RlbiBmb3IgYW4gZXZlbnRUeXBlDQogICAgICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgIGV2ZW50VHlwZSAtIGxpc3RlbmluZyBmb3IgdGhpcyB0eXBlIG9mIGV2ZW50DQogICAgICogQHBhcmFtICB7RnVuY3Rpb259ICAgICAgIGNiICAgICAgICAtIGNhbGxiYWNrIGZ1bmN0aW9uIHdpbGwgYmUgZXhlY3V0ZWQgd2hlbiB0aGUgZXZlbnQgaXQgaXMgaW52b2tlZA0KICAgICAqLwoKCiAgICBfY3JlYXRlQ2xhc3MoRXZlbnRFbWl0dGVyLCBbewogICAgICAgIGtleTogImFkZEV2ZW50TGlzdGVuZXIiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2IpIHsKICAgICAgICAgICAgLy8gYWRkIGNhbGxiYWNrIHRvIHRoZSBsaXN0IG9mIGNhbGxiYWNrcyBmb3IgdGhpcyB0eXBlCiAgICAgICAgICAgIC8vIGlmIHRoZSBsaXN0IGRvZXNuJ3QgZXhpc3QgeWV0LCBjcmVhdGUgaXQgd2l0aCB0aGUgY2FsbGJhY2sgYXMgbWVtYmVyCiAgICAgICAgICAgIGlmIChjYiAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIGlmICghdGhpcy5fX2V2ZW50TGlzdGVuZXJzW2V2ZW50VHlwZV0pIHRoaXMuX19ldmVudExpc3RlbmVyc1tldmVudFR5cGVdID0gW2NiXTtlbHNlIHRoaXMuX19ldmVudExpc3RlbmVyc1tldmVudFR5cGVdLnB1c2goY2IpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvKioNCiAgICAgICAgICogSW52b2tlIHRoZSBldmVudFR5cGUNCiAgICAgICAgICogQHBhcmFtICB7c3RyaW5nfSBldmVudFR5cGUgLSBldmVudCB3aWxsIGJlIGludm9rZWQNCiAgICAgICAgICogQHBhcmFtICB7b2JqZWN0fSBwYXJhbXMgLSBwYXJhbWV0ZXJzIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBhZGRFdmVudExpc3RlbmVyDQogICAgICAgICAqLwoKICAgIH0sIHsKICAgICAgICBrZXk6ICJ0cmlnZ2VyIiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdHJpZ2dlcihldmVudFR5cGUsIHBhcmFtcykgewogICAgICAgICAgICAvLyBjaGVjayBpZiB0aGVyZSBhcmUgY2FsbGJhY2tzIGZvciB0aGlzIHR5cGUKICAgICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IHRoaXMuX19ldmVudExpc3RlbmVyc1tldmVudFR5cGVdOwogICAgICAgICAgICBpZiAoY2FsbGJhY2tzKSB7CiAgICAgICAgICAgICAgICBjYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHsKICAgICAgICAgICAgICAgICAgICAvLyBjYXRjaCBlcnJvcnMgdG8gbWFrZSBzdXJlIGV2ZXJ5IGNhbGxiYWNrIGlzIGJlaW5nIGNhbGxlZAogICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNiKHBhcmFtcyk7CiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImNhbGxpbmcgbGlzdGVuZXIgIiArIGNiLm5hbWUgKyAiIGZvciBldmVudCB0eXBlICIgKyBldmVudFR5cGUgKyAiIHdpdGggcGFyYW1ldGVycyAnIiArIHBhcmFtcyArICInIHJlc3VsdGVkIGluIGFuIGVycm9yISIsIGUpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfV0pOwoKICAgIHJldHVybiBFdmVudEVtaXR0ZXI7Cn0oKTsKCmV4cG9ydHMuZGVmYXVsdCA9IEV2ZW50RW1pdHRlcjsKbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWyJkZWZhdWx0Il07Cgp9LHt9XSw3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRpdmlkZVVSTCA9IGRpdmlkZVVSTDsKZXhwb3J0cy5kZWVwQ2xvbmUgPSBkZWVwQ2xvbmU7CmV4cG9ydHMuZ2V0VXNlck1lZGlhID0gZ2V0VXNlck1lZGlhOwpleHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTsKZXhwb3J0cy5nZXRUZW1wbGF0ZSA9IGdldFRlbXBsYXRlOwovKioNCiAqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KICogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiAqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KICogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiAqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KICogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KICogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQogKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KICoNCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQogKg0KICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCiAqDQogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQogKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCiAqKi8KCi8vIGpzaGludCBicm93c2VyOnRydWUsIGpxdWVyeTogdHJ1ZQovLyBqc2hpbnQgdmFyc3RtdDogdHJ1ZQovKiBnbG9iYWwgSGFuZGxlYmFycyAqLwoKLyoqDQogKiBTdXBwb3J0IG1vZHVsZSB3aXRoIHNvbWUgZnVuY3Rpb25zIHdpbGwgYmUgdXNlZnVsDQogKiBAbW9kdWxlIHV0aWxzDQogKi8KCi8qKg0KICogQHR5cGVkZWYgZGl2aWRlVVJMDQogKiBAdHlwZSBPYmplY3QNCiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0eXBlIFRoZSB0eXBlIG9mIFVSTA0KICogQHByb3BlcnR5IHtzdHJpbmd9IGRvbWFpbiBUaGUgZG9tYWluIG9mIFVSTA0KICogQHByb3BlcnR5IHtzdHJpbmd9IGlkZW50aXR5IFRoZSBpZGVudGl0eSBvZiBVUkwNCiAqLwoKLyoqDQogKiBEaXZpZGUgYW4gdXJsIGluIHR5cGUsIGRvbWFpbiBhbmQgaWRlbnRpdHkNCiAqIEBwYXJhbSAge1VSTC5VUkx9IHVybCAtIHVybCBhZGRyZXNzDQogKiBAcmV0dXJuIHtkaXZpZGVVUkx9IHRoZSByZXN1bHQgb2YgZGl2aWRlVVJMDQogKi8KZnVuY3Rpb24gZGl2aWRlVVJMKHVybCkgewoKICAvLyBsZXQgcmUgPSAvKFthLXpBLVotXSopPzpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fVwuW2Etel17Miw2fVxiKSooXC9bXC9cZFx3XC4tXSopKig/OltcP10pKiguKykqL2dpOwogIHZhciByZSA9IC8oW2EtekEtWi1dKik6XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn0pKFstYS16QS1aMC05QDolLl9cK34jPVwvXSopL2dpOwogIHZhciBzdWJzdCA9ICckMSwkMiwkMyc7CiAgdmFyIHBhcnRzID0gdXJsLnJlcGxhY2UocmUsIHN1YnN0KS5zcGxpdCgnLCcpOwoKICAvLyBJZiB0aGUgdXJsIGhhcyBubyBwcm90b2NvbCwgdGhlIGRlZmF1bHQgcHJvdG9jb2wgc2V0IGlzIGh0dHBzCiAgaWYgKHBhcnRzWzBdID09PSB1cmwpIHsKICAgIHBhcnRzWzBdID0gJ2h0dHBzJzsKICAgIHBhcnRzWzFdID0gdXJsOwogIH0KCiAgdmFyIHJlc3VsdCA9IHsKICAgIHR5cGU6IHBhcnRzWzBdLAogICAgZG9tYWluOiBwYXJ0c1sxXSwKICAgIGlkZW50aXR5OiBwYXJ0c1syXQogIH07CgogIHJldHVybiByZXN1bHQ7Cn0KCi8qKg0KICogTWFrZSBhIENPUFkgb2YgdGhlIG9yaWdpbmFsIGRhdGENCiAqIEBwYXJhbSAge09iamVjdH0gIG9iaiAtIG9iamVjdCB0byBiZSBjbG9uZWQNCiAqIEByZXR1cm4ge09iamVjdH0NCiAqLwpmdW5jdGlvbiBkZWVwQ2xvbmUob2JqKSB7CiAgLy9UT0RPOiBzaW1wbGUgYnV0IGluZWZmaWNpZW50IEpTT04gZGVlcCBjbG9uZS4uLgogIGlmIChvYmopIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iaikpOwp9CgovKioNCiAqIEdldCBXZWJSVEMgQVBJIHJlc291cmNlcw0KICogQHBhcmFtICB7b2JqZWN0fSAgICAgb3B0aW9ucyBPYmplY3QgY29udGFpbmluZyB0aGUgaW5mb3JtYXRpb24gdGhhdCByZXNvdXJjZXMgd2lsbCBiZSB1c2VkIChjYW1lcmEsIG1pYywgcmVzb2x1dGlvbiwgZXRjKTsNCiAqIEByZXR1cm4ge1Byb21pc2V9DQogKi8KZnVuY3Rpb24gZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKSB7CgogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CgogICAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoY29uc3RyYWludHMpLnRoZW4oZnVuY3Rpb24gKG1lZGlhU3RyZWFtKSB7CiAgICAgIHJlc29sdmUobWVkaWFTdHJlYW0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICByZWplY3QocmVhc29uKTsKICAgIH0pOwogIH0pOwp9CgpmdW5jdGlvbiBzZXJpYWxpemUoKSB7CgogICQuZm4uc2VyaWFsaXplT2JqZWN0ID0gZnVuY3Rpb24gKCkgewogICAgdmFyIG8gPSB7fTsKICAgIHZhciBhID0gdGhpcy5zZXJpYWxpemVBcnJheSgpOwogICAgJC5lYWNoKGEsIGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKG9bdGhpcy5uYW1lXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgaWYgKCFvW3RoaXMubmFtZV0ucHVzaCkgewogICAgICAgICAgb1t0aGlzLm5hbWVdID0gW29bdGhpcy5uYW1lXV07CiAgICAgICAgfQoKICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBvW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlIHx8ICcnOwogICAgICB9CiAgICB9KTsKCiAgICByZXR1cm4gbzsKICB9OwoKICAkLmZuLnNlcmlhbGl6ZU9iamVjdEFycmF5ID0gZnVuY3Rpb24gKCkgewogICAgdmFyIG8gPSB7fTsKICAgIHZhciBhID0gdGhpcy5zZXJpYWxpemVBcnJheSgpOwogICAgJC5lYWNoKGEsIGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKG9bdGhpcy5uYW1lXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgaWYgKCFvW3RoaXMubmFtZV0ucHVzaCkgewogICAgICAgICAgb1t0aGlzLm5hbWVdID0gW29bdGhpcy5uYW1lXV07CiAgICAgICAgfQoKICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoIW9bdGhpcy5uYW1lXSkgb1t0aGlzLm5hbWVdID0gW107CiAgICAgICAgb1t0aGlzLm5hbWVdLnB1c2godGhpcy52YWx1ZSB8fCAnJyk7CiAgICAgIH0KICAgIH0pOwoKICAgIHJldHVybiBvOwogIH07Cn0KCmZ1bmN0aW9uIGdldFRlbXBsYXRlKHBhdGgsIHNjcmlwdCkgewoKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewoKICAgIGlmIChIYW5kbGViYXJzLnRlbXBsYXRlcyA9PT0gdW5kZWZpbmVkIHx8IEhhbmRsZWJhcnMudGVtcGxhdGVzW25hbWVdID09PSB1bmRlZmluZWQpIHsKICAgICAgSGFuZGxlYmFycy50ZW1wbGF0ZXMgPSB7fTsKICAgIH0gZWxzZSB7CiAgICAgIHJlc29sdmUoSGFuZGxlYmFycy50ZW1wbGF0ZXNbbmFtZV0pOwogICAgfQoKICAgIHZhciB0ZW1wbGF0ZUZpbGUgPSAkLmFqYXgoewogICAgICB1cmw6IHBhdGggKyAnLmhicycsCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MoZGF0YSkgewogICAgICAgIEhhbmRsZWJhcnMudGVtcGxhdGVzW25hbWVdID0gSGFuZGxlYmFycy5jb21waWxlKGRhdGEpOwogICAgICB9LAoKICAgICAgZmFpbDogZnVuY3Rpb24gZmFpbChyZWFzb24pIHsKICAgICAgICByZXR1cm4gcmVhc29uOwogICAgICB9CiAgICB9KTsKCiAgICB2YXIgc2NyaXB0RmlsZSA9ICQuZ2V0U2NyaXB0KHNjcmlwdCk7CgogICAgdmFyIHJlcXVlc3RzID0gW107CiAgICBpZiAocGF0aCkgcmVxdWVzdHMucHVzaCh0ZW1wbGF0ZUZpbGUpOwogICAgaWYgKHNjcmlwdCkgcmVxdWVzdHMucHVzaChzY3JpcHRGaWxlKTsKCiAgICBQcm9taXNlLmFsbChyZXF1ZXN0cykudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgIHJlc29sdmUoSGFuZGxlYmFycy50ZW1wbGF0ZXNbbmFtZV0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICByZWplY3QocmVhc29uKTsKICAgIH0pOwogIH0pOwp9Cgp9LHt9XX0se30sWzVdKSg1KQp9KTs=",
      "sourceCodeClassname": "RoomClient",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10017,
    "version": "0.1",
    "description": "Description of RoomClient",
    "objectName": "RoomClient",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomServer": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomServer",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10018,
    "version": "0.1",
    "description": "Description of RoomServer",
    "objectName": "RoomServer",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Communication"
    ],
    "accessControlPolicy": "somePolicy"
  }
}
